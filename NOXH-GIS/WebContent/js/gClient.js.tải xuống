/*

  OpenLayers.js -- OpenLayers Map Viewer Library

  Copyright 2005-2011 OpenLayers Contributors, released under the FreeBSD
  license. Please see http://svn.openlayers.org/trunk/openlayers/license.txt
  for the full text of the license.

  Includes compressed code under the following licenses:

  (For uncompressed versions of the code used please see the
  OpenLayers SVN repository: <http://openlayers.org/>)

*/

/* Contains portions of Prototype.js:
 *
 * Prototype JavaScript framework, version 1.4.0
 *  (c) 2005 Sam Stephenson <sam@conio.net>
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://prototype.conio.net/
 *
 *--------------------------------------------------------------------------*/

/**  
*  
*  Contains portions of Rico <http://openrico.org/>
* 
*  Copyright 2005 Sabre Airline Solutions  
*  
*  Licensed under the Apache License, Version 2.0 (the "License"); you
*  may not use this file except in compliance with the License. You
*  may obtain a copy of the License at
*  
*         http://www.apache.org/licenses/LICENSE-2.0  
*  
*  Unless required by applicable law or agreed to in writing, software
*  distributed under the License is distributed on an "AS IS" BASIS,
*  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
*  implied. See the License for the specific language governing
*  permissions and limitations under the License. 
*
**/

/**
 * Contains XMLHttpRequest.js <http://code.google.com/p/xmlhttprequest/>
 * Copyright 2007 Sergey Ilinsky (http://www.ilinsky.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 */

/**
 * Contains portions of Gears <http://code.google.com/apis/gears/>
 *
 * Copyright 2007, Google Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *  1. Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *  3. Neither the name of Google Inc. nor the names of its contributors may be
 *     used to endorse or promote products derived from this software without
 *     specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * Sets up google.gears.*, which is *the only* supported way to access Gears.
 *
 * Circumvent this file at your own risk!
 *
 * In the future, Gears may automatically define google.gears.* without this
 * file. Gears may use these objects to transparently fix bugs and compatibility
 * issues. Applications that use the code below will continue to work seamlessly
 * when that happens.
 */

/**
 * OpenLayers.Util.pagePosition is based on Yahoo's getXY method, which is
 * Copyright (c) 2006, Yahoo! Inc.
 * All rights reserved.
 * 
 * Redistribution and use of this software in source and binary forms, with or
 * without modification, are permitted provided that the following conditions
 * are met:
 * 
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 * 
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * 
 * * Neither the name of Yahoo! Inc. nor the names of its contributors may be
 *   used to endorse or promote products derived from this software without
 *   specific prior written permission of Yahoo! Inc.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 */(function () {
    var singleFile = (typeof gClient == "object" && gClient.singleFile); var scriptName = (!singleFile) ? "lib/gClient.js" : "gClient.js"; var jsFiles = window.gClient; window.gClient = {
        _getScriptLocation: (function () {
            var r = new RegExp("(^|(.*?\\/))(" + scriptName + ")(\\?|$)"), s = document.getElementsByTagName('script'), src, m, l = ""; for (var i = 0, len = s.length; i < len; i++) { src = s[i].getAttribute('src'); if (src) { var m = src.match(r); if (m) { l = m[1]; break; } } }
return(function(){return l;});})()};})();gClient.VERSION_NUMBER="0.1";﻿
gClient.Address=OpenLayers.Class({address:null,street:null,ward:null,district:null,province:null,country:null,zip:null,lon:null,lat:null,fullAddress:null,initialize:function(){},toString:function(){return"formattedAddress";},toShortString:function(){return formattedAddress;},clone:function(){return new gClient.Address();},CLASS_NAME:"gClient.Address"});﻿
gClient.Utils=gClient.Utils||{};gClient.Utils.Common=OpenLayers.Class({initialize:function(){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}},destroy:function(){},convertMetertoDegree:function(length){var geomUnits="m";var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT["dd"];if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[geomUnits];length*=(inPerMapUnit/inPerDisplayUnit);}
return length;},redrawGeomeWithBuffer:function(layer,buffer,clean){if(clean){layer.removeAllFeatures();}
var graphic=new OpenLayers.Feature.Vector(buffer,null,null);layer.addFeatures([graphic]);return[graphic];},generateGeometryBuffer:function(geometry,radius){var reader=new jsts.io.WKTReader();var geometryFactory=new jsts.geom.GeometryFactory();var polyonBuffer;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){var point=geometryFactory.createPoint(new jsts.geom.Coordinate(geometry.x,geometry.y));polyonBuffer=point.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var arrPoint=geometry.getVertices();var strPolygon="POLYGON ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strPolygon+=","+arrPoint[i].x+" "+arrPoint[i].y;strPolygon+=")";var inputPolygon=reader.read(strPolygon);if(radius==0||radius==undefined)
return geometry;polyonBuffer=inputPolygon.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"||geometry.CLASS_NAME=="OpenLayers.Geometry.MultiLineString"){var arrPoint=geometry.getVertices();var strLine="LINESTRING ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strLine+=","+arrPoint[i].x+" "+arrPoint[i].y;strLine+=")";var inputLine=reader.read(strLine);polyonBuffer=inputLine.buffer(radius);}
if(polyonBuffer!=undefined){var parser=new jsts.io.OpenLayersParser();polyonBuffer=parser.write(polyonBuffer);}
return polyonBuffer;},CLASS_NAME:"gClient.Utils.Common"});function getScriptLocation(){var r=new RegExp("(^|(.*?\\/))("+'gClient.js'+")(\\?|$)"),s=document.getElementsByTagName('script'),src,m,l="";for(var i=0,len=s.length;i<len;i++){src=s[i].getAttribute('src');if(src){var m=src.match(r);if(m){l=m[1];break;}}}
return l;};Array.prototype.contains=function(obj){var i=this.length;while(i--){if(this[i]===obj){return true;}}
return false;}
gClient.HOST=getScriptLocation();﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.Markers2=OpenLayers.Class(OpenLayers.Layer.Vector,{initialize:function(name,options){OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments);var styleMap=new OpenLayers.StyleMap({fillOpacity:1,pointRadius:18,pointerEvents:"visiblePainted",fontColor:"${favColor}",fontSize:"${fontsize}",fontFamily:"Arial",fontWeight:"bold",labelAlign:"${align}",labelXOffset:"${xOffset}",labelYOffset:"${yOffset}",labelOutlineColor:"white",labelOutlineWidth:3});var _host=gClient.HOST;var w=gClient.Layer.Markers2.W;var h=gClient.Layer.Markers2.H
var lookup={"red":{externalGraphic:_host+"img/marker/icons/marker_red.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"blue":{externalGraphic:_host+"img/marker/icons/marker_blue.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"black":{externalGraphic:_host+"img/marker/icons/marker_black.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"white":{externalGraphic:_host+"img/marker/icons/marker_white.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"pink":{externalGraphic:_host+"img/marker/icons/marker_pink.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"yellow":{externalGraphic:_host+"img/marker/icons/marker_yellow.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"black":{externalGraphic:_host+"img/marker/icons/marker_black.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"green":{externalGraphic:_host+"img/marker/icons/marker_green.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"violet":{externalGraphic:_host+"img/marker/icons/marker_violet.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"start":{externalGraphic:_host+"img/marker/icons/marker_start.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"end":{externalGraphic:_host+"img/marker/icons/marker_end.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"a":{externalGraphic:_host+"img/marker/icons/marker_a.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"b":{externalGraphic:_host+"img/marker/icons/marker_b.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},1:{externalGraphic:_host+"img/marker/icons/marker_1.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},2:{externalGraphic:_host+"img/marker/icons/marker_2.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},3:{externalGraphic:_host+"img/marker/icons/marker_3.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},4:{externalGraphic:_host+"img/marker/icons/marker_4.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},5:{externalGraphic:_host+"img/marker/icons/marker_5.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},6:{externalGraphic:_host+"img/marker/icons/marker_6.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},7:{externalGraphic:_host+"img/marker/icons/marker_7.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},8:{externalGraphic:_host+"img/marker/icons/marker_8.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},9:{externalGraphic:_host+"img/marker/icons/marker_9.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},10:{externalGraphic:_host+"img/marker/icons/marker_10.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_1":{externalGraphic:_host+"img/marker/icons/marker_1.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_2":{externalGraphic:_host+"img/marker/icons/marker_2.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_3":{externalGraphic:_host+"img/marker/icons/marker_3.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_4":{externalGraphic:_host+"img/marker/icons/marker_4.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_5":{externalGraphic:_host+"img/marker/icons/marker_5.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_6":{externalGraphic:_host+"img/marker/icons/marker_6.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_7":{externalGraphic:_host+"img/marker/icons/marker_7.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_8":{externalGraphic:_host+"img/marker/icons/marker_8.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_9":{externalGraphic:_host+"img/marker/icons/marker_9.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_10":{externalGraphic:_host+"img/marker/icons/marker_10.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"stop":{externalGraphic:_host+"img/marker/icons/marker_stop.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0}};styleMap.addUniqueValueRules("default","type",lookup);this.styleMap=styleMap;this.displayInLayerSwitcher=false;},zoomToMarker:function(gCode,zoomLevel){feats=this.map.markerLayer.features;var feat=null;for(i=0;i<feats.length;i++){if(feats[i].attributes.gcode==gCode){feat=feats[i];break;}}
if(feat!=null){if(zoomLevel==null||zoomLevel==undefined){zoomLevel=16;}
this.map.zoomTo(zoomLevel);this.map.setCenter(new OpenLayers.LonLat(feat.geometry.x,feat.geometry.y));this.map.getControlsByClass("OpenLayers.Control.SelectFeature")[0].select(feat);}},addMarkerStyle:function(style){this.styleMap.addUniqueValueRules("default","type",style);},destroy:function(){OpenLayers.Layer.Vector.prototype.destroy.apply(this,arguments);},setMap:function(map){OpenLayers.Layer.Vector.prototype.setMap.apply(this,arguments);},addMarker:function(lon,lat,gcode,featuretype,label,options){var clean=options.clean;var onactive=options.onactive;var data=options.data;var val1=options.value1;var val2=options.value2;var val3=options.value3;var val4=options.value4;var color=options.color;var yoffset=options.yOffset;var fontsize;if(options.fontsize==undefined){fontsize="10px;";}
else{fontsize=options.fontsize;}
feats=this.features;if(clean==null||clean==true){for(i=0;i<feats.length;i++){var feat=feats[i];if(feats[i].attributes.type==featuretype)this.removeFeatures(feat);}}
point=new OpenLayers.Geometry.Point(lon,lat);OpenLayers.Projection.transform(point,this.map.displayProjection,this.map.getProjectionObject());label='<div>'+label+"</div>";feature=new OpenLayers.Feature.Vector(point,{type:featuretype,label:label,gcode:gcode,onactive:onactive,data:data});if(val1==undefined){val1='';}
if(val2==undefined){val2='';}
if(val3==undefined){val3='';}
if(val4==undefined){val4='';}
feature.attributes.value1=val1;feature.attributes.value2=val2;feature.attributes.value3=val3;feature.attributes.value4=val4;feature.attributes.yOffset=yoffset;feature.attributes.favColor=color;feature.attributes.fontsize=fontsize;this.addFeatures(feature);},addMarkerPolygon:function(listpoint,options){if(options==undefined||options==null){options={};}
var points=[];var newpoint;for(var i=0;i<listpoint.length;i++){var pointItem=listpoint[i].split(",");newpoint=new OpenLayers.Geometry.Point(pointItem[0],pointItem[1]);OpenLayers.Projection.transform(newpoint,this.map.displayProjection,this.map.getProjectionObject());points.push(newpoint);}
var start_end=listpoint[0].split(",");var point_end=new OpenLayers.Geometry.Point(start_end[0],start_end[1]);OpenLayers.Projection.transform(point_end,this.map.displayProjection,this.map.getProjectionObject());points.push(point_end);var style_polygon=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style['default']);style_polygon.strokeColor=((options.strokeColor==undefined||options.strokeColor==null)?"blue":options.strokeColor);style_polygon.fillColor=((options.fillColor==undefined||options.fillColor==null)?"blue":options.fillColor);style_polygon.strokeWidth=((options.strokeWidth==undefined||options.strokeWidth==null)?1:options.strokeWidth);style_polygon.strokeOpacity=((options.strokeOpacity==undefined||options.strokeOpacity==null)?0.7:options.strokeOpacity);style_polygon.strokeDashstyle=((options.strokeDashstyle==undefined||options.strokeDashstyle==null)?"solid":options.strokeDashstyle);var label=((options.label==undefined||options.label==null)?"polygon":options.label);var gCode=((options.gcode==undefined||options.gcode==null)?"gcode":options.gcode);var linearRing=new OpenLayers.Geometry.LinearRing(points);var polygonFeature=new OpenLayers.Feature.Vector(linearRing,{label:label,gcode:gCode},style_polygon);this.addFeatures(polygonFeature);},addMarkerLine:function(listpoint,options){if(options==undefined||options==null){options={};}
var points=[];var newpoint;for(var i=0;i<listpoint.length;i++){var pointItem=listpoint[i].split(",");newpoint=new OpenLayers.Geometry.Point(pointItem[0],pointItem[1]);OpenLayers.Projection.transform(newpoint,this.map.displayProjection,this.map.getProjectionObject());points.push(newpoint);}
var styleLine=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style['default']);styleLine.strokeColor=((options.strokeColor==undefined||options.strokeColor==null)?"red":options.strokeColor);styleLine.fillColor=((options.fillColor==undefined||options.fillColor==null)?"blue":options.fillColor);styleLine.strokeWidth=((options.strokeWidth==undefined||options.strokeWidth==null)?5:options.strokeWidth);styleLine.strokeOpacity=((options.strokeOpacity==undefined||options.strokeOpacity==null)?0.7:options.strokeOpacity);styleLine.strokeDashstyle=((options.strokeDashstyle==undefined||options.strokeDashstyle==null)?"solid":options.strokeDashstyle);var label=((options.label==undefined||options.label==null)?"line":options.label);var gCode=((options.gcode==undefined||options.gcode==null)?"gcode":options.gcode);var linearRing=new OpenLayers.Geometry.LineString(points);var lineFeature=new OpenLayers.Feature.Vector(linearRing,{label:label,gcode:gCode},styleLine);this.addFeatures(lineFeature);},CLASS_NAME:"gClient.Layer.Markers2"});gClient.Layer.Markers2.W=24;gClient.Layer.Markers2.H=32;﻿
gClient.Control=gClient.Control||{};gClient.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{documentDrag:false,geometryTypes:null,clickout:true,toggle:true,standalone:false,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,vertexRenderIntent:null,mode:null,createVertices:true,modified:false,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},initialize:function(layer,options){options=options||{};this.layer=layer;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,options.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[options]);if(!(OpenLayers.Util.isArray(this.deleteCodes))){this.deleteCodes=[this.deleteCodes];}
var dragCallbacks={down:function(pixel){this.vertex=null;var feature=this.getFeatureFromEvent(this.handlers.drag.evt);if(feature){this.dragStart(feature);}else if(this.clickout){this._unselect=this.feature;}},move:function(pixel){delete this._unselect;if(this.vertex){this.dragVertex(this.vertex,pixel);}},up:function(){this.handlers.drag.stopDown=false;if(this._unselect){this.unselectFeature(this._unselect);delete this._unselect;}},done:function(pixel){if(this.vertex){this.dragComplete(this.vertex);}}};var dragOptions={documentDrag:this.documentDrag,stopDown:false};var keyboardOptions={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,keyboardOptions),drag:new OpenLayers.Handler.Drag(this,dragCallbacks,dragOptions)};},destroy:function(){if(this.map){this.map.events.un({"removelayer":this.handleMapEvents,"changelayer":this.handleMapEvents,scope:this});}
this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[]);},activate:function(){this.moveLayerToTop();this.map.events.on({"removelayer":this.handleMapEvents,"changelayer":this.handleMapEvents,scope:this});return(this.handlers.keyboard.activate()&&this.handlers.drag.activate()&&OpenLayers.Control.prototype.activate.apply(this,arguments));},deactivate:function(){var deactivated=false;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.map.events.un({"removelayer":this.handleMapEvents,"changelayer":this.handleMapEvents,scope:this});this.layer.removeFeatures(this.vertices,{silent:true});this.layer.removeFeatures(this.virtualVertices,{silent:true});this.vertices=[];this.handlers.drag.deactivate();this.handlers.keyboard.deactivate();var feature=this.feature;if(feature&&feature.geometry&&feature.layer){this.unselectFeature(feature);}
deactivated=true;}
return deactivated;},beforeSelectFeature:function(feature){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:feature});},selectFeature:function(feature){if(this.feature===feature||(this.geometryTypes&&OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)==-1)){return;}
if(this.beforeSelectFeature(feature)!==false){if(this.feature){this.unselectFeature(this.feature);}
this.feature=feature;this.layer.selectedFeatures.push(feature);this.layer.drawFeature(feature,'select');this.modified=false;this.resetVertices();this.onModificationStart(this.feature);}
var modified=feature.modified;if(feature.geometry&&!(modified&&modified.geometry)){this._originalGeometry=feature.geometry.clone();}},unselectFeature:function(feature){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});delete this.dragHandle;}
if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});delete this.radiusHandle;}
this.layer.drawFeature(this.feature,'default');this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,feature);this.onModificationEnd(feature);this.layer.events.triggerEvent("afterfeaturemodified",{feature:feature,modified:this.modified});this.modified=false;},dragStart:function(feature){var isPoint=feature.geometry.CLASS_NAME=='OpenLayers.Geometry.Point';if(!this.standalone&&((!feature._sketch&&isPoint)||!feature._sketch)){if(this.toggle&&this.feature===feature){this._unselect=feature;}
this.selectFeature(feature);}
if(feature._sketch||isPoint){this.vertex=feature;this.handlers.drag.stopDown=true;}},dragVertex:function(vertex,pixel){var pos=this.map.getLonLatFromViewPortPx(pixel);var geom=vertex.geometry;geom.move(pos.lon-geom.x,pos.lat-geom.y);this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}else{if(vertex._index){vertex.geometry.parent.addComponent(vertex.geometry,vertex._index);delete vertex._index;OpenLayers.Util.removeItem(this.virtualVertices,vertex);this.vertices.push(vertex);}else if(vertex==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null;}}else if(vertex!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}
if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];}
this.layer.drawFeature(this.feature,this.standalone?undefined:'select');}
this.layer.drawFeature(vertex);},dragComplete:function(vertex){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature});},getFeatureFromEvent:function(evt){var feature;feature=this.layer.getFeatureFromEvent(evt);if(feature)
return feature;else{var lonlat=this.map.getLonLatFromPixel(new OpenLayers.Pixel(evt.layerX,evt.layerY));var touches=evt.lastTouches;if(touches){lonlat=this.map.getLonLatFromPixel(evt.xy);}
var tiles=this.map.getTiles(lonlat);if(tiles){var x,y;if(tiles.length>0&&tiles[0]!=null){x=tiles[0].i;y=tiles[0].j;}
else{x=tiles.i;y=tiles.j;}
var r=8;var xr=x+r;var xl=x-r;var yt=y-r;var yb=y+r;var isHover;var selectedCandidates=new Array();for(var i=0;i<tiles.length;i++){var candidate=new Object();var layer=tiles[i].tile.layer;if(!layer)
return;var geomType=layer.kieuKhongGian.toLowerCase();if(geomType.indexOf('line')!=-1||geomType==='multilinestring'||geomType==='point'||geomType==='multipoint'){if(geomType.indexOf('line')!=-1||geomType==='multilinestring'){candidate.priority=5+parseInt(layer.getZIndex());}
if(geomType==='point'||geomType==='multipoint'){candidate.priority=10+parseInt(layer.getZIndex());}
var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){for(var j=0;j<d.length;j++){if(d[j]==undefined)
continue;if(d[j].t=='ml'){for(var k=0;k<d[j].p.length;k++){isHover=TouchesPath(d[j].p[k],x,y,r);if(isHover)break;}}else
isHover=TouchesPath(d[j].p,x,y,r);if(isHover){candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.s=d[j].s;candidate.layer=layer;if(!selectedCandidates.contains(candidate))
selectedCandidates.push(candidate);}}}}
if(geomType==='polygon'){var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){var minarea=99999;for(var j=0;j<d.length;j++){if(d[j].t==='a'){var isInside=InsidePolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
if(d[j].t==='ma'){var isInside=InsideMultiPolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
else if(d[j].t==='gc'){isHover=TouchesGeometryCollection(d[j].p,x,y,r);}
if(isHover){var area=(d[j].b.xmax-d[j].b.xmin)*(d[j].b.ymax-d[j].b.ymin);if(area==undefined||isNaN(area))area=minarea-1;candidate=new Object();candidate.priority=parseInt(layer.getZIndex());candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.s=d[j].s;candidate.layer=layer;if(area<minarea){minarea=area;if(!selectedCandidates.contains(candidate)){selectedCandidates.push(candidate);}}}}}}}
if(selectedCandidates.length>0){selectedCandidates=selectedCandidates.sort(function(a,b){return a.priority-b.priority});selectedCandidates=selectedCandidates.reverse();var layer=selectedCandidates[0].layer;var fid=selectedCandidates[0].fid;if(layer.InvisibleObjects.indexOf(fid)!=-1)
return null;var s=selectedCandidates[0].s;var style=layer.kieuTrinhBay.styles["default"];var defaultStyle=style.defaultStyle;var rules=style.rules;var featureStyle;if(s==-1||s>rules.length-1)
featureStyle=defaultStyle;else
featureStyle=rules[s].symbolizer;var rooturl=layer.duongDan.split('/tile/')[0];var urlcmp=rooturl.split('/');var url='';for(var i=1;i<5;i++){url+='/'+urlcmp[i];}
url=url+'/'+layer.lopDuLieu+'/'+fid+'?outFormat=geojson';$.ajax({type:'GET',url:url,async:false,contentType:"application/json; charset=utf-8",dataType:"json",success:function(responseData,textStatus,jqXHR){var reader=new OpenLayers.Format.GeoJSON();var featurecollection=reader.read(responseData);feature=featurecollection[0];var epsg4326=new OpenLayers.Projection("EPSG:4326");var epsg900913=new OpenLayers.Projection("EPSG:900913");feature.geometry=feature.geometry.transform(epsg4326,epsg900913);feature.attributes['LayerID']=layer.maLopBanDo;feature.style=featureStyle;},error:function(responseData,textStatus,errorThrown){}});}}
if(feature){this.layer.events.triggerEvent('beforefeatureedit',feature);this.layer.addFeatures(feature);}
return feature;}},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE){this.feature.state=OpenLayers.State.UPDATE;if(this.modified&&this._originalGeometry){var feature=this.feature;feature.modified=OpenLayers.Util.extend(feature.modified,{geometry:this._originalGeometry});delete this._originalGeometry;}}},resetVertices:function(){if(this.vertices.length>0){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];}
if(this.virtualVertices.length>0){this.layer.removeFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];}
if(this.dragHandle){this.layer.destroyFeatures([this.dragHandle],{silent:true});this.dragHandle=null;}
if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null;}
if(this.feature&&this.feature.geometry.CLASS_NAME!="OpenLayers.Geometry.Point"){if((this.mode&OpenLayers.Control.ModifyFeature.DRAG)){this.collectDragHandle();}
if((this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE))){this.collectRadiusHandle();}
if(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE){if(!(this.mode&OpenLayers.Control.ModifyFeature.RESIZE)){this.collectVertices();}}}},handleKeypress:function(evt){var code=evt.keyCode;if(this.feature&&OpenLayers.Util.indexOf(this.deleteCodes,code)!=-1){var vertex=this.getFeatureFromEvent(this.handlers.drag.evt);if(vertex&&OpenLayers.Util.indexOf(this.vertices,vertex)!=-1&&!this.handlers.drag.dragging&&vertex.geometry.parent){vertex.geometry.parent.removeComponent(vertex.geometry);this.layer.events.triggerEvent("vertexremoved",{vertex:vertex.geometry,feature:this.feature,pixel:evt.xy});this.layer.drawFeature(this.feature,this.standalone?undefined:'select');this.modified=true;this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature});}}},collectVertices:function(){this.vertices=[];this.virtualVertices=[];var control=this;function collectComponentVertices(geometry){var i,vertex,component,len;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){vertex=new OpenLayers.Feature.Vector(geometry);vertex._sketch=true;vertex.renderIntent=control.vertexRenderIntent;control.vertices.push(vertex);}else{var numVert=geometry.components.length;if(geometry.CLASS_NAME=="OpenLayers.Geometry.LinearRing"){numVert-=1;}
for(i=0;i<numVert;++i){component=geometry.components[i];if(component.CLASS_NAME=="OpenLayers.Geometry.Point"){vertex=new OpenLayers.Feature.Vector(component);vertex._sketch=true;vertex.renderIntent=control.vertexRenderIntent;control.vertices.push(vertex);}else{collectComponentVertices(component);}}
if(control.createVertices&&geometry.CLASS_NAME!="OpenLayers.Geometry.MultiPoint"){for(i=0,len=geometry.components.length;i<len-1;++i){var prevVertex=geometry.components[i];var nextVertex=geometry.components[i+1];if(prevVertex.CLASS_NAME=="OpenLayers.Geometry.Point"&&nextVertex.CLASS_NAME=="OpenLayers.Geometry.Point"){var x=(prevVertex.x+nextVertex.x)/2;var y=(prevVertex.y+nextVertex.y)/2;var point=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(x,y),null,control.virtualStyle);point.geometry.parent=geometry;point._index=i+1;point._sketch=true;control.virtualVertices.push(point);}}}}}
collectComponentVertices.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:true});this.layer.addFeatures(this.vertices,{silent:true});},collectDragHandle:function(){var geometry=this.feature.geometry;var center=geometry.getBounds().getCenterLonLat();var originGeometry=new OpenLayers.Geometry.Point(center.lon,center.lat);var origin=new OpenLayers.Feature.Vector(originGeometry);originGeometry.move=function(x,y){OpenLayers.Geometry.Point.prototype.move.call(this,x,y);geometry.move(x,y);};origin._sketch=true;this.dragHandle=origin;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:true});},collectRadiusHandle:function(){var geometry=this.feature.geometry;var bounds=geometry.getBounds();var center=bounds.getCenterLonLat();var originGeometry=new OpenLayers.Geometry.Point(center.lon,center.lat);var radiusGeometry=new OpenLayers.Geometry.Point(bounds.right,bounds.bottom);var radius=new OpenLayers.Feature.Vector(radiusGeometry);var resize=(this.mode&OpenLayers.Control.ModifyFeature.RESIZE);var reshape=(this.mode&OpenLayers.Control.ModifyFeature.RESHAPE);var rotate=(this.mode&OpenLayers.Control.ModifyFeature.ROTATE);radiusGeometry.move=function(x,y){OpenLayers.Geometry.Point.prototype.move.call(this,x,y);var dx1=this.x-originGeometry.x;var dy1=this.y-originGeometry.y;var dx0=dx1-x;var dy0=dy1-y;if(rotate){var a0=Math.atan2(dy0,dx0);var a1=Math.atan2(dy1,dx1);var angle=a1-a0;angle*=180/Math.PI;geometry.rotate(angle,originGeometry);}
if(resize){var scale,ratio;if(reshape){scale=dy1/dy0;ratio=(dx1/dx0)/scale;}else{var l0=Math.sqrt((dx0*dx0)+(dy0*dy0));var l1=Math.sqrt((dx1*dx1)+(dy1*dy1));scale=l1/l0;}
geometry.resize(scale,originGeometry,ratio);}};radius._sketch=true;this.radiusHandle=radius;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:true});},setMap:function(map){this.handlers.drag.setMap(map);OpenLayers.Control.prototype.setMap.apply(this,arguments);},handleMapEvents:function(evt){if(evt.type=="removelayer"||evt.property=="order"){this.moveLayerToTop();}},moveLayerToTop:function(){var index=Math.max(this.map.Z_INDEX_BASE['Feature']-1,this.layer.getZIndex())+1;this.layer.setZIndex(index);},moveLayerBack:function(){var index=this.layer.getZIndex()-1;if(index>=this.map.Z_INDEX_BASE['Feature']){this.layer.setZIndex(index);}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer));}},CLASS_NAME:"gClient.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;﻿
gClient.Strategy=gClient.Strategy||{}
gClient.Strategy.Cluster=OpenLayers.Class(OpenLayers.Strategy.Cluster,{createCluster:function(feature){var center=feature.geometry.getBounds().getCenterLonLat();var cluster=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(center.lon,center.lat),{count:1});cluster.attributes=feature.attributes;cluster.attributes.count=1;cluster.cluster=[feature];return cluster;},CLASS_NAME:"gClient.Strategy.Cluster"});﻿
gClient.Control=gClient.Control||{};gClient.Control.gMapZoomOut=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.ZoomOut({'displayClass':'gControlZoomOut','title':'Thu nhỏ'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.gMapZoomOut"});(function(a){function b(){}function c(a){A=[a]}function d(a,b,c,d){try{d=a&&a.apply(b.context||b,c)}catch(e){d=!1}return d}function e(a){return/\?/.test(a)?"&":"?"}function D(l){function Y(a){Q++||(R(),K&&(y[M]={s:[a]}),G&&(a=G.apply(l,[a])),d(D,l,[a,t]),d(F,l,[l,t]))}function Z(a){Q++||(R(),K&&a!=u&&(y[M]=a),d(E,l,[l,a]),d(F,l,[l,a]))}l=a.extend({},B,l);var D=l.success,E=l.error,F=l.complete,G=l.dataFilter,H=l.callbackParameter,I=l.callback,J=l.cache,K=l.pageCache,L=l.charset,M=l.url,N=l.data,O=l.timeout,P,Q=0,R=b,S,T,U,V,W,X;return w&&w(function(a){a.done(D).fail(E),D=a.resolve,E=a.reject}).promise(l),l.abort=function(){!(Q++)&&R()},d(l.beforeSend,l,[l])===!1||Q?l:(M=M||h,N=N?typeof N=="string"?N:a.param(N,l.traditional):h,M+=N?e(M)+N:h,H&&(M+=e(M)+encodeURIComponent(H)+"=?"),!J&&!K&&(M+=e(M)+"_"+(new Date).getTime()+"="),M=M.replace(/=\?(&|$)/,"="+I+"$1"),K&&(P=y[M])?P.s?Y(P.s[0]):Z(P):(v[I]=c,V=a(s)[0],V.id=k+z++,L&&(V[g]=L),C&&C.version()<11.6?(W=a(s)[0]).text="document.getElementById('"+V.id+"')."+n+"()":V[f]=f,p in V&&(V.htmlFor=V.id,V.event=m),V[o]=V[n]=V[p]=function(a){if(!V[q]||!/i/.test(V[q])){try{V[m]&&V[m]()}catch(b){}a=A,A=0,a?Y(a[0]):Z(i)}},V.src=M,R=function(a){X&&clearTimeout(X),V[p]=V[o]=V[n]=null,x[r](V),W&&x[r](W)},x[j](V,U=x.firstChild),W&&x[j](W,U),X=O>0&&setTimeout(function(){Z(u)},O)),l)}var f="async",g="charset",h="",i="error",j="insertBefore",k="_jqjsp",l="on",m=l+"click",n=l+i,o=l+"load",p=l+"readystatechange",q="readyState",r="removeChild",s="<script>",t="success",u="timeout",v=window,w=a.Deferred,x=a("head")[0]||document.documentElement,y={},z=0,A,B={callback:k,url:location.href},C=v.opera;D.setup=function(b){a.extend(B,b)},a.jsonp=D})(jQuery)
﻿
gClient.Control=gClient.Control||{};gClient.Control.NavToolbar=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.Navigation({'displayClass':'gControlNavigation','title':'Điều hướng'}),new OpenLayers.Control.ZoomBox({'displayClass':'gControlZoomBox','title':'Phóng to theo khung'}),new OpenLayers.Control.ZoomIn({'displayClass':'gControlZoomIn','title':'Phóng to'}),new OpenLayers.Control.ZoomOut({'displayClass':'gControlZoomOut','title':'Thu nhỏ'}),new OpenLayers.Control.ZoomToMaxExtent({'displayClass':'gControlZoomToMaxExtent','title':'Hiển thị vừa khung'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.NavToolbar"});﻿
gClient.Control.LayerSwitcher=OpenLayers.Class(OpenLayers.Control,{roundedCorner:true,roundedCornerColor:"#629bae",layerStates:null,layersDiv:null,baseLayersDiv:null,baseLayers:null,dataLbl:null,dataLayersDiv:null,dataLayers:null,minimizeDiv:null,maximizeDiv:null,ascending:true,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.layerStates=[];},destroy:function(){OpenLayers.Event.stopObservingElement(this.div);OpenLayers.Event.stopObservingElement(this.minimizeDiv);OpenLayers.Event.stopObservingElement(this.maximizeDiv);this.clearLayersArray("base");this.clearLayersArray("data");this.map.events.un({"addlayer":this.redraw,"changelayer":this.redraw,"removelayer":this.redraw,"changebaselayer":this.redraw,scope:this});OpenLayers.Control.prototype.destroy.apply(this,arguments);},setMap:function(map){OpenLayers.Control.prototype.setMap.apply(this,arguments);this.map.events.on({"addlayer":this.redraw,"changelayer":this.redraw,"removelayer":this.redraw,"changebaselayer":this.redraw,scope:this});},draw:function(){OpenLayers.Control.prototype.draw.apply(this);this.loadContents();if(!this.outsideViewport){this.minimizeControl();}
this.redraw();return this.div;},clearLayersArray:function(layersType){var layers=this[layersType+"Layers"];if(layers){for(var i=0,len=layers.length;i<len;i++){var layer=layers[i];OpenLayers.Event.stopObservingElement(layer.inputElem);OpenLayers.Event.stopObservingElement(layer.labelSpan);}}
this[layersType+"LayersDiv"].innerHTML="";this[layersType+"Layers"]=[];},checkRedraw:function(){var redraw=false;if(!this.layerStates.length||(this.map.layers.length!=this.layerStates.length)){redraw=true;}else{for(var i=0,len=this.layerStates.length;i<len;i++){var layerState=this.layerStates[i];var layer=this.map.layers[i];if((layerState.name!=layer.name)||(layerState.inRange!=layer.inRange)||(layerState.id!=layer.id)||(layerState.visibility!=layer.visibility)){redraw=true;break;}}}
return redraw;},redraw:function(){if(!this.checkRedraw()){return this.div;}
this.clearLayersArray("base");this.clearLayersArray("data");var containsOverlays=false;var containsBaseLayers=false;var len=this.map.layers.length;this.layerStates=new Array(len);for(var i=0;i<len;i++){var layer=this.map.layers[i];this.layerStates[i]={'name':layer.name,'visibility':layer.visibility,'inRange':layer.inRange,'id':layer.id};}
var layers=this.map.layers.slice();if(!this.ascending){layers.reverse();}
for(var i=0,len=layers.length;i<len;i++){var layer=layers[i];var baseLayer=layer.isBaseLayer;if(layer.displayInLayerSwitcher){if(baseLayer){containsBaseLayers=true;}else{containsOverlays=true;}
var checked=(baseLayer)?(layer==this.map.baseLayer):layer.getVisibility();var inputElem=document.createElement("input");inputElem.id=this.id+"_input_"+layer.name;inputElem.name=(baseLayer)?this.id+"_baseLayers":layer.name;inputElem.type=(baseLayer)?"radio":"checkbox";inputElem.value=layer.name;inputElem.checked=checked;inputElem.defaultChecked=checked;if(!baseLayer&&!layer.inRange){inputElem.disabled=true;}
var context={'inputElem':inputElem,'layer':layer,'layerSwitcher':this};OpenLayers.Event.observe(inputElem,"mouseup",OpenLayers.Function.bindAsEventListener(this.onInputClick,context));var labelSpan=document.createElement("span");OpenLayers.Element.addClass(labelSpan,"labelSpan");if(!baseLayer&&!layer.inRange){labelSpan.style.color="gray";}
labelSpan.innerHTML=layer.name;labelSpan.style.verticalAlign=(baseLayer)?"bottom":"baseline";OpenLayers.Event.observe(labelSpan,"click",OpenLayers.Function.bindAsEventListener(this.onInputClick,context));var br=document.createElement("br");var groupArray=(baseLayer)?this.baseLayers:this.dataLayers;groupArray.push({'layer':layer,'inputElem':inputElem,'labelSpan':labelSpan});var groupDiv=(baseLayer)?this.baseLayersDiv:this.dataLayersDiv;groupDiv.appendChild(inputElem);groupDiv.appendChild(labelSpan);groupDiv.appendChild(br);}}
this.dataLbl.style.display=(containsOverlays)?"":"none";this.baseLbl.style.display=(containsBaseLayers)?"":"none";return this.div;},onInputClick:function(e){if(!this.inputElem.disabled){if(this.inputElem.type=="radio"){this.inputElem.checked=true;this.layer.map.setBaseLayer(this.layer);}else{this.inputElem.checked=!this.inputElem.checked;this.layerSwitcher.updateMap();}}
OpenLayers.Event.stop(e);},onLayerClick:function(e){this.updateMap();},updateMap:function(){for(var i=0,len=this.baseLayers.length;i<len;i++){var layerEntry=this.baseLayers[i];if(layerEntry.inputElem.checked){this.map.setBaseLayer(layerEntry.layer,false);}}
for(var i=0,len=this.dataLayers.length;i<len;i++){var layerEntry=this.dataLayers[i];layerEntry.layer.setVisibility(layerEntry.inputElem.checked);}},maximizeControl:function(e){this.div.style.width="";this.div.style.height="";this.showControls(false);if(e!=null){OpenLayers.Event.stop(e);}},minimizeControl:function(e){this.div.style.width="0px";this.div.style.height="0px";this.showControls(true);if(e!=null){OpenLayers.Event.stop(e);}},showControls:function(minimize){this.maximizeDiv.style.display=minimize?"":"none";this.minimizeDiv.style.display=minimize?"none":"";this.layersDiv.style.display=minimize?"none":"";},loadContents:function(){OpenLayers.Event.observe(this.div,"mouseup",OpenLayers.Function.bindAsEventListener(this.mouseUp,this));OpenLayers.Event.observe(this.div,"click",this.ignoreEvent);OpenLayers.Event.observe(this.div,"mousedown",OpenLayers.Function.bindAsEventListener(this.mouseDown,this));OpenLayers.Event.observe(this.div,"dblclick",this.ignoreEvent);this.layersDiv=document.createElement("div");this.layersDiv.id=this.id+"_layersDiv";OpenLayers.Element.addClass(this.layersDiv,"layersDiv");this.baseLbl=document.createElement("div");this.baseLbl.innerHTML=OpenLayers.i18n("Bản đồ nền");OpenLayers.Element.addClass(this.baseLbl,"baseLbl");this.baseLayersDiv=document.createElement("div");OpenLayers.Element.addClass(this.baseLayersDiv,"baseLayersDiv");this.dataLbl=document.createElement("div");this.dataLbl.innerHTML=OpenLayers.i18n("Lớp chuyên đề");OpenLayers.Element.addClass(this.dataLbl,"dataLbl");this.dataLayersDiv=document.createElement("div");OpenLayers.Element.addClass(this.dataLayersDiv,"dataLayersDiv");if(this.ascending){this.layersDiv.appendChild(this.baseLbl);this.layersDiv.appendChild(this.baseLayersDiv);this.layersDiv.appendChild(this.dataLbl);this.layersDiv.appendChild(this.dataLayersDiv);}else{this.layersDiv.appendChild(this.dataLbl);this.layersDiv.appendChild(this.dataLayersDiv);this.layersDiv.appendChild(this.baseLbl);this.layersDiv.appendChild(this.baseLayersDiv);}
this.div.appendChild(this.layersDiv);OpenLayers.Rico.Corner.changeOpacity(this.layersDiv,0.75);var imgLocation=OpenLayers.Util.getImagesLocation();var sz=new OpenLayers.Size(24,24);var img=imgLocation+'title-base-icon.png';this.maximizeDiv=OpenLayers.Util.createAlphaImageDiv("OpenLayers_Control_MaximizeDiv",null,sz,img,"absolute");OpenLayers.Element.addClass(this.maximizeDiv,"maximizeDiv");this.maximizeDiv.style.display="none";OpenLayers.Event.observe(this.maximizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.maximizeControl,this));this.div.appendChild(this.maximizeDiv);var img=imgLocation+'layer-switcher-minimize.png';var sz=new OpenLayers.Size(24,24);this.minimizeDiv=OpenLayers.Util.createAlphaImageDiv("OpenLayers_Control_MinimizeDiv",null,sz,img,"absolute");OpenLayers.Element.addClass(this.minimizeDiv,"minimizeDiv");this.minimizeDiv.style.display="none";this.minimizeDiv.style.right="160px";OpenLayers.Event.observe(this.minimizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.minimizeControl,this));this.div.appendChild(this.minimizeDiv);},ignoreEvent:function(evt){OpenLayers.Event.stop(evt);},mouseDown:function(evt){this.isMouseDown=true;this.ignoreEvent(evt);},mouseUp:function(evt){if(this.isMouseDown){this.isMouseDown=false;this.ignoreEvent(evt);}},CLASS_NAME:"gClient.Control.LayerSwitcher"});﻿
gClient=gClient||{};gClient.GeoService=OpenLayers.Class({geoServiceProvider:null,geoServiceContext:null,mapControl:null,resultControl:null,initialize:function(geoServiceContext,mapControl,resultControl,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.geoServiceContext=geoServiceContext;this.geoServiceProvider=geoServiceContext.getProvider();this.mapControl=mapControl;this.resultControl=resultControl;},destroy:function(){},setMapControl:function(mapControl){this.mapControl=mapControl;},setResultControl:function(resultControl){this.resultControl=resultControl;},defaultCallback:function(response){},errorCallback:function(){},CLASS_NAME:"gClient.GeoService"});﻿
gClient=gClient||{};gClient.GeoFinder=OpenLayers.Class(gClient.GeoService,{initialize:function(geoServiceContext,mapControl,resultControl,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.prototype.initialize.apply(this,arguments);},destroy:function(){},findFromPoint:function(parameter,callback,errback){if(parameter.radius!=null&&parameter.radius!=undefined)
parameter.geometry=new OpenLayers.Geometry.Polygon.createRegularPolygon(parameter.geometry,parameter.radius,20,90);this.findFromRing(parameter,callback,errback);},findFromPolygon:function(parameter,callback,errback){this.findFromRing(parameter,callback,errback);},findFromLines:function(parameter,callback,errback){this.findFromRing(parameter,callback,errback);},findFromRing:function(parameter,callback,errback){var newParams={'requestType':'polygon','polygon':parameter.geometry,'layer':parameter.layer,'inSR':parameter.inputSpatialReference,'outSR':parameter.outputSpatialReference,'spatialRel':parameter.operator};if(callback==null){callback=this.defaultCallback;}
if(errback==null){errback=this.defaultErrback;}
var urlRequest=this.geoServiceProvider.createRequest(newParams);return this.geoServiceProvider.executeRequest(urlRequest,callback,errback,{mapControl:this.mapControl,resultControl:this.resultControl});},findTask:function(parameter,callback,errback){var newParams={'geometry':parameter.geometry,'layer':parameter.layer,'inSR':parameter.inputSpatialReference,'outSR':parameter.outputSpatialReference,'spatialRel':parameter.operator,'radius':parameter.radius,'where':parameter.where,'cat':parameter.cat,'subcat':parameter.subcat,'typesearch':parameter.typesearch};if(callback==null){callback=this.defaultCallback;}
if(errback==null){errback=this.defaultErrback;}
var urlRequest=this.geoServiceProvider.createRequest(newParams);return this.geoServiceProvider.executeRequest(urlRequest,callback,errback,{mapControl:this.mapControl,resultControl:this.resultControl});},defaultErrback:function(){},defaultCallback:function(response,options){var tableKetqua="<div><table style='font-size: 12pt;width:100%;'><tr><td style='color:black;white-space:nowrap;align:center;' colspan='2'>Kết quả</td></tr>";tableKetqua+="<tr><td style='color:green;white-space:nowrap; width:50px;'>STT</td><td>ID</td></tr>"
for(i=0;i<response.length;i++){var stt=i+1;tableKetqua+="<tr><td style='color:green;white-space:nowrap;'>"+stt+"</td><td>"+response[i].attributes.BLOCK+"</td></tr>"}
tableKetqua+="</table></div>";var resultControl=options['resultControl'];$('#'+resultControl).html(tableKetqua);},CLASS_NAME:"gClient.GeoFinder"});﻿
gClient=gClient||{};gClient.GeoRouter=OpenLayers.Class(gClient.GeoService,{initialize:function(geoServiceContext,mapControl,resultControl,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.prototype.initialize.apply(this,arguments);},destroy:function(){},getRoute:function(RouteParameters,callback,errback){var newParams={'returnDirections':RouteParameters.returnDirections,'returnRoutes':RouteParameters.returnRoutes,'returnStops':RouteParameters.returnStops,'returnBarriers':RouteParameters.returnBarriers,'stops':RouteParameters.stops};if(callback==null){callback=this.defaultCallback;}
if(errback==null){errback=this.defaultErrback;}
var urlRequest=this.geoServiceProvider.createRequest(newParams);return this.geoServiceProvider.executeRequest(urlRequest,callback,errback,{mapControl:this.mapControl,resultControl:this.resultControl});},defaultCallback:function(response,options){mapControl=options['mapControl'];resultControl=options['resultControl'];$('#'+resultControl).empty();mapControl=options['mapControl'];resultControl=options['resultControl'];$('#'+resultControl).empty();if(response.Directions!=null){for(var i=0;i<response.Directions.Paths.length;i++){$('#'+resultControl).append("<ul><li><b>"+i+"</b> :"+response.Directions.Paths[i]+"</li><ul>");}
for(var j=0;j<response.Routes.Paths.length;j++){var point=new OpenLayers.LonLat(response.Routes.Paths[j][0],response.Routes.Paths[j][1]);}}},defaultErrback:function(){},CLASS_NAME:"gClient.GeoRouter"});﻿
gClient.GeoService.Context=OpenLayers.Class({serviceName:null,serviceUrl:null,serviceApiKey:null,serviceProviderType:null,serviceProvider:null,initialize:function(serviceName,serviceUrl,serviceApiKey,serviceProviderType,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.serviceName=serviceName;this.serviceUrl=serviceUrl;this.serviceApiKey=serviceApiKey;this.serviceProviderType=serviceProviderType;this.serviceProvider=null;},destroy:function(){},getProvider:function(){if(this.serviceProvider!=null){return this.serviceProvider;}else{return null;}},CLASS_NAME:"gClient.GeoService.Context"});﻿
gClient.GeoFinder.Context=OpenLayers.Class(gClient.GeoService.Context,{initialize:function(serviceName,serviceUrl,serviceApiKey,serviceProviderType,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.Context.prototype.initialize.apply(this,arguments);},destroy:function(){},getProvider:function(){if(this.serviceProvider==null){if(this.serviceProviderType==gClient.GOOGLE){this.serviceProvider=new gClient.GeoFinder.GoogleProvider(this.serviceName,this.serviceUrl,this.serviceApiKey);}
else if(this.serviceProviderType==gClient.ARCGIS){this.serviceProvider=new gClient.GeoFinder.ArcGISProvider(this.serviceName,this.serviceUrl,this.serviceApiKey);}
else if(this.serviceProviderType==gClient.GSERVER){this.serviceProvider=new gClient.GeoFinder.GServerProvider(this.serviceName,this.serviceUrl,this.serviceApiKey);}}
return this.serviceProvider;},CLASS_NAME:"gClient.GeoFinder.Context"});gClient.GOOGLE="GOOGLE";gClient.ARCGIS="ARCGIS";gClient.GSERVER="GSERVER";﻿gClient.Control=gClient.Control||{};gClient.Control.Click=OpenLayers.Class(OpenLayers.Control,{clickCallback:null,defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},initialize:function(callback,options){this.clickCallback=callback;this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{'click':this.trigger},this.handlerOptions);},trigger:function(e){var lonlat=this.map.getLonLatFromPixel(e.xy);this.clickCallback(lonlat);},CLASS_NAME:"gClient.Control.Click"});﻿
gClient.Control=gClient.Control||{};gClient.Control.PanZoom=OpenLayers.Class(OpenLayers.Control,{slideFactor:50,slideRatio:null,buttons:null,position:null,initialize:function(options){this.position=new OpenLayers.Pixel(gClient.Control.PanZoom.X,gClient.Control.PanZoom.Y);OpenLayers.Control.prototype.initialize.apply(this,arguments);},destroy:function(){this.removeButtons();this.buttons=null;this.position=null;OpenLayers.Control.prototype.destroy.apply(this,arguments);},draw:function(px){OpenLayers.Control.prototype.draw.apply(this,arguments);var div=document.createElement('div');div.className="ol-control ol-w ol-bg-top-2";this.div.appendChild(div);this._addButton1(div,"panup","bt-top");this._addButton1(div,"panright","bt-right");this._addButton1(div,"pandown","bt-bottom");this._addButton1(div,"panleft","bt-left");this._addButton1(div,"zoomworld","bt-center");this._addButton1(div,"zoomin","bt-zoomout");div=document.createElement('div');div.className="ol-control-bottom ol-w ol-bg-bottom-2";this.div.appendChild(div);this._addButton1(div,"zoomout","bt-zoomin-2");return this.div;},_addButton:function(id,img,xy,sz){var imgLocation=OpenLayers.Util.getImagesLocation()+img;var btn=OpenLayers.Util.createAlphaImageDiv(this.id+"_"+id,xy,sz,imgLocation,"absolute");btn.style.cursor="pointer";this.div.appendChild(btn);OpenLayers.Event.observe(btn,"mousedown",OpenLayers.Function.bindAsEventListener(this.buttonDown,btn));OpenLayers.Event.observe(btn,"dblclick",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));OpenLayers.Event.observe(btn,"click",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));btn.action=id;btn.map=this.map;if(!this.slideRatio){var slideFactorPixels=this.slideFactor;var getSlideFactor=function(){return slideFactorPixels;};}else{var slideRatio=this.slideRatio;var getSlideFactor=function(dim){return this.map.getSize()[dim]*slideRatio;};}
btn.getSlideFactor=getSlideFactor;this.buttons.push(btn);return btn;},_addButton1:function(div,id,btnclass){var a=document.createElement('a');var btn=document.createElement('div');btn.className=btnclass;btn.id=id;a.appendChild(btn);div.appendChild(a);OpenLayers.Event.observe(btn,"mousedown",OpenLayers.Function.bindAsEventListener(this.buttonDown,btn));OpenLayers.Event.observe(btn,"dblclick",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));OpenLayers.Event.observe(btn,"click",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));btn.action=id;btn.map=this.map;if(!this.slideRatio){var slideFactorPixels=this.slideFactor;var getSlideFactor=function(){return slideFactorPixels;};}else{var slideRatio=this.slideRatio;var getSlideFactor=function(dim){return this.map.getSize()[dim]*slideRatio;};}
btn.getSlideFactor=getSlideFactor;this.buttons.push(btn);return btn;},_removeButton:function(btn){OpenLayers.Event.stopObservingElement(btn);btn.map=null;btn.getSlideFactor=null;btn.parentNode.parentNode.className="";btn.parentNode.removeChild(btn);OpenLayers.Util.removeItem(this.buttons,btn);},removeButtons:function(){for(var i=this.buttons.length-1;i>=0;--i){this._removeButton(this.buttons[i]);}},doubleClick:function(evt){OpenLayers.Event.stop(evt);return false;},buttonDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return;}
switch(this.action){case"panup":this.map.pan(0,-this.getSlideFactor("h"));break;case"pandown":this.map.pan(0,this.getSlideFactor("h"));break;case"panleft":this.map.pan(-this.getSlideFactor("w"),0);break;case"panright":this.map.pan(this.getSlideFactor("w"),0);break;case"zoomin":this.map.zoomIn();break;case"zoomout":this.map.zoomOut();break;case"zoomworld":this.map.zoomToMaxExtent();break;}
OpenLayers.Event.stop(evt);},CLASS_NAME:"gClient.Control.PanZoom"});gClient.Control.PanZoom.X=10;gClient.Control.PanZoom.Y=10;﻿
gClient.Control=gClient.Control||{};gClient.Control.PanZoomBarV2=OpenLayers.Class(gClient.Control.PanZoom,{zoomStopWidth:10,zoomStopHeight:8,slider:null,sliderEvents:null,zoombarDiv:null,divEvents:null,zoomWorldIcon:false,panIcons:true,forceFixedZoomLevel:false,mouseDragStart:null,deltaY:null,zoomStart:null,destroy:function(){this._removeZoomBar();this.map.events.un({"changebaselayer":this.redraw,scope:this});OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments);delete this.mouseDragStart;delete this.zoomStart;},setMap:function(map){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments);this.map.events.register("changebaselayer",this,this.redraw);},redraw:function(){if(this.div!=null){this.removeButtons();this._removeZoomBar();}
this.draw();},draw:function(px){OpenLayers.Control.prototype.draw.apply(this,arguments);px=this.position.clone();this.buttons=[];var sz=new OpenLayers.Size(30,25);var div=document.createElement('div');div.className="topControl panzoom-w";this.div.appendChild(div);var centered=new OpenLayers.Pixel(px.x+sz.w/2,px.y);var wposition=sz.w;this._addButton1(div,"panup","panUp");this._addButton1(div,"panright","panRight");this._addButton1(div,"pandown","panDown");this._addButton1(div,"panleft","panLeft");this._addButton1(div,"zoomworld","panCenter");this._addButton1(div,"zoomin","zoomOut");centered=this._addZoomBar(centered.add(3,-10));div=document.createElement('div');div.className="control-bottom";this.div.appendChild(div);this._addButton1(div,"zoomout","zoomIn");return this.div;},_addZoomBar:function(centered){var imgLocation=OpenLayers.Util.getImagesLocation();var id=this.id+"_"+this.map.id;var zoomsToEnd=this.map.getNumZoomLevels()-1-this.map.getZoom();var slider=OpenLayers.Util.createAlphaImageDiv(id,centered.add(0,107+zoomsToEnd*this.zoomStopHeight),new OpenLayers.Size(16,8),imgLocation+"lv-control.png","absolute");slider.style.cursor="move";this.slider=slider;this.slider.style.position="absolute";this.sliderEvents=new OpenLayers.Events(this,slider,null,true,{includeXY:true});this.sliderEvents.on({"touchstart":this.zoomBarDown,"touchmove":this.zoomBarDrag,"touchend":this.zoomBarUp,"mousedown":this.zoomBarDown,"mousemove":this.zoomBarDrag,"mouseup":this.zoomBarUp,"dblclick":this.doubleClick,"click":this.doubleClick});var sz=new OpenLayers.Size();sz.h=this.zoomStopHeight*this.map.getNumZoomLevels();sz.w=this.zoomStopWidth;var div=null;if(OpenLayers.Util.alphaHack()){var id=this.id+"_"+this.map.id;div=OpenLayers.Util.createAlphaImageDiv(id,centered,new OpenLayers.Size(sz.w,this.zoomStopHeight),imgLocation+"lv-bg.png","absolute",null,"crop");div.style.height=sz.h+"px";}else{div=OpenLayers.Util.createDiv('OpenLayers_Control_PanZoomBar_Zoombar'+this.map.id,centered,sz,imgLocation+"lv-bg.png");}
div.style.cursor="pointer";div.style.position="relative";div.style.left="31px";div.style.top="22px";this.zoombarDiv=div;this.divEvents=new OpenLayers.Events(this,div,null,true,{includeXY:true});this.divEvents.on({"touchmove":this.passEventToSlider,"mousedown":this.divClick,"mousemove":this.passEventToSlider,"dblclick":this.doubleClick,"click":this.doubleClick});this.div.appendChild(div);this.startTop=parseInt(div.style.top);this.div.appendChild(slider);this.map.events.register("zoomend",this,this.moveZoomBar);centered=centered.add(0,this.zoomStopHeight*this.map.getNumZoomLevels());return centered;},_removeZoomBar:function(){this.sliderEvents.un({"touchmove":this.zoomBarDrag,"mousedown":this.zoomBarDown,"mousemove":this.zoomBarDrag,"mouseup":this.zoomBarUp,"dblclick":this.doubleClick,"click":this.doubleClick});this.sliderEvents.destroy();this.divEvents.un({"touchmove":this.passEventToSlider,"mousedown":this.divClick,"mousemove":this.passEventToSlider,"dblclick":this.doubleClick,"click":this.doubleClick});this.divEvents.destroy();this.div.removeChild(this.zoombarDiv);this.zoombarDiv=null;this.div.removeChild(this.slider);this.slider=null;this.map.events.unregister("zoomend",this,this.moveZoomBar);},passEventToSlider:function(evt){this.sliderEvents.handleBrowserEvent(evt);},divClick:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return;}
var levels=evt.xy.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom){levels=Math.floor(levels);}
var zoom=(this.map.getNumZoomLevels()-1)-levels;zoom=Math.min(Math.max(zoom,0),this.map.getNumZoomLevels()-1);this.map.zoomTo(zoom);OpenLayers.Event.stop(evt);},zoomBarDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)&&!OpenLayers.Event.isSingleTouch(evt)){return;}
this.map.events.on({"touchmove":this.passEventToSlider,"mousemove":this.passEventToSlider,"mouseup":this.passEventToSlider,scope:this});this.mouseDragStart=evt.xy.clone();this.zoomStart=evt.xy.clone();this.div.style.cursor="move";this.zoombarDiv.offsets=null;OpenLayers.Event.stop(evt);},zoomBarDrag:function(evt){if(this.mouseDragStart!=null){var deltaY=this.mouseDragStart.y-evt.xy.y;var offsets=OpenLayers.Util.pagePosition(this.zoombarDiv);if((evt.clientY-offsets[1])>0&&(evt.clientY-offsets[1])<parseInt(this.zoombarDiv.style.height)-2){var newTop=parseInt(this.slider.style.top)-deltaY;this.slider.style.top=newTop+"px";this.mouseDragStart=evt.xy.clone();}
this.deltaY=this.zoomStart.y-evt.xy.y;OpenLayers.Event.stop(evt);}},zoomBarUp:function(evt){if(!OpenLayers.Event.isLeftClick(evt)&&evt.type!=="touchend"){return;}
if(this.mouseDragStart){this.div.style.cursor="";this.map.events.un({"touchmove":this.passEventToSlider,"mouseup":this.passEventToSlider,"mousemove":this.passEventToSlider,scope:this});var zoomLevel=this.map.zoom;if(!this.forceFixedZoomLevel&&this.map.fractionalZoom){zoomLevel+=this.deltaY/this.zoomStopHeight;zoomLevel=Math.min(Math.max(zoomLevel,0),this.map.getNumZoomLevels()-1);}else{zoomLevel+=this.deltaY/this.zoomStopHeight;zoomLevel=Math.max(Math.round(zoomLevel),0);}
this.map.zoomTo(zoomLevel);this.mouseDragStart=null;this.zoomStart=null;this.deltaY=0;OpenLayers.Event.stop(evt);}},moveZoomBar:function(){var newTop=((this.map.getNumZoomLevels()-1)-this.map.getZoom())*this.zoomStopHeight+this.startTop+1;this.slider.style.top=65+newTop+"px";},CLASS_NAME:"gClient.Control.PanZoomBarV2"});﻿(function($){var methods={init:function(options){var settings={'url':'','callback':''}
if(options){$.extend(settings,options);}
var obj=this;function requestSuccessAU(data,callback){var format=new OpenLayers.Format.GeoJSON();var html='<select class="combobox style-border" onchange="fnAdministrativeUnitsSelectChangeAu(this,'+"'"+$(obj).attr('id')+"_XaHuyen"+"'"+','+"'"+settings.callback+"'"+');">'+"<option  value='"+'0'+"'>"+'- lựa chọn tất cả -'+"</option>";for(var i=0;i<format.read(data).length;i++){var maTinh=format.read(data)[i].attributes["code"];var tenTinh=format.read(data)[i].attributes["name"];html+="<option value='"+maTinh+"'>"+tenTinh+"</option>";}
html+='</select>';html+='<div class="clear"></div> <p class="left label"></p><div id="'+$(obj).attr('id')+"_XaHuyen"+'"><div/>';$(obj).append(html);}
jQuery.ajax({dataType:'jsonp',url:settings.url,obj:this,success:function(data){requestSuccessAU(data,options.callback);},error:function(){alert("error");}});}};$.fn.gAdministrativeUnits=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin gAdministrativeUnits');}};})(jQuery);﻿
gClient.Control=gClient.Control||{};gClient.Control.gMapZoomIn=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.ZoomIn({'displayClass':'gControlZoomIn','title':'Phóng to'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.gMapZoomIn"});﻿
gClient.Control=gClient.Control||{};gClient.Control.LonLatPicker=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(layer,options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new gClient.Control.SearchFeature(layer,OpenLayers.Handler.Point,{'displayClass':'olControlDrawFeaturePoint','callback':options.callback})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);if(this.defaultControl===null){this.defaultControl=this.controls[0];}
return div;},CLASS_NAME:"gClient.Control.LonLatPicker"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.Markers=OpenLayers.Class(OpenLayers.Layer.Vector,{markerSelectControl:null,popup:true,initialize:function(name,options){OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments);var styleMap=new OpenLayers.StyleMap({fillOpacity:1,pointRadius:18,pointerEvents:"visiblePainted",fontColor:"${favColor}",fontSize:"${fontsize}",fontFamily:"Arial",fontWeight:"bold",labelAlign:"${align}",labelXOffset:"${xOffset}",labelYOffset:"${yOffset}",labelOutlineColor:"white",labelOutlineWidth:3});if(options.popup)
this.popup=options.popup
var _host=gClient.HOST;var w=gClient.Layer.Markers.W;var h=gClient.Layer.Markers.H;var lookup={"red":{externalGraphic:_host+"img/marker/icons/marker_red.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"blue":{externalGraphic:_host+"img/marker/icons/marker_blue.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"black":{externalGraphic:_host+"img/marker/icons/marker_black.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"white":{externalGraphic:_host+"img/marker/icons/marker_white.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"pink":{externalGraphic:_host+"img/marker/icons/marker_pink.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"yellow":{externalGraphic:_host+"img/marker/icons/marker_yellow.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"black":{externalGraphic:_host+"img/marker/icons/marker_black.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"green":{externalGraphic:_host+"img/marker/icons/marker_green.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"violet":{externalGraphic:_host+"img/marker/icons/marker_violet.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"start":{externalGraphic:_host+"img/marker/icons/marker_start.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"end":{externalGraphic:_host+"img/marker/icons/marker_end.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},1:{externalGraphic:_host+"img/marker/icons/marker_1.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},2:{externalGraphic:_host+"img/marker/icons/marker_2.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},3:{externalGraphic:_host+"img/marker/icons/marker_3.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},4:{externalGraphic:_host+"img/marker/icons/marker_4.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},5:{externalGraphic:_host+"img/marker/icons/marker_5.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},6:{externalGraphic:_host+"img/marker/icons/marker_6.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},7:{externalGraphic:_host+"img/marker/icons/marker_7.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},8:{externalGraphic:_host+"img/marker/icons/marker_8.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},9:{externalGraphic:_host+"img/marker/icons/marker_9.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},10:{externalGraphic:_host+"img/marker/icons/marker_10.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_1":{externalGraphic:_host+"img/marker/icons/marker_1.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_2":{externalGraphic:_host+"img/marker/icons/marker_2.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_3":{externalGraphic:_host+"img/marker/icons/marker_3.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_4":{externalGraphic:_host+"img/marker/icons/marker_4.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_5":{externalGraphic:_host+"img/marker/icons/marker_5.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_6":{externalGraphic:_host+"img/marker/icons/marker_6.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_7":{externalGraphic:_host+"img/marker/icons/marker_7.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_8":{externalGraphic:_host+"img/marker/icons/marker_8.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_9":{externalGraphic:_host+"img/marker/icons/marker_9.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"marker_10":{externalGraphic:_host+"img/marker/icons/marker_10.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0},"stop":{externalGraphic:_host+"img/marker/icons/marker_stop.png",backgroundGraphic:_host+"img/marker/icons/marker_shadow.png",graphicWidth:w,graphicHeight:h,graphicYOffset:-h,backgroundYOffset:-h,backgroundXOffset:0}};styleMap.addUniqueValueRules("default","type",lookup);this.styleMap=styleMap;this.displayInLayerSwitcher=false;if(this.popup){this.markerSelectControl=new OpenLayers.Control.SelectFeature(this,{onSelect:onMarkerFeatureSelect,onUnselect:onMarkerFeatureUnselect,stopSingle:true});}},zoomToMarker:function(gCode,zoomLevel){feats=this.map.markerLayer.features;var feat=null;for(i=0;i<feats.length;i++){if(feats[i].attributes.gcode==gCode){feat=feats[i];break;}}
if(feat!=null){if(zoomLevel==null||zoomLevel==undefined){zoomLevel=16;}
this.map.zoomTo(zoomLevel);this.map.setCenter(new OpenLayers.LonLat(feat.geometry.x,feat.geometry.y));this.map.getControlsByClass("OpenLayers.Control.SelectFeature")[0].select(feat);}},addMarkerStyle:function(style){this.styleMap.addUniqueValueRules("default","type",style);},destroy:function(){OpenLayers.Layer.Vector.prototype.destroy.apply(this,arguments);},setMap:function(map){OpenLayers.Layer.Vector.prototype.setMap.apply(this,arguments);map.addControl(this.markerSelectControl);this.markerSelectControl.activate();},addMarkerWithIcon:function(lon,lat,iconurl,width,height,xoffset,yoffset){var styleMarker={"markerIcon":{externalGraphic:iconurl,backgroundGraphic:"",graphicWidth:width,graphicHeight:height,graphicYOffset:xoffset,backgroundYOffset:yoffset,backgroundXOffset:0}};this.addMarkerStyle(styleMarker);this.addMarker(lon,lat,"","markerIcon","",{clean:false});},addMarker:function(lon,lat,gcode,featuretype,label,options){var clean=options.clean;var onactive=options.onactive;var data=options.data;var val1=options.value1;var val2=options.value2;var val3=options.value3;var val4=options.value4;var color=options.color;var yoffset=options.yOffset;var fontsize;if(options.fontsize==undefined){fontsize="10px;";}
else{fontsize=options.fontsize;}
feats=this.features;if(clean==null||clean==true){for(i=0;i<feats.length;i++){var feat=feats[i];if(feats[i].attributes.type==featuretype)this.removeFeatures(feat);}}
point=new OpenLayers.Geometry.Point(lon,lat);OpenLayers.Projection.transform(point,this.map.displayProjection,this.map.getProjectionObject());label='<div>'+label+"</div>";feature=new OpenLayers.Feature.Vector(point,{type:featuretype,label:label,gcode:gcode,onactive:onactive,data:data});if(val1==undefined){val1='';}
if(val2==undefined){val2='';}
if(val3==undefined){val3='';}
if(val4==undefined){val4='';}
feature.attributes.value1=val1;feature.attributes.value2=val2;feature.attributes.value3=val3;feature.attributes.value4=val4;feature.attributes.yOffset=yoffset;feature.attributes.favColor=color;feature.attributes.fontsize=fontsize;this.addFeatures(feature);},addMarkerPolygon:function(listpoint,options){if(options==undefined||options==null){options={};}
var points=[];var newpoint;for(var i=0;i<listpoint.length;i++){var pointItem=listpoint[i].split(",");newpoint=new OpenLayers.Geometry.Point(pointItem[0],pointItem[1]);OpenLayers.Projection.transform(newpoint,this.map.displayProjection,this.map.getProjectionObject());points.push(newpoint);}
var start_end=listpoint[0].split(",");var point_end=new OpenLayers.Geometry.Point(start_end[0],start_end[1]);OpenLayers.Projection.transform(point_end,this.map.displayProjection,this.map.getProjectionObject());points.push(point_end);var style_polygon=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style['default']);style_polygon.strokeColor=((options.strokeColor==undefined||options.strokeColor==null)?"blue":options.strokeColor);style_polygon.fillColor=((options.fillColor==undefined||options.fillColor==null)?"blue":options.fillColor);style_polygon.strokeWidth=((options.strokeWidth==undefined||options.strokeWidth==null)?1:options.strokeWidth);style_polygon.strokeOpacity=((options.strokeOpacity==undefined||options.strokeOpacity==null)?0.7:options.strokeOpacity);style_polygon.strokeDashstyle=((options.strokeDashstyle==undefined||options.strokeDashstyle==null)?"solid":options.strokeDashstyle);var label=((options.label==undefined||options.label==null)?"polygon":options.label);var gCode=((options.gcode==undefined||options.gcode==null)?"gcode":options.gcode);var linearRing=new OpenLayers.Geometry.LinearRing(points);var polygonFeature=new OpenLayers.Feature.Vector(linearRing,{label:label,gcode:gCode},style_polygon);this.addFeatures(polygonFeature);},addMarkerLine:function(listpoint,options){if(options==undefined||options==null){options={};}
var points=[];var newpoint;for(var i=0;i<listpoint.length;i++){var pointItem=listpoint[i].split(",");newpoint=new OpenLayers.Geometry.Point(pointItem[0],pointItem[1]);OpenLayers.Projection.transform(newpoint,this.map.displayProjection,this.map.getProjectionObject());points.push(newpoint);}
var styleLine=OpenLayers.Util.extend({},OpenLayers.Feature.Vector.style['default']);styleLine.strokeColor=((options.strokeColor==undefined||options.strokeColor==null)?"red":options.strokeColor);styleLine.fillColor=((options.fillColor==undefined||options.fillColor==null)?"blue":options.fillColor);styleLine.strokeWidth=((options.strokeWidth==undefined||options.strokeWidth==null)?5:options.strokeWidth);styleLine.strokeOpacity=((options.strokeOpacity==undefined||options.strokeOpacity==null)?0.7:options.strokeOpacity);styleLine.strokeDashstyle=((options.strokeDashstyle==undefined||options.strokeDashstyle==null)?"solid":options.strokeDashstyle);var label=((options.label==undefined||options.label==null)?"line":options.label);var gCode=((options.gcode==undefined||options.gcode==null)?"gcode":options.gcode);var linearRing=new OpenLayers.Geometry.LineString(points);var lineFeature=new OpenLayers.Feature.Vector(linearRing,{label:label,gcode:gCode},styleLine);this.addFeatures(lineFeature);},CLASS_NAME:"gClient.Layer.Markers"});gClient.Layer.Markers.W=24;gClient.Layer.Markers.H=32;function onPopupClose(evt){this.map.markerLayer.markerSelectControl.unselectAll();};function onMarkerFeatureUnselect(feature){if(feature.popup){feature.layer.map.removePopup(feature.popup);feature.popup.destroy();delete feature.popup;}};function onMarkerFeatureSelect(feature){selectedFeature=feature;while(feature.layer.map.popups.length){feature.layer.map.removePopup(feature.layer.map.popups[0]);}
console.log(feature.attributes.label);popup=new gClient.Popup.gFramedCloud2("chicken",feature.geometry.getBounds().getCenterLonLat(),null,feature.attributes.label,null,true,onPopupClose);feature.popup=popup;popup.autoSize=true;popup.minSize=new OpenLayers.Size(270,150);popup.maxSize=new OpenLayers.Size(800,800);feature.layer.map.addPopup(popup);feature.attributes.onactive(feature);};﻿
var extImgs={};var isChromeBrower=navigator.userAgent.indexOf("Chrome")!=-1;gClient.Layer=gClient.Layer||{};var tileSelected={};gClient.Layer.Canvas=OpenLayers.Class(OpenLayers.Layer.XYZ,{map:null,maLopBanDo:'',maLopDuLieu:'',tenLopBanDo:'',moTa:'',maBanDo:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,thuTuHienThi:null,duongDanAnh:'',laLopNen:false,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',cauHinhNhan:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',dieuKienLoc:'',cauHinhMoRong:'',InvisibleObjects:[],name:"gServer",selectedFeatures:null,selectedRids:null,tileCanvas:[],url:[],attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",sphericalMercator:true,wrapDateLine:true,tileOptions:null,optionsGServer:null,renderers:['Canvas','VML'],renderer:null,isReload:null,tiles:[],numTiles:0,customRules:{},EVENT_TYPES:["beforefeatureadded","beforefeaturesadded","featureadded","featuresadded","beforefeatureremoved","beforefeaturesremoved","featureremoved","featuresremoved","beforefeatureselected","featureselected","featureunselected","beforefeaturemodified","featuremodified","afterfeaturemodified","vertexmodified","vertexremoved","sketchstarted","sketchmodified","sketchcomplete","refresh"],rendererOptions:null,removeBackBufferDelay:null,initialize:function(name,url,options){this.optionsGServer=options;this.customRules={};var minLevel;var maxLevel;if(options==undefined){options={};minLevel=0;maxLevel=22;options.tileSize=new OpenLayers.Size(256,256);}else{minLevel=((options.mucXemNhoNhat==undefined||options.mucXemNhoNhat==null)?0:options.mucXemNhoNhat);maxLevel=((options.mucXemLonNhat==undefined||options.mucXemLonNhat==null)?22:options.mucXemLonNhat);}
if(!options.tileSize){options.tileSize=new OpenLayers.Size(256,256);}
this.map=options.map;this.zoomOffset=minLevel;var arrayResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var arrayServerResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var resolutions=[];var serverResolutions=[];serverResolutions=arrayServerResolutions;options.resolutions=arrayResolutions;options.serverResolutions=serverResolutions;OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);this.transitionEffect='resize';this.isBaseLayer=false;if(options.maLopBanDo!=undefined)
this.maLopBanDo=options.maLopBanDo;if(options.maLopDuLieu!=undefined)
this.maLopDuLieu=options.maLopDuLieu;this.name=name;this.tenLopBanDo=name;if(options.moTa!=undefined)
this.moTa=options.moTa;if(options.maBanDo!=undefined)
this.maBanDo=options.maBanDo;if(options.lopDuLieu!=undefined)
this.lopDuLieu=options.lopDuLieu;if(options.heQuyChieu!=undefined)
this.heQuyChieu=options.heQuyChieu;if(options.kieuKhongGian!=undefined)
this.kieuKhongGian=options.kieuKhongGian;if(options.maDichVu!=undefined)
this.maDichVu=options.maDichVu;if(options.trinhBayNangCao!=undefined)
this.trinhBayNangCao=options.trinhBayNangCao;if(options.duongDanAnh!=undefined)
this.duongDanAnh=options.duongDanAnh;if(options.laLopNen!=undefined){this.isBaseLayer=options.laLopNen;this.laLopNen=options.laLopNen;}
if(options.hienThi!=undefined){this.visibility=options.hienThi;this.hienThi=options.hienThi;}
if(options.thuTuHienThi!=undefined){this.thuTuHienThi=options.thuTuHienThi;}
if(options.nhom!=undefined)
this.nhom=options.nhom;if(options.duongDan!=undefined)
this.duongDan=options.duongDan;if(options.kieuTrinhBay!=undefined){this.setKieuTrinhBay(options.kieuTrinhBay);}
if(options.cauHinhHienThi!=undefined)
this.cauHinhHienThi=options.cauHinhHienThi;if(options.cauHinhNhan!=undefined)
this.cauHinhNhan=options.cauHinhNhan;if(options.mucXemNhoNhat!=undefined)
this.mucXemNhoNhat=options.mucXemNhoNhat;if(options.mucXemLonNhat!=undefined)
this.mucXemLonNhat=options.mucXemLonNhat;if(options.vungBaoNhoNhat!=undefined)
this.vungBaoNhoNhat=options.vungBaoNhoNhat;if(options.vungBaoLonNhat!=undefined)
this.vungBaoLonNhat=options.vungBaoLonNhat;if(options.mucHienThi!=undefined)
this.mucHienThi=options.mucHienThi;if(options.cache!=undefined)
this.cache=options.cache;if(options.dieuKienLoc!=undefined){this.dieuKienLoc=options.dieuKienLoc;}
if(options.cauHinhMoRong!=undefined){this.cauHinhMoRong=options.cauHinhMoRong;}
this.tileOptions.styles=this.kieuTrinhBay;if(!this.renderer||!this.renderer.supported()){this.assignRenderer();}
if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError();}
this.removeBackBufferDelay=0;this.renderer.map=this.map;this.selectedFeatures=[];this.selectedRids=[];this.tiles=[];},generateImage:function(symbol){var r=symbol.pointRadius;var w=symbol.graphicWidth;var canvas=document.createElement('canvas');canvas.width=2*r;canvas.height=2*r;var ctx=canvas.getContext('2d');var x=r,y=r;ctx.fillStyle=symbol.fillColor;ctx.strokeStyle=symbol.strokeColor;var lineWidth=symbol.strokeWidth;ctx.lineWidth=symbol.strokeWidth;ctx.globalAlpha=symbol.fillOpacity;if(symbol.strokeDashstyle){if(isChromeBrower){if(symbol.strokeDashstyle=="dot")
ctx.setLineDash([1,1+lineWidth]);else if(symbol.strokeDashstyle=="dash")
ctx.setLineDash([2+lineWidth,4+lineWidth]);else if(symbol.strokeDashstyle=="dashdot")
ctx.setLineDash([2+lineWidth,4+lineWidth,1]);else if(symbol.strokeDashstyle=="longdash")
ctx.setLineDash([4+lineWidth,8+lineWidth]);else if(symbol.strokeDashstyle=="longdashdot")
ctx.setLineDash([4+lineWidth,8+lineWidth,1]);else if(symbol.strokeDashstyle=="solid")
ctx.mozDash=null;}else{if(symbol.strokeDashstyle=="dot")
ctx.mozDash=[1,1+lineWidth];else if(symbol.strokeDashstyle=="dash")
ctx.mozDash=[2+lineWidth,4+lineWidth];else if(symbol.strokeDashstyle=="dashdot")
ctx.mozDash=[2+lineWidth,4+lineWidth,1];else if(symbol.strokeDashstyle=="longdash")
ctx.mozDash=[4+lineWidth,8+lineWidth];else if(symbol.strokeDashstyle=="longdashdot")
ctx.mozDash=[4+lineWidth,8+lineWidth,1];else if(symbol.strokeDashstyle=="solid")
ctx.mozDash=null;}}
if(typeof(drawSymbol)!=undefined)
drawSymbol(ctx,x,y,symbol);ctx.fill();ctx.stroke();var img=document.createElement('img');img.src=canvas.toDataURL("image/png");return img;},setKieuTrinhBay:function(kieuTrinhBay){this.kieuTrinhBay=kieuTrinhBay;if(this.kieuKhongGian.toLowerCase()=='point'){if(kieuTrinhBay==''||!kieuTrinhBay.styles)return;var symbol=this.kieuTrinhBay.styles['default'].defaultStyle;if(symbol.typeStyle=='GRAPHIC'){var key=symbol.graphicName+symbol.fillColor+symbol.fillOpacity+symbol.strokeColor+symbol.strokeOpacity+symbol.pointRadius;if(!extImgs[key]){extImgs[key]=this.generateImage(symbol);}}
else if(!extImgs[symbol.externalGraphic]){extImgs[symbol.externalGraphic]=document.createElement('img');extImgs[symbol.externalGraphic].src=symbol.externalGraphic;}
if(this.kieuTrinhBay.styles['default'].rules.length>0){for(var i=0;i<this.kieuTrinhBay.styles['default'].rules.length;i++){if(this.kieuTrinhBay.styles['default'].rules[i].symbolizer){var symbol=this.kieuTrinhBay.styles['default'].rules[i].symbolizer;if(symbol.typeStyle=='GRAPHIC'){var key=symbol.graphicName+symbol.fillColor+symbol.fillOpacity+symbol.strokeColor+symbol.strokeOpacity+symbol.pointRadius;if(!extImgs[key]){extImgs[key]=this.generateImage(symbol);}}
else if(!extImgs[symbol.externalGraphic]){extImgs[symbol.externalGraphic]=document.createElement('img');extImgs[symbol.externalGraphic].src=symbol.externalGraphic;}}}}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{'renderers':this.renderers.join("\n")}));}},assignRenderer:function(){for(var i=0,len=this.renderers.length;i<len;i++){var rendererClass=this.renderers[i];var renderer=(typeof rendererClass=="function")?rendererClass:OpenLayers.Renderer[rendererClass];if(renderer&&renderer.prototype.supported()){this.renderer=new renderer(this.div,this.rendererOptions);break;}}},destroy:function(){this.clearGrid();this.featureIDs=null;},addMarker:function(location){var tileData=this.getTileData(location);var context=tileData.tile.imgDiv.getContext('2d');var image=document.createElement('img');image.src="/gClient/gEditor/images/marker_black.png";image.id='canvasMarker';context.drawImage(image,tileData.i-16,tileData.j-28,32,32);},removeAllMarker:function(){var marker=document.getElementById('canvasMarker');return marker;},refresh:function(focus){for(var i=0;i<this.grid.length;i++){for(var j=0;j<this.grid[i].length;j++){this.grid[i][j].refresh(focus);}}
if(focus){var zoomExtent=null;var minx=20037508.34;var miny=20037508.34;var maxx=-20037508.34;var maxy=-20037508.34;for(var k in tileSelected){var tilebb=tileSelected[k].tile.bounds;if(minx>tilebb.left)
minx=tilebb.left;if(miny>tilebb.bottom)
miny=tilebb.bottom;if(maxx<tilebb.right)
maxx=tilebb.right;if(maxy<tilebb.top)
maxy=tilebb.top;}
zoomExtent=new OpenLayers.Bounds(minx,miny,maxx,maxy);if(zoomExtent&&minx!=20037508.34&&miny!=20037508.34&&maxx!=-20037508.34&&maxy!=-20037508.34){tileSelected={};this.map.zoomToExtent(zoomExtent);}}},clearSelection:function(){if(this.selectedFeatures.length>0){this.selectedFeatures=[];if(this.map.selectLayer)
this.map.selectLayer.removeAllFeatures();this.refresh();}
if(this.selectedRids.length>0){this.selectedRids=[];if(this.map.selectLayer)
this.map.selectLayer.removeAllFeatures();this.refresh();}},selectFeature:function(fid,focus){if(fid){this.selectedFeatures=fid;this.refresh(focus);}},selectFeatureByRefId:function(rid,focus){if(rid){this.selectedRids=rid;this.refresh(focus);}},addTile:function(bounds,position){var tile=new gClient.Tile.Canvas(this,position,bounds,null,this.tileSize,this.tileOptions);if(this.tiles.indexOf(tile)==-1){this.tiles.push(tile);}
if(tile.imgDiv){this.tileCanvas.push(tile.imgDiv);}
return tile;},clone:function(obj){if(obj==null){obj=new gClient.Layer.Canvas(this.name,this.duongDan,this.getOptions());}
obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj;},toJson:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.thuTuHienThi=this.thuTuHienThi;result.moTa=this.moTa;result.maBanDo=this.maBanDo;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan.replace("'","''");result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.cauHinhNhan=this.cauHinhNhan;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.dieuKienLoc=this.dieuKienLoc.replace("'","''");result.CLASS_NAME=this.CLASS_NAME;return result;},drawLegend:function(id){var divLegend=document.getElementById(id);if(divLegend==undefined||divLegend==null)return;divLegend.setAttribute('style','display:inline; width: auto');divLegend.innerHTML="";var symbolType=layer.kieuKhongGian;var pointFeature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,0));var lineFeature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-20,0),new OpenLayers.Geometry.Point(-10,0),new OpenLayers.Geometry.Point(10,0),new OpenLayers.Geometry.Point(20,0)]));var polygonFeature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-15,-8),new OpenLayers.Geometry.Point(15,-8),new OpenLayers.Geometry.Point(15,8),new OpenLayers.Geometry.Point(-15,8)])]));var featureDraw=polygonFeature.clone();if(symbolType.toUpperCase().match('LINE')!=null){featureDraw=lineFeature.clone();}else if(symbolType.toUpperCase().match('POINT')!=null){featureDraw=pointFeature.clone();}
var Renderer=OpenLayers.Renderer["SVG"];if(layer.kieuTrinhBay!=undefined&&layer.kieuTrinhBay!=""&&layer.isBaseLayer==false&&layer.kieuKhongGian!='IMAGE'&&layer.kieuKhongGian!='HEATMAP'){var data=[];if(!layer.kieuTrinhBay.styles)return;var style=layer.kieuTrinhBay.styles['default'];var rules=style.rules;if(rules.length>0&&Renderer&&Renderer.prototype.supported())
{for(var j=0;j<rules.length;j++){if(rules[j].title==undefined)continue;var symbolizer=rules[j].symbolizer;var symbolizer=$.extend({},symbolizer);if(symbolizer.graphicXOffset!=undefined)
delete symbolizer.graphicXOffset;if(symbolizer.graphicYOffset!=undefined)
delete symbolizer.graphicYOffset;if(symbolizer.graphicWidth!=undefined)
symbolizer.graphicWidth=25;if(symbolizer.graphicHeight!=undefined)
symbolizer.graphicHeight=25;if(symbolizer.pointRadius!=undefined)
symbolizer.pointRadius=10;var divRule=document.createElement("div");if(j===0||j%2===0)
divRule.setAttribute('style','padding-left:20px');else
divRule.setAttribute('style','padding-left:20px;background:none repeat scroll 0 0 buttonface');divRule.id=id+"_rule_"+j;var el=document.createElement("div");el.setAttribute('style','display:inline-block;padding-right:10px;height:28px;float:left;padding-top:4px');el.id=id+"_sym_"+j;renderer=new Renderer(divRule.appendChild(el));renderer.map={getResolution:function(){return 1;}};renderer.setSize(new OpenLayers.Size(30,20));renderer.setExtent(new OpenLayers.Bounds(-15,-10,15,10),true);renderer.resolution=1;renderer.drawFeature(featureDraw.clone(),symbolizer);var el1=document.createElement("div");el1.setAttribute('style','display:inline;font-family:Arial');el1.innerHTML=rules[j].title;divRule.appendChild(el1);divLegend.appendChild(divRule);}}
else{var symDefault=style.defaultStyle;var divRule=document.createElement("div");divRule.setAttribute('style','padding-left:20px;');divRule.id=id+"_rule_0";var el=document.createElement("div");el.setAttribute('style','display:inline-block;padding-right:10px;height:28px;float:left;padding-top:4px');el.id=id+"_sym_0";renderer=new Renderer(divRule.appendChild(el));renderer.map={getResolution:function(){return 1;}};renderer.setSize(new OpenLayers.Size(30,20));renderer.setExtent(new OpenLayers.Bounds(-15,-10,15,10),true);renderer.resolution=1;renderer.drawFeature(featureDraw.clone(),symDefault);var el1=document.createElement("div");el1.setAttribute('style','display:inline;font-family:Arial');el1.innerHTML=layer.tenLopBanDo;divRule.appendChild(el1);divLegend.appendChild(divRule);}}
else{var divRule=document.createElement("div");divRule.innerHTML="<span style='padding-left:20px;font-family:Arial'>Không có thông tin trình bày</span>";divLegend.appendChild(divRule);}},getLayerInfo:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.thuTuHienThi=this.thuTuHienThi;result.moTa=this.moTa;result.maBanDo=this.maBanDo;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan;result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.cauHinhNhan=this.cauHinhNhan;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.dieuKienLoc=this.dieuKienLoc;return result;},getFeatureFromEvent:function(){},setOpacity:function(opacity){for(var i=0;i<this.grid.length;i++){for(var j=0;j<this.grid[i].length;j++){this.grid[i][j].setOpacity(opacity);}}},setCustomRule:function(ruleobj){if(this.customRules!=null){for(var col in ruleobj){this.customRules[col]=ruleobj[col];}}else{this.customRules=ruleobj;}
this.refresh();},showTip:function(){if(this.map.selectFeatureControl){var toolTip=document.getElementById('tool_tip')
if(!toolTip){var div=document.createElement('div');div.className='maptip';div.innerHTML='<div id="tool_tip" class="giscloud-record-tooltip giscloud-state-hidden" style="z-index:999;"><span id="info_window_text"></span>'+'<div class="giscloud-tooltip-header"><center>'+this.tenLopBanDo+'</center></span></div>'+'<div class="gav-tooltip-content">'+'<table>'+'<tbody>'+'<tr>'+'<td class="gav-title">Life expectancy at birth</td>'+'<td>(1800)</td>'+'<td class="gav-tooltip-data">NaN</td>'+'</tr>'+'</tbody>'+'</table>'+'</div>'+'</div>'+'</div>';this.map.div.appendChild(div);}
this.map.selectFeatureControl.hoverCallback=function(e){var toolTip=$('#tool_tip');toolTip.show();toolTip.css('top',e.clientY+30);toolTip.css('left',e.clientX+30);}
this.map.selectFeatureControl.lostHovercallback=function(e){var toolTip=$('#tool_tip');toolTip.hide();}}},hideTip:function(){var toolTip=document.getElementById('tool_tip');if(toolTip){toolTip.remove();}},CLASS_NAME:"gClient.Layer.Canvas"});﻿
gClient.Category=OpenLayers.Class({catid:null,color:null,min:null,max:null,divmap:null,namelayer:null,initialize:function(catid,color,min,max,divmap,namelayer,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.catid=catid;this.color=color;this.min=min;this.max=max;this.divmap=divmap;this.namelayer=namelayer;},toHTML:function(parity){var typeClass=1;if(parent==null||parent==undefined){parent=0;}
if((parent%2)==0){typeClass=1;}else{typeClass=2;}
return'<li class="style-background-sub cc-r'+typeClass+'">'+'<input style="margin:0 0 0 12px; width:30px;" type="hidden" maxlength="6" size="6" class="color-picker" data-catid="'+this.catid+'" id="idKhoang'+this.catid+'" value="'+this.color+'" />'+'<p class="left"></p> <input type="text" class="textbox style-border w50 left" data-divmap="'+this.divmap+'" data-namelayer="'+this.namelayer+'" data-catid="'+this.catid+'" type="text" maxlength="6" size="6" value="'+this.min+'-'+this.max+'" id="input_name'+this.catid+'" />'+'<p class="left"></p> <input type="text" class="textbox style-border w50 left" onchange="fnOnChangeInputFrom(this);" data-divmap="'+this.divmap+'" data-namelayer="'+this.namelayer+'" data-catid="'+this.catid+'" type="text" maxlength="6" size="6" value="'+this.min+'" id="input_From'+this.catid+'"  />'+'<p class="left"></p> <input type="text" class="textbox style-border w50 left"  onchange="fnOnChangeInputTo(this);" data-divmap="'+this.divmap+'" data-namelayer="'+this.namelayer+'" data-catid="'+this.catid+'" type="text" maxlength="6" size="6" value="'+this.max+'" id="input_To'+this.catid+'" />'+'</li>';},check:function(val){if(this.min<=val&&val<=this.max){return true;}
return false;},CLASS_NAME:"gClient.Category"});﻿
gClient.Control.InfoFeature=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["beforefeaturehighlighted","featurehighlighted","featureunhighlighted","featureinfo","click"],map:null,onBeforeSelect:function(){},onSelect:function(){},onUnselect:function(){},scope:null,geometryTypes:null,layer:null,layers:null,callbacks:null,selectStyle:null,renderIntent:"select",handler:null,handlers:null,listSelectedID:null,VectorInfoControl:null,vectorLayer:null,defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},initialize:function(options,onSelectCallback){if(this.scope===null||this.scope===undefined){this.scope=this;}
OpenLayers.Control.prototype.initialize.apply(this,[options]);this.map=options.map;this.map.infoControl=this;this.initLayer(this.map.layers);this.vectorLayer=options.layer;if(this.vectorLayer){this.VectorInfoControl=new OpenLayers.Control.SelectFeature(this.vectorLayer,{clickout:true,toggle:false,multiple:false,hover:false,toggleKey:"ctrlKey",multipleKey:"shiftKey"});this.VectorInfoControl.handlers.feature.stopDown=false;this.vectorLayer.events.register('featureselected',this,this.vectorFeatureSelected);this.map.addControl(this.VectorInfoControl);}
var callbacks={click:this.clickFeature};this.callbacks=OpenLayers.Util.extend(callbacks,this.callbacks);this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);this.handler=new OpenLayers.Handler.Click(this,{'click':this.clickFeature},this.handlerOptions);this.handlers={feature:new OpenLayers.Handler.Feature(this,this.map.layers[0],this.callbacks,{geometryTypes:this.geometryTypes})};},clearHandlers:function(){if(this.handler)
this.handler.deactivate();if(this.handlers.feature)
this.handlers.feature.deactivate();},initLayer:function(layers){if(OpenLayers.Util.isArray(layers)){this.layers=layers;this.layer=new OpenLayers.Layer.Vector.RootContainer(this.id+"_container",{layers:layers});}else{this.layer=layers;}},setVectorLayer:function(layers){this.vectorLayer=layers;if(this.VectorInfoControl){this.VectorInfoControl.setLayer(layers);}else{this.VectorInfoControl=new OpenLayers.Control.SelectFeature(layers,{clickout:true,toggle:false,multiple:false,hover:false,toggleKey:"ctrlKey",multipleKey:"shiftKey"});this.VectorInfoControl.handlers.feature.stopDown=false;this.map.addControl(this.VectorInfoControl);this.VectorInfoControl.activate();}
for(var i=0;i<this.vectorLayer.length;i++){this.vectorLayer[i].events.register('featureselected',this,this.vectorFeatureSelected);}},destroy:function(){if(this.active&&this.layer){this.layer.destroy();}
OpenLayers.Control.prototype.destroy.apply(this,arguments);if(this.layers){if(this.map){for(var i=0;i<this.layers.length;i++){this.map.removeLayer(this.layers[i]);}}}},activate:function(){if(!this.active){if(this.handler)
this.handler.activate();if(this.VectorInfoControl!=null){this.VectorInfoControl.activate();}
if(this.map.selectFeatureControl&&this.map.selectFeatureControl.active)
this.map.selectFeatureControl.deactivate();}
return OpenLayers.Control.prototype.activate.apply(this,arguments);},deactivate:function(){if(this.active){if(this.handler)
this.handler.deactivate();if(this.VectorInfoControl)
this.VectorInfoControl.deactivate();if(this.vectorLayer){this.vectorLayer.events.unregister('featureselected',this,this.vectorFeatureSelected);}}
return OpenLayers.Control.prototype.deactivate.apply(this,arguments);},clickFeature:function(evt){var lonlat=this.map.getLonLatFromPixel(new OpenLayers.Pixel(evt.layerX,evt.layerY));var touches=evt.lastTouches;if(touches){lonlat=this.map.getLonLatFromPixel(evt.xy);}
var tiles=this.map.getTiles(lonlat);if(tiles){var x,y;if(tiles.length>0&&tiles[0]!=null){x=tiles[0].i;y=tiles[0].j;}
else{x=tiles.i;y=tiles.j;}
var r=8;var xr=x+r;var xl=x-r;var yt=y-r;var yb=y+r;var isHover;var selectedCandidates=new Array();for(var i=0;i<tiles.length;i++){var candidate=new Object();var layer=tiles[i].tile.layer;if(!layer)
return;var geomType=layer.kieuKhongGian.toLowerCase();if(geomType.indexOf('line')!=-1||geomType==='multilinestring'||geomType==='point'||geomType==='multipoint'){if(geomType.indexOf('line')!=-1||geomType==='multilinestring'){candidate.priority=5+parseInt(layer.getZIndex());}
if(geomType==='point'||geomType==='multipoint'){candidate.priority=10+parseInt(layer.getZIndex());}
var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){for(var j=0;j<d.length;j++){if(d[j]==undefined)
continue;if(d[j].t=='ml'||d[j].t=='mp'){for(var k=0;k<d[j].p.length;k++){isHover=TouchesPath(d[j].p[k],x,y,r);if(isHover)break;}}
else
isHover=TouchesPath(d[j].p,x,y,r);if(isHover){candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.layer=layer;if(!selectedCandidates.contains(candidate))
selectedCandidates.push(candidate);}}}}
if(geomType==='polygon'){var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){var minarea=99999;for(var j=0;j<d.length;j++){isHover=false;if(d[j].t==='a'){var isInside=InsidePolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
if(d[j].t==='ma'){var isInside=InsideMultiPolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
else if(d[j].t==='gc'){isHover=TouchesGeometryCollection(d[j].p,x,y,r);}
if(isHover){var area=(d[j].b.xmax-d[j].b.xmin)*(d[j].b.ymax-d[j].b.ymin);if(area==undefined||isNaN(area))area=minarea-1;candidate=new Object();candidate.priority=parseInt(layer.getZIndex());candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.layer=layer;if(area<minarea){minarea=area;if(!selectedCandidates.contains(candidate)){selectedCandidates.push(candidate);}}}}}}}
if(selectedCandidates.length>0){selectedCandidates=selectedCandidates.sort(function(a,b){return a.priority-b.priority});selectedCandidates=selectedCandidates.reverse();var layer=selectedCandidates[0].layer;for(var i=0;i<layer.map.layers.length;i++){if(layer.map.layers[i].CLASS_NAME=='gClient.Layer.Canvas'){layer.map.layers[i].clearSelection();}}
layer.selectFeature(selectedCandidates[0].fid);this.events.triggerEvent("featureinfo",{features:selectedCandidates,x:lonlat.lon,y:lonlat.lat});}else{if(layer){for(var i=0;i<layer.map.layers.length;i++){if(this.map.layers[i].CLASS_NAME=='gClient.Layer.Canvas'){this.map.layers[i].clearSelection();}}}
this.events.triggerEvent("click",{features:"",x:lonlat.lon,y:lonlat.lat});}}else{for(var i=0;i<layer.map.layers.length;i++){if(this.map.layers[i].CLASS_NAME=='gClient.Layer.Canvas'){this.map.layers[i].clearSelection();}}
this.events.triggerEvent("click",{features:"",x:lonlat.lon,y:lonlat.lat});}},vectorFeatureSelected:function(e){var features=new Array();features.push(e.feature);this.events.triggerEvent("featureinfo",{features:features,x:null,y:null});},select:function(featureId,layer){},unselect:function(layer,feature){this.unhighlight(layer,feature);OpenLayers.Util.removeItem(layer.selectedFeatures,feature);layer.events.triggerEvent("featureunselected",{feature:feature});this.onUnselect.call(this.scope,feature);},isBoundContainPoint:function(selectBox,point,tile){if(tile==undefined||tile==null)
return false;var bound=tile.bounds;var x=point.p[0];var y=255-point.p[1];x=x*this.map.getResolution()+bound.left;y=y*this.map.getResolution()+bound.bottom;return selectBox.containsPixel(new OpenLayers.Pixel(x,y));},selectBoundIntersectsWithGeomBox:function(selectBox,data,tile){var geobox=data.b;if(geobox==undefined||geobox==null||tile==undefined||tile==null)
return false;var bound=tile.bounds;var xmin=geobox.xmin*this.map.getResolution()+bound.left;var xmax=geobox.xmax*this.map.getResolution()+bound.left;var ymin=(255-geobox.ymax)*this.map.getResolution()+bound.bottom;var ymax=(255-geobox.ymin)*this.map.getResolution()+bound.bottom;var boxOfGeom=new OpenLayers.Bounds(xmin,ymin,xmax,ymax);if(selectBox.intersectsBounds(boxOfGeom)){if(selectBox.containsBounds(boxOfGeom)||boxOfGeom.containsBounds(selectBox)){return true;}
else{for(var i=0;i<data.p[0].length;i+=2){var x=data.p[0][i]*this.map.getResolution()+bound.left;;var y=(255-data.p[0][i+1])*this.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);if(selectBox.containsLonLat(lonlat))
return true;}
return false;}}
return selectBox.containsBounds(boxOfGeom);},setMap:function(map){this.handlers.feature.setMap(map);OpenLayers.Control.prototype.setMap.apply(this,arguments);},setLayer:function(layers){this.handlers.feature.deactivate();var isActive=this.active;this.unselectAll();this.deactivate();if(this.layers){this.layer.destroy();this.layers=null;}
this.initLayer(layers);this.handlers.feature.layer=this.layer;if(isActive){this.activate();}},CLASS_NAME:"gClient.Control.InfoFeature"});﻿
gClient.LocationParameters=OpenLayers.Class({MapService:null,Location:null,Distance:null,initialize:function(options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}},destroy:function(){},CLASS_NAME:"gClient.LocationParameters"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.MarkerGrid=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"gMarkerGrid",url:[],attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",type:'txt',buffer:0,units:"m",projection:"EPSG:900913",isBaseLayer:false,visibility:true,sphericalMercator:true,tileOptions:null,markers:null,drawn:false,cat:null,subcat:null,initialize:function(name,url,options){OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);this.markers=[];if(options==undefined){options={};}
if(options.cat!=undefined){this.cat=options.cat;}
if(options.subcat!=undefined){this.subcat=options.subcat;}},destroy:function(){this.clearGrid();if(this.markers.lenght>0)this.clearMarkers();this.markers=null;OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments);},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.MarkerGrid(this.name,this.url,this.getOptions());}
obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);obj.markers=[];},addTile:function(bounds,position){return new gClient.Tile.POITile(this,position,bounds,null,this.tileSize,this.cat,this.subcat);},Refresh:function(){var tilesBounds=this.getTilesBounds();this.initGriddedTiles(tilesBounds);},addMarker:function(marker){this.markers.push(marker);if(this.map&&this.map.getExtent()){marker.map=this.map;this.drawMarker(marker);}},removeMarker:function(marker){OpenLayers.Util.removeItem(this.markers,marker);if((marker.icon!=null)&&(marker.icon.imageDiv!=null)&&(marker.icon.imageDiv.parentNode==this.div)){this.div.removeChild(marker.icon.imageDiv);marker.drawn=false;}},clearMarkers:function(){if(this.markers!=null){while(this.markers.length>0){this.removeMarker(this.markers[0]);}}},moveTo:function(bounds,zoomChanged,dragging){OpenLayers.Layer.XYZ.prototype.moveTo.apply(this,arguments);if(zoomChanged||!this.drawn){this.drawn=true;}},drawMarker:function(marker){var px=this.map.getLayerPxFromLonLat(marker.lonlat);if(px==null){marker.display(false);}else{var markerImg=marker.draw(px);if(!marker.drawn){this.div.appendChild(markerImg);marker.drawn=true;}}},CLASS_NAME:"gClient.Layer.MarkerGrid"});gClient=gClient||{};gClient.Routes=OpenLayers.Class({directions:null,routes:null,stops:null,initialize:function(){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.directions=[];this.stops=[];this.routes=[];},toString:function(){return"longName";},toShortString:function(){return shortName;},clone:function(){return new gClient.Route();},CLASS_NAME:"gClient.Routes"});﻿
gClient.GeoService.Provider=OpenLayers.Class({serviceName:null,serviceUrl:null,serviceApiKey:null,initialize:function(serviceName,serviceUrl,serviceApiKey,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.serviceName=serviceName;this.serviceUrl=serviceUrl;this.serviceApiKey=serviceApiKey;},destroy:function(){},executeRequest:function(requestUrl,callback,errback,options){var response=null;var convertResponse=this.convertResponse;jQuery.ajax({dataType:'jsonp',url:requestUrl,cache:false,success:function(data){response=convertResponse(data);if(callback&&typeof(callback)==="function"){callback(response,options);}},error:function(){errback();}});},convertResponse:function(response){return null;},createRequest:function(requestParams){return null;},CLASS_NAME:"gClient.GeoService.Provider"});﻿
gClient.GeoRouter.ArcGISProvider=OpenLayers.Class(gClient.GeoService.Provider,{RouteParams:null,initialize:function(serviceName,serviceUrl,serviceApiKey,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.Provider.prototype.initialize.apply(this,arguments);},destroy:function(){},convertResponse:function(response){if(response.error!=null){return null;}
else{var routes=new gClient.Routes();for(var i=0;i<response.directions.length;i++){var direction=new gClient.Routes.Direction();direction.Paths=[];for(var j=0;j<response.directions[i].features.length;j++){direction.Paths.push(response.directions[i].features[j].attributes.text);}}
routes.Directions=direction;for(var i=0;i<response.routes.features.length;i++){var route=new gClient.Routes.Route();route.Paths=[];for(var j=0;j<response.routes.features[i].geometry.paths.length;j++){for(var k=0;k<response.routes.features[i].geometry.paths[j].length;k++){route.Paths.push(response.routes.features[i].geometry.paths[j][k]);}}}
routes.Routes=route;routes.Stops=[];for(var i=0;i<response.stops.features.length;i++){var stop=new gClient.Routes.Stop();stop.Location=response.stops.features[i].geometry;routes.Stops.push(stop);}
return routes;}},createRequest:function(requestParams){var url='f=json&returnDirections='+requestParams['returnDirections']+'&returnRoutes='+
requestParams['returnRoutes']+'&returnStops='+requestParams['returnStops']+'&returnBarriers='+
requestParams['returnBarriers']+'&stops={"type":"features","features":[';for(var i=0;i<requestParams['stops'].length;i++){if(i==requestParams['stops'].length-1){url+='{"geometry":{"x":'+requestParams['stops'][i].lon+',"y":'+requestParams['stops'][i].lat+',"spatialReference":{"wkid":4326}}}],';}
else{url+='{"geometry":{"x":'+requestParams['stops'][i].lon+',"y":'+requestParams['stops'][i].lat+',"spatialReference":{"wkid":4326}}},';}}
url+='"doNotLocateOnRestrictedElements":false}';return this.serviceUrl+url;},CLASS_NAME:"gClient.GeoRouter.ArcGISProvider"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.Canvases=OpenLayers.Class(OpenLayers.Layer.XYZ,{map:null,maLopBanDo:'',maLopDuLieu:'',tenLopBanDo:'',moTa:'',maBanDo:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,thuTuHienThi:null,duongDanAnh:'',laLopNen:false,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',cauHinhNhan:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',dieuKienLoc:'',cauHinhMoRong:'',name:'masterLayer',selectedFeatures:null,tileCanvas:null,url:[],attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",sphericalMercator:true,wrapDateLine:true,tileOptions:null,optionsGServer:null,renderers:['Canvas','VML'],renderer:null,layers:[],tiles:[],layerIds:[],EVENT_TYPES:["beforefeatureadded","beforefeaturesadded","featureadded","featuresadded","beforefeatureremoved","beforefeaturesremoved","featureremoved","featuresremoved","beforefeatureselected","featureselected","featureunselected","beforefeaturemodified","featuremodified","afterfeaturemodified","vertexmodified","vertexremoved","sketchstarted","sketchmodified","sketchcomplete","refresh"],rendererOptions:null,initialize:function(name,url,options){this.optionsGServer=options;var minLevel=0;var maxLevel=22;this.url=url;if(!options.tileSize){options.tileSize=new OpenLayers.Size(256,256);}
this.map=options.map;this.zoomOffset=minLevel;var arrayResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var arrayServerResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var resolutions=[];var serverResolutions=[];serverResolutions=arrayServerResolutions;options.resolutions=arrayResolutions;options.serverResolutions=serverResolutions;OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);this.transitionEffect='resize';this.isBaseLayer=false;this.name=name;if(!this.renderer||!this.renderer.supported()){this.assignRenderer();}
if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError();}
if(this.renderer)
this.renderer.map=this.map;this.selectedFeatures=[];var length=url.split('/tile/')[0].split('/').length-1;this.layerIds=url.split('/tile/')[0].split('/')[length].split(',');for(var i=0;i<this.layerIds.length;i++){var layer=this.map.getLayersBy('maLopBanDo',this.layerIds[i])[0];if(layer){this.layers.push(layer);layer.events.on({'visibilitychanged':this.layerChangeVisibility});}}
this.tileOptions.layers=this.layers;this.tileOptions.map=this.map;},layerChangeVisibility:function(evt){var layer=evt.object;if(layer.visibility){for(var i=0;i<layer.map.masterLayer.tiles.length;i++){layer.map.masterLayer.tiles[i].reRender();}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{'renderers':this.renderers.join("\n")}));}},assignRenderer:function(){for(var i=0,len=this.renderers.length;i<len;i++){var rendererClass=this.renderers[i];var renderer=(typeof rendererClass=="function")?rendererClass:OpenLayers.Renderer[rendererClass];if(renderer&&renderer.prototype.supported()){this.renderer=new renderer(this.div,this.rendererOptions);break;}}},startRenderer:function(){if(this.layers.length>0){var layer;for(var i=0;i<this.layers.length;i++){if(this.layers[i].visibility)
layer=this.layers[i];}
if(layer){layer.setVisibility(false);layer.setVisibility(true);}}},destroy:function(){this.clearGrid();this.featureIDs=null;},refresh:function(){var c=document.getElementsByTagName('canvas');for(var i=0;i<this.grid.length;i++){for(var j=0;j<this.grid[i].length;j++){this.grid[i][j].refresh();}}},addTile:function(bounds,position){var tile=new gClient.Tile.Canvases(this,position,bounds,null,this.tileSize,this.tileOptions);this.tiles.push(tile);return tile;},getFeatureFromEvent:function(){},CLASS_NAME:"gClient.Layer.Canvases"});﻿gClient.Popup=gClient.Popup||{};gClient.Popup.gFramedCloud=OpenLayers.Class(OpenLayers.Popup.Framed,{contentDisplayClass:"olgFramedCloudPopupContent",autoSize:true,panMapIfOutOfView:true,imageSize:new OpenLayers.Size(574,595),isAlphaImage:false,fixedRelativePosition:false,positionBlocks:{"tl":{'offset':new OpenLayers.Pixel(44,0),'padding':new OpenLayers.Bounds(20,30,10,30),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,22,16),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(40,'auto'),anchor:new OpenLayers.Bounds(null,31,0,16),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',19),anchor:new OpenLayers.Bounds(0,15,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,18),anchor:new OpenLayers.Bounds(null,16,0,null),position:new OpenLayers.Pixel(-550,-544)},{size:new OpenLayers.Size(30,20),anchor:new OpenLayers.Bounds(null,0,29,null),position:new OpenLayers.Pixel(0,-576)}]},"tr":{'offset':new OpenLayers.Pixel(-44,0),'padding':new OpenLayers.Bounds(20,30,10,30),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,22,16),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(40,'auto'),anchor:new OpenLayers.Bounds(null,31,0,16),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',19),anchor:new OpenLayers.Bounds(0,13,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,18),anchor:new OpenLayers.Bounds(null,13,0,null),position:new OpenLayers.Pixel(-550,-545)},{size:new OpenLayers.Size(30,20),anchor:new OpenLayers.Bounds(30,0,null,null),position:new OpenLayers.Pixel(0,-573)}]},"bl":{'offset':new OpenLayers.Pixel(45,0),'padding':new OpenLayers.Bounds(20,30,0,20),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,21,6),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(33,'auto'),anchor:new OpenLayers.Bounds(null,21,0,6),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',21),anchor:new OpenLayers.Bounds(0,9,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,21),anchor:new OpenLayers.Bounds(null,0,0,null),position:new OpenLayers.Pixel(-543,-553)},{size:new OpenLayers.Size(30,33),anchor:new OpenLayers.Bounds(null,null,27,0),position:new OpenLayers.Pixel(-30,-577)}]},"br":{'offset':new OpenLayers.Pixel(-45,0),'padding':new OpenLayers.Bounds(20,30,0,18),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,33,6),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(33,'auto'),anchor:new OpenLayers.Bounds(null,21,0,6),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',27),anchor:new OpenLayers.Bounds(0,4,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,21),anchor:new OpenLayers.Bounds(null,0,0,null),position:new OpenLayers.Pixel(-543,-554)},{size:new OpenLayers.Size(30,33),anchor:new OpenLayers.Bounds(32,null,null,0),position:new OpenLayers.Pixel(-30,-578)}]}},minSize:new OpenLayers.Size(105,10),maxSize:new OpenLayers.Size(1200,660),initialize:function(id,lonlat,contentSize,contentHTML,anchor,closeBox,closeBoxCallback){this.imageSrc=OpenLayers.Util.getImagesLocation()+'popup-spritep-wd.png';OpenLayers.Popup.Framed.prototype.initialize.apply(this,arguments);this.contentDiv.className=this.contentDisplayClass;},destroy:function(){OpenLayers.Popup.Framed.prototype.destroy.apply(this,arguments);},CLASS_NAME:"gClient.Popup.gFramedCloud"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.VectorTile=OpenLayers.Class(OpenLayers.Layer.XYZ,OpenLayers.Layer.Vector,{maLopBanDo:'',maLopDuLieu:'',moTa:'',maBanDoChuyenDe:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,duongDanAnh:'',nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',url:[],featureIDs:null,attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",type:'txt',buffer:0,units:"m",projection:"EPSG:900913",isBaseLayer:false,visibility:true,sphericalMercator:true,tileOptions:null,whereClause:null,optionsVectorTile:null,initialize:function(name,url,options){this.optionsVectorTile=options;OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);if(options==undefined){options={};}
if(options.whereClause!=undefined){this.whereClause=options.whereClause;}
this.featureIDs={};if(options.maLopBanDo!=undefined)
this.maLopBanDo=options.maLopBanDo;if(options.maLopDuLieu!=undefined)
this.maLopDuLieu=options.maLopDuLieu;this.name=name;if(options.moTa!=undefined)
this.moTa=options.moTa;if(options.maBanDoChuyenDe!=undefined)
this.maBanDoChuyenDe=options.maBanDoChuyenDe;if(options.lopDuLieu!=undefined)
this.lopDuLieu=options.lopDuLieu;if(options.heQuyChieu!=undefined)
this.heQuyChieu=options.heQuyChieu;if(options.kieuKhongGian!=undefined)
this.kieuKhongGian=options.kieuKhongGian;if(options.maDichVu!=undefined)
this.maDichVu=options.maDichVu;if(options.trinhBayNangCao!=undefined)
this.trinhBayNangCao=options.trinhBayNangCao;if(options.duongDanAnh!=undefined)
this.duongDanAnh=options.duongDanAnh;if(options.laLopNen!=undefined)
this.isBaseLayer=options.laLopNen;if(options.hienThi!=undefined)
this.visibility=options.hienThi;if(options.nhom!=undefined)
this.nhom=options.nhom;if(options.duongDan!=undefined)
this.duongDan=options.duongDan;if(options.kieuTrinhBay!=undefined)
this.kieuTrinhBay=options.kieuTrinhBay;if(options.cauHinhHienThi!=undefined)
this.cauHinhHienThi=options.cauHinhHienThi;if(options.mucXemNhoNhat!=undefined)
this.mucXemNhoNhat=options.mucXemNhoNhat;if(options.mucXemLonNhat!=undefined)
this.mucXemLonNhat=options.mucXemLonNhat;if(options.vungBaoNhoNhat!=undefined)
this.vungBaoNhoNhat=options.vungBaoNhoNhat;if(options.vungBaoLonNhat!=undefined)
this.vungBaoLonNhat=options.vungBaoLonNhat;if(options.mucHienThi!=undefined)
this.mucHienThi=options.mucHienThi;if(options.cache!=undefined)
this.cache=options.cache;if(options.whereClause!=undefined)
this.whereClause=options.whereClause;},destroy:function(){this.clearGrid();OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments);OpenLayers.Layer.Vector.prototype.destroy.apply(this,arguments);this.featureIDs=null;},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.VectorTile(this.name,this.duongDan,this.getOptions());}},addTile:function(bounds,position){return new gClient.Tile.Vector(this,position,bounds,null,this.tileSize,this.whereClause);},Refresh:function(){var tilesBounds=this.getTilesBounds();this.initGriddedTiles(tilesBounds);},moveTo:function(bounds,zoomChanged,dragging){if(zoomChanged){this.removeAllFeatures();this.featureIDs={};}
OpenLayers.Layer.XYZ.prototype.moveTo.apply(this,arguments);OpenLayers.Layer.Vector.prototype.moveTo.apply(this,arguments);},toJson:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan.replaceAll("'","''");result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause.replaceAll("'","''");result.CLASS_NAME=this.CLASS_NAME;return result;},getLayerInfo:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan;result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause;result.CLASS_NAME=this.CLASS_NAME;return result;},CLASS_NAME:"gClient.Layer.VectorTile"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.Choropleth=OpenLayers.Class(OpenLayers.Layer.Vector,{loaded:false,cats:null,format:null,isBaseLayer:false,projection:new OpenLayers.Projection("EPSG:4326"),formatOptions:null,initialize:function(name,url,options){var context={getColour:function(feature){return feature.attributes["colour"];}};var template={fillOpacity:1,strokeColor:"#555555",strokeWidth:1,label:"${name}",fillColor:"${getColour}"};style=new OpenLayers.Style(template,{context:context});var styleMap=new OpenLayers.StyleMap({'default':style});this.format=OpenLayers.Format.GeoJSON;var newArguments=[];newArguments.push(name,options);OpenLayers.Layer.Vector.prototype.initialize.apply(this,newArguments);this.url=url;this.cats=[];this.onload=options.onload;},setVisibility:function(visibility,noEvent){OpenLayers.Layer.Vector.prototype.setVisibility.apply(this,arguments);if(this.visibility&&!this.loaded){this.loadGML();}},moveTo:function(bounds,zoomChanged,minor){OpenLayers.Layer.Vector.prototype.moveTo.apply(this,arguments);if(this.visibility&&!this.loaded){this.loadGML();}},loadGML:function(){if(!this.loaded){this.events.triggerEvent("loadstart");var obj=this;jQuery.ajax({dataType:'jsonp',url:this.url,cache:false,success:function(data){obj.requestSuccess(data);},complete:obj.onload,error:function(){}});this.loaded=true;}},setUrl:function(url){this.url=url;this.destroyFeatures();this.loaded=false;this.loadGML();},requestSuccess:function(request){doc=request;var options={};OpenLayers.Util.extend(options,this.formatOptions);if(this.map&&!this.projection.equals(this.map.getProjectionObject())){options.externalProjection=this.projection;options.internalProjection=this.map.getProjectionObject();}
var gml=this.format?new this.format(options):new OpenLayers.Format.GML(options);this.addFeatures(gml.read(doc));this.events.triggerEvent("loadend");},toJson:function(){var result={};result.url=this.url;result.name=this.name;result.styleMap=this.styleMap;result.CLASS_NAME=this.CLASS_NAME;return result;},requestFailure:function(request){OpenLayers.Console.userError(OpenLayers.i18n("errorLoadingGML",{'url':this.url}));this.events.triggerEvent("loadend");},CLASS_NAME:"gClient.Layer.Choropleth"});﻿
gClient.AddressParameters=OpenLayers.Class({MapService:null,Street:null,Address:null,City:null,State:null,Zip:null,initialize:function(options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}},destroy:function(){},CLASS_NAME:"gClient.AddressParameters"});﻿
gClient.Tile=gClient.Tile||{};gClient.Tile.Canvases=OpenLayers.Class(OpenLayers.Tile,{layers:null,url:null,imgDiv:null,labelCanvas:null,frame:null,layerAlphaHack:null,isBackBuffer:false,isFirstDraw:true,backBufferTile:null,maxGetUrlLength:null,canvasContext:null,defaultStyles:null,styles:null,selectedStyels:null,hoverStyles:null,labelDiv:null,layerIds:null,tileCanvas:[],map:null,initialize:function(layer,position,bounds,url,size,options){OpenLayers.Tile.prototype.initialize.apply(this,arguments);if(this.maxGetUrlLength!=null){OpenLayers.Util.extend(this,OpenLayers.Tile.Image.IFrame);}
this.url=url;this.frame=document.createElement('div');this.frame.style.position='absolute';this.layer=layer;this.layers=options.layers;this.map=options.map;},destroy:function(){if((this.frame!=null)&&(this.frame.parentNode==this.layer.div)){this.layer.div.removeChild(this.frame);}
this.frame=null;if(this.backBufferTile){this.backBufferTile.destroy();this.backBufferTile=null;}
this.layer.events.unregister("loadend",this,this.resetBackBuffer);OpenLayers.Tile.prototype.destroy.apply(this,arguments);},clone:function(obj){if(obj==null){obj=new gClient.Tile.Canvas(this.layer,this.position,this.bounds,this.url,this.size);}
obj=OpenLayers.Tile.prototype.clone.apply(this,[obj]);obj.imgDiv=null;return obj;},createBackBuffer:function(){},draw:function(){return this.renderTile();},onImageLoad:function(){},stopLoading:function(){},resetBackBuffer:function(){},renderTile:function(){OpenLayers.Util.modifyDOMElement(this.frame,null,this.position,this.size);if(this.layer.async){var id=this.asyncRequestId=(this.asyncRequestId||0)+1;this.layer.getURLasync(this.bounds,function(url){if(id==this.asyncRequestId){this.url=url;}},this);}else{this.url=this.layer.getURL(this.bounds);}
var listId=this.standardizeUrl();this.layerIds=listId;this.positionImage();return true;},standardizeUrl:function(){var urlarr=this.url.split('/tile/');var urlelements=urlarr[0].split('/');var rootUrl='';for(var i=0;i<urlelements.length-1;i++){rootUrl+=urlelements[i]+'/';}
if(typeof(URLRESTHOST)!='undefined'&&URLRESTHOST!=undefined&&URLRESTHOST!=null){rootUrl=URLRESTHOST+rootUrl.replace(URLRESTHOST,'');}
var leafUrl=urlarr[1];var listId='';if(this.map.layers!=null){for(var i=0;i<this.map.layers.length;i++){if(this.map.layers[i].visibility&&this.map.layers[i].CLASS_NAME=='gClient.Layer.Canvas'){listId+=this.map.layers[i].maLopBanDo;if(i<this.map.layers.length-1){listId+=',';}}}}
if(typeof String.prototype.endsWith!=='function'){String.prototype.endsWith=function(suffix){return this.indexOf(suffix,this.length-suffix.length)!==-1;};}
if(listId&&listId.endsWith(','))
listId=listId.substring(listId.length-1,0);this.url=rootUrl+listId+'/tile/'+leafUrl;return listId;},positionImage:function(layer){this.src=this.url;this.ajaxLoader(drawGeomCanvas,this.url,this,this,'');},reRender:function(){this.standardizeUrl();this.src=this.url;this.ajaxLoader(drawGeomCanvas,this.url,this,this,'');},clear:function(){if(this.bounds){var lonlat=this.bounds.getCenterLonLat();var canvastiles=this.layer.map.getTiles(lonlat);for(var i=0;i<canvastiles;i++){canvastiles[i].clear();}}},getTile:function(){return this.frame?this.frame:this.getImage();},setImgSrc:function(url){},checkImgURL:function(){if(this.layer){var loaded=this.layerAlphaHack?this.imgDiv.firstChild.src:this.imgDiv.src;if(!OpenLayers.Util.isEquivalentUrl(loaded,this.url)){this.hide();}}},startTransition:function(){},refresh:function(){},show:function(){},moveTo:function(bounds,position,redraw){if(redraw==null){redraw=true;}
this.bounds=bounds.clone();this.position=position.clone();if(redraw){this.draw();}},hide:function(){},ajaxLoader:function(func,url,dest,tile,layers){if(url.indexOf('//')>6)
return;if(document.getElementById){var x=(window.XDomainRequest)?new XDomainRequest():new XMLHttpRequest();if(window.XDomainRequest){x.xdomain=1}}
if(x){x.onreadystatechange=function(){if(url==dest.src){if(x.xdomain||x.readyState==4){var d=0;if(x.xdomain||x.status==200){if(x.responseText[0]=="<"){return}
if(window.JSON){try{d=window.JSON.parse(x.responseText)}catch(e){console.log(url);}}else{d=eval("("+x.responseText+")")}}
if(d){if(d.length===0)
return;else{var lonlat,canvastiles;if(tile&&tile.bounds){lonlat=tile.bounds.getCenterLonLat();}
var el;var layer;if(layers){layer=layers;canvastiles=layer.map.getTiles(lonlat,layers);if(layer&&canvastiles!=undefined){for(var j=0;j<canvastiles.length;j++){if(canvastiles[j].tile.layer==layer){el=canvastiles[j].tile.imgDiv;break;}}
if(el){func(el,d[layer.maLopBanDo],layer);}}}else{if(tile.layer)
canvastiles=tile.layer.map.getTiles(lonlat);for(var i=0;i<tile.map.layers.length;i++){if(tile.map.layers[i].CLASS_NAME=='gClient.Layer.Canvas'&&tile.map.layers[i].visibility){layer=tile.map.layers[i];if(layer&&canvastiles!=undefined){for(var j=0;j<canvastiles.length;j++){if(canvastiles[j].tile.layer==layer){el=canvastiles[j].tile.imgDiv;break;}}
if(el){func(el,d[layer.maLopBanDo],layer);}}}}}}}}}
else{x.abort();}};if(x.xdomain){x.onerror=function(){console.log('on error')};x.ontimeout=function(){console.log('on timeout')};x.onprogress=function(){console.log('on progress')};x.onload=x.onreadystatechange}
x.open("GET",url);x.send()}},CLASS_NAME:"gClient.Tile.Canvases"});﻿
gClient.Control=gClient.Control||{};gClient.Control.gMapNav=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.Navigation({'displayClass':'gControlNavigation','title':'Điều hướng'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.gMapNav"});﻿
gClient.FinderParameters=OpenLayers.Class({outputSpatialReference:null,inputSpatialReference:null,layer:null,geometry:null,radius:null,operator:null,cat:null,subcat:null,typesearch:null,initialize:function(layer,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.layer=layer;this.cat=options.cat;this.subcat=options.subcat;this.geometry=options.geometry;this.radius=options.radius;this.operator=options.operator;this.typesearch=options.typesearch;},destroy:function(){},CLASS_NAME:"gClient.FinderParameters"});﻿
gClient.Tile=gClient.Tile||{};gClient.Tile.Vector=OpenLayers.Class(OpenLayers.Tile,{features:null,url:null,request:null,whereClause:null,initialize:function(layer,position,bounds,url,size,whereClause){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.url=url;this.features=[];this.whereClause=whereClause;this.request=null;},destroy:function(){this.destroyAllFeatures();this.features=null;this.url=null;},clear:function(){this.destroyAllFeatures();},draw:function(){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position);}
var maxExtent=this.layer.limitExtent;var withinMaxExtent=(maxExtent&&this.bounds.intersectsBounds(maxExtent,false));this.shouldDraw=(withinMaxExtent||this.layer.displayOutsideMaxExtent);this.clear();if(!this.shouldDraw){return false;}
if(this.isLoading){this.events.triggerEvent("reload");}else{this.isLoading=true;this.events.triggerEvent("loadstart");}
this.url=this.layer.getURL(this.bounds);this.loadFeaturesForRegion(this.requestSuccess,this.requestFailure);this.drawn=true;return true;},loadFeaturesForRegion:function(success,failure){var urlRequest="";if(this.request!=null){this.request.abort();this.request=null;}
urlRequest=this.url;this.request=$.jsonp({url:urlRequest,callbackParameter:"callback",obj:this,success:function(data,textStatus){success(this.obj,data,this.obj.request);},error:function(){}});},requestFailure:function(request){},requestSuccess1:function(obj,data){obj.clear();},requestSuccess:function(obj,data,request){var WGS84=new OpenLayers.Projection("EPSG:4326");var EPSG900913=obj.layer.map.getProjectionObject();var format=new OpenLayers.Format.GeoJSON();var geojson=format.read(data);if(geojson!=null){if((geojson.length)>0){for(var i=0;i<geojson.length;i++){var feat=geojson[i];var geometry=feat.geometry;geometry.transform(WGS84,EPSG900913);var feature=new OpenLayers.Feature.Vector(geometry,feat.attributes);var gid=feat.attributes["madoituong"];feature.fid=gid;if(obj.layer.featureIDs[feature.attributes["madoituong"]]==undefined){feature.attributes["tilenumber"]=1;obj.layer.featureIDs[feature.attributes["madoituong"]]=feature;obj.layer.addFeatures(feature);obj.features.push(feature);}
else{obj.layer.featureIDs[feature.attributes["madoituong"]].attributes["tilenumber"]++;obj.features.push(obj.layer.featureIDs[feature.attributes["madoituong"]]);}}}}
if(obj.events){obj.events.triggerEvent("loadend");}
obj.request=null;},destroyAllFeatures:function(){if(this.features){while(this.features.length>0){var feature=this.features.shift();if(this.layer.features.length>0){this.layer.featureIDs[feature.attributes["madoituong"]].attributes["tilenumber"]--;if(this.layer.featureIDs[feature.attributes["madoituong"]].attributes["tilenumber"]==0){delete this.layer.featureIDs[feature.attributes["madoituong"]];this.layer.removeFeatures(feature);feature.destroy();}}
else{feature.destroy();}}}
this.features=[];},CLASS_NAME:"gClient.Tile.Vector"});﻿
gClient.Control.ToolbarSearch=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(layer,options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.Navigation()]);var controls=[new gClient.Control.SearchFeature(layer,OpenLayers.Handler.Point,{'displayClass':'olControlDrawFeaturePoint','callback':options.callback}),new gClient.Control.SearchFeature(layer,OpenLayers.Handler.Path,{'displayClass':'olControlDrawFeaturePath','callback':options.callback}),new gClient.Control.SearchFeature(layer,OpenLayers.Handler.Polygon,{'displayClass':'olControlDrawFeaturePolygon','callback':options.callback})];this.addControls(controls);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);if(this.defaultControl===null){this.defaultControl=this.controls[0];}
return div;},CLASS_NAME:"gClient.Control.ToolbarSearch"});﻿
var gToolbar_Flag_DrawLineWay=1;function fngToolbarChangeTypeDrawLineWay(idlayeredit){OpenLayers.Feature.Vector.style['vertexStyle']={strokeColor:"#ff0000",fillColor:"#ff0000",strokeOpacity:1,strokeWidth:2,pointRadius:3,graphicName:"cross"}
OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:3,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:3,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.75,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual'],"vertex":OpenLayers.Feature.Vector.style['vertexStyle']},{extendDefault:true});OpenLayers.Feature.Vector.style['virtual2']={fillColor:"#ffffff",fillOpacity:3,strokeColor:"#000000",strokeOpacity:0.25,strokeWidth:3,pointRadius:5}
OpenLayers.Feature.Vector.style['default2']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.1,strokeWidth:3,pointRadius:3}
var styleMapNone=new OpenLayers.StyleMap({"select":OpenLayers.Feature.Vector.style['default2'],"default":OpenLayers.Feature.Vector.style['default2'],"virtual":OpenLayers.Feature.Vector.style['virtual2'],"vertex":OpenLayers.Feature.Vector.style['vertexStyle']},{extendDefault:false});var layerDuongDi=map.getLayersByName('LayergClientRoute')[0];var layerDraw=map.getLayer(idlayeredit);if(gToolbar_Flag_DrawLineWay==1){gToolbar_Flag_DrawLineWay=0;layerDuongDi.styleMap=styleMap;layerDuongDi.redraw();layerDraw.styleMap=styleMapNone;layerDraw.redraw();}else{gToolbar_Flag_DrawLineWay=1;layerDuongDi.styleMap=styleMapNone;layerDuongDi.redraw();layerDraw.styleMap=styleMap;layerDraw.redraw();}};(function($){var methods={init:function(options){},navigation:function(map){var panel=new gClient.Control.NavToolbar({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;},editing:function(map){var panel=new OpenLayers.Control.EditingToolbar(map.overlayLayer,{'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;},pointEditToolbar:function(options){var map=options.map;var layer=options.layer;var layerEdit=null;if(options.layerEdit!=undefined){layerEdit=options.layerEdit;}else{layerEdit=new OpenLayers.Layer.Vector("layer sửa");}
var beforAdd=function(){};if(options.beforAdd!=undefined){beforAdd=options.beforAdd;}
var beforEdit=function(){};if(options.beforEdit!=undefined){beforEdit=options.beforEdit;}
var beforDelete=function(){};if(options.beforDelete!=undefined){beforDelete=options.beforDelete;}
OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:1,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:1,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.25,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual']},{extendDefault:true});layerEdit.styleMap=styleMap;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=fnPointCallbackDefault}
var fnCallbackDelete=null;if(options.callbackDelete!=undefined){fnCallbackDelete=options.callbackDelete;}else{callbackDelete=fnPointCallbackDefault}
var drawControlPoint=new gClient.Control.DrawFeatureOpt(layerEdit,OpenLayers.Handler.Point,{title:"Tạo Point",displayClass:"olControlDrawFeaturePoint"});drawControlPoint.events.register("featureadded",this,function(e){modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControlPoint.deactivate();});var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layerEdit,{clickout:true,toggle:false,deleteCodes:[46,68,27],hiden:true,onModificationStart:fnCallback,displayClass:"olControlModifyHiden",vertexRenderIntent:"virtual"});var selectFeatureControl=new OpenLayers.Control.SelectFeature(layer,{onSelect:onFeatureSelectLayerGoc,displayClass:"olControlModify",title:"Chỉnh sửa point"});function onFeatureSelectLayerGoc(feature){layerEdit.removeAllFeatures();var feature_clone=feature.clone();layerEdit.addFeatures(feature_clone);selectFeatureControl.unselect(feature);modifyFeatureControl.selectControl.select(feature_clone);modifyFeatureControl.activate();}
function fnPointCallbackDefault(feature){}
var deleteFeatureControl=new OpenLayers.Control.SelectFeature(layer,{clickout:false,toggle:false,title:"Xóa point",displayClass:"olControlDelete"});deleteFeatureControl.events.register("featurehighlighted",this,function(e){fnCallbackDelete(e.feature,deleteFeatureControl,layer);});deleteFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([modifyFeatureControl,deleteFeatureControl,selectFeatureControl,drawControlPoint]);map.addControls([panel,modifyFeatureControl,nav]);return panel;},lintEditToolbarSinge:function(options){var map=options.map;var layer=options.layer;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=function(){};}
var drawControl=new gClient.Control.DrawFeatureOpt(layer,OpenLayers.Handler.Path,{title:"Tạo đường",displayClass:"olControlDrawFeaturePath"});drawControl.events.register("featureadded",this,function(e){modifyFeatureControl.selectFeature(e.feature);modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControl.deactivate();});layer.events.register("beforefeaturesadded",this,function(e){layer.removeAllFeatures();});var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layer,{clickout:false,toggle:false,deleteCodes:[46,68,27],title:"Sửa đường",displayClass:"olControlModify"});modifyFeatureControl.selectFeature=fnCallback;modifyFeatureControl.dragComplete=fnCallback;var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([drawControl,modifyFeatureControl]);map.addControls([panel,modifyFeatureControl,nav]);return panel;},lineEditToolbar:function(options){var map=options.map;var layer=options.layer;var layerEdit=null;if(options.layerEdit!=undefined){layerEdit=options.layerEdit;}else{layerEdit=new OpenLayers.Layer.Vector("layer sửa");}
OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:3,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:3,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.25,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual']},{extendDefault:true});layerEdit.styleMap=styleMap;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=fnPolygonCallbackDefault}
var fnCallbackDelete=null;if(options.callbackDelete!=undefined){fnCallbackDelete=options.callbackDelete;}else{fnCallback=fnPolygonCallbackDefault}
var drawControlLine=new gClient.Control.DrawFeatureOpt(layerEdit,OpenLayers.Handler.Path,{title:"Tạo line",displayClass:"olControlDrawFeaturePath"});drawControlLine.events.register("featureadded",this,function(e){modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControlLine.deactivate();});drawControlLine.events.register("activate",this,function(e){layerEdit.removeAllFeatures();selectFeatureControl.unselectAll();});var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layerEdit,{clickout:true,toggle:false,deleteCodes:[46,68,27],hiden:true,onModificationStart:fnCallback,displayClass:"olControlModifyHiden"});var selectFeatureControl=new OpenLayers.Control.SelectFeature(layer,{onSelect:onFeatureSelectLayerGoc,displayClass:"olControlModify",title:"Chỉnh sửa line"});selectFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});function onFeatureSelectLayerGoc(feature){var feature_clone=feature.clone();layerEdit.addFeatures(feature_clone);selectFeatureControl.unselect(feature);modifyFeatureControl.selectControl.select(feature_clone);modifyFeatureControl.activate();}
function fnPolygonCallbackDefault(feature){}
var deleteFeatureControl=new OpenLayers.Control.SelectFeature(layer,{clickout:false,toggle:false,title:"Xóa line",displayClass:"olControlDelete"});deleteFeatureControl.events.register("featurehighlighted",this,function(e){fnCallbackDelete(e.feature,deleteFeatureControl,layer);});deleteFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([modifyFeatureControl,deleteFeatureControl,selectFeatureControl,drawControlLine]);map.addControls([panel,modifyFeatureControl,nav]);return panel;},polygonEditToolbar:function(options){var map=options.map;var layer=options.layer;var layerEdit=null;if(options.layerEdit!=undefined){layerEdit=options.layerEdit;}else{layerEdit=new OpenLayers.Layer.Vector("layer sửa");}
OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:1,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:1,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.25,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual']},{extendDefault:true});layerEdit.styleMap=styleMap;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=fnPolygonCallbackDefault}
var fnCallbackDelete=null;if(options.callbackDelete!=undefined){fnCallbackDelete=options.callbackDelete;}else{fnCallback=fnPolygonCallbackDefault}
var drawControlPolygon=new gClient.Control.DrawFeatureOpt(layerEdit,OpenLayers.Handler.Polygon,{title:"Tạo polygon",displayClass:"olControlDrawFeaturePolygon"});drawControlPolygon.events.register("featureadded",this,function(e){modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControlPolygon.deactivate();});drawControlPolygon.events.register("activate",this,function(e){layerEdit.removeAllFeatures();selectFeatureControl.unselectAll();});var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layerEdit,{clickout:true,toggle:false,deleteCodes:[46,68,27],hiden:true,onModificationStart:fnCallback,displayClass:"olControlModifyHiden",vertexRenderIntent:"virtual"});var selectFeatureControl=new OpenLayers.Control.SelectFeature(layer,{onSelect:onFeatureSelectLayerGoc,displayClass:"olControlModify",title:"Chỉnh sửa polygon"});selectFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});function onFeatureSelectLayerGoc(feature){layerEdit.removeAllFeatures();var feature_clone=feature.clone();layerEdit.addFeatures(feature_clone);selectFeatureControl.unselect(feature);alert
modifyFeatureControl.selectControl.select(feature_clone);modifyFeatureControl.activate();}
function fnPolygonCallbackDefault(feature){}
var deleteFeatureControl=new OpenLayers.Control.SelectFeature(layer,{clickout:false,toggle:false,title:"Xóa polygon",displayClass:"olControlDelete"});deleteFeatureControl.events.register("featurehighlighted",this,function(e){fnCallbackDelete(e.feature,deleteFeatureControl,layer);});deleteFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([modifyFeatureControl,deleteFeatureControl,selectFeatureControl,drawControlPolygon]);map.addControls([panel,modifyFeatureControl,nav]);return panel;},drawLineWayToolbar:function(options){var map=options.map;var layer=options.layer;var layerEdit=null;if(options.layerEdit!=undefined){layerEdit=options.layerEdit;}else{layerEdit=new OpenLayers.Layer.Vector("layer sửa");}
var idlayerEdit=layerEdit.id;OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:3,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:3,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.25,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual']},{extendDefault:true});layerEdit.styleMap=styleMap;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=fnPolygonCallbackDefault}
var fnCallbackDelete=null;if(options.callbackDelete!=undefined){fnCallbackDelete=options.callbackDelete;}else{fnCallback=fnPolygonCallbackDefault}
var drawControlLine=new gClient.Control.DrawFeatureOpt(layerEdit,OpenLayers.Handler.Path,{title:"Tạo line",displayClass:"olControlDrawFeaturePath"});drawControlLine.events.register("featureadded",this,function(e){modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControlLine.deactivate();});drawControlLine.events.register("activate",this,function(e){layerEdit.removeAllFeatures();selectFeatureControl.unselectAll();});function TestFnCallback(feature){if(gToolbar_Flag_DrawLineWay==1){check='';}else{check='checked';}
var contentPopup='<div style="width:150px"><input type="checkbox" '+check+' name="input-type-draw" value="line" onchange="fngToolbarChangeTypeDrawLineWay('+"'"+layerEdit.id+"'"+');"> Chọn vẽ dọc theo tuyến đường</div>';var popup=new gClient.Popup.gFramedCloud2("idpopupdrawway",feature.geometry.getBounds().getCenterLonLat(),null,contentPopup,null,true,null);popup.autoSize=true;popup.maxSize=new OpenLayers.Size(400,800);popup.fixedRelativePosition=true;feature.popup=popup;var checkPopup=map.popups.length;if(checkPopup>0){for(var i=0;i<checkPopup;i++){map.removePopup(map.popups[i]);}}
map.addPopup(popup);fnCallback(feature);};var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layerEdit,{clickout:true,toggle:false,deleteCodes:[46,68,27],hiden:true,onModificationStart:TestFnCallback,onModification:fnCallback,dragVertex:function(vertex,pixel){this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){if(this.feature!=vertex){this.feature=vertex;}
this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}else{if(vertex._index){vertex.geometry.parent.addComponent(vertex.geometry,vertex._index);delete vertex._index;OpenLayers.Util.removeItem(this.virtualVertices,vertex);this.vertices.push(vertex);}else if(vertex==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null;}}else if(vertex!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}
if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];}
this.layer.drawFeature(this.feature,this.standalone?undefined:this.selectControl.renderIntent);}
this.layer.drawFeature(vertex);},displayClass:"olControlModifyHiden"});var selectFeatureControl=new OpenLayers.Control.SelectFeature(layer,{onSelect:onFeatureSelectLayerGoc,displayClass:"olControlModify",title:"Chỉnh sửa line"});selectFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});function onFeatureSelectLayerGoc(feature){var feature_clone=feature.clone();layerEdit.addFeatures(feature_clone);selectFeatureControl.unselect(feature);modifyFeatureControl.selectControl.select(feature_clone);modifyFeatureControl.activate();}
function fnPolygonCallbackDefault(feature){}
var deleteFeatureControl=new OpenLayers.Control.SelectFeature(layer,{clickout:false,toggle:false,title:"Xóa line",displayClass:"olControlDelete"});deleteFeatureControl.events.register("featurehighlighted",this,function(e){fnCallbackDelete(e.feature,deleteFeatureControl,layer);});deleteFeatureControl.events.register("activate",this,function(e){layerEdit.removeAllFeatures();});var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([modifyFeatureControl,deleteFeatureControl,selectFeatureControl,drawControlLine]);map.addControls([panel,modifyFeatureControl,nav]);panel.getValueFeatures=function(){if(gToolbar_Flag_DrawLineWay==1){return map.getLayer(idlayerEdit).features;}else{return map.getLayersByName("LayergClientRoute")[0].features;}};return panel;},drawLineWayToolbar2:function(options){var map=options.map;var layerEdit=null;if(options.layerEdit!=undefined){layerEdit=options.layerEdit;}else{layerEdit=new OpenLayers.Layer.Vector("layer sửa");}
var idlayerEdit=layerEdit.id;OpenLayers.Feature.Vector.style['virtual']={fillColor:"#ffffff",fillOpacity:3,strokeColor:"#000000",strokeOpacity:0.75,strokeWidth:3,pointRadius:5}
OpenLayers.Feature.Vector.style['default']={fillColor:"#0000ff",fillOpacity:0.4,strokeColor:"#0000ff",strokeOpacity:0.25,strokeWidth:3,pointRadius:3}
var styleMap=new OpenLayers.StyleMap({"default":OpenLayers.Feature.Vector.style['default'],"virtual":OpenLayers.Feature.Vector.style['virtual']},{extendDefault:true});layerEdit.styleMap=styleMap;var fnCallback=null;if(options.callback!=undefined){fnCallback=options.callback;}else{fnCallback=fnPolygonCallbackDefault}
var fnCallbackDelete=null;if(options.callbackDelete!=undefined){fnCallbackDelete=options.callbackDelete;}else{fnCallback=fnPolygonCallbackDefault}
var drawControlLine=new gClient.Control.DrawFeatureOpt(layerEdit,OpenLayers.Handler.Path,{title:"Tạo line",displayClass:"olControlDrawFeaturePath"});drawControlLine.events.register("featureadded",this,function(e){modifyFeatureControl.selectControl.select(e.feature);modifyFeatureControl.activate();drawControlLine.deactivate();});drawControlLine.events.register("activate",this,function(e){layerEdit.removeAllFeatures();selectFeatureControl.unselectAll();});function TestFnCallback(feature){if(gToolbar_Flag_DrawLineWay==1){check='';}else{check='checked';}
var contentPopup='<div style="width:150px"><input type="checkbox" '+check+' name="input-type-draw" value="line" onchange="fngToolbarChangeTypeDrawLineWay('+"'"+layerEdit.id+"'"+');"> Lệch sang trái';contentPopup+='<input type="checkbox" '+check+' name="input-type-draw" value="line" onchange="fngToolbarChangeTypeDrawLineWay('+"'"+layerEdit.id+"'"+');">Lệch sang phải';contentPopup+='Độ lệch : <input type="text" style="width:20px;">';contentPopup+='</div>';var popup=new gClient.Popup.gFramedCloud2("idpopupdrawway",feature.geometry.getBounds().getCenterLonLat(),null,contentPopup,null,true,null);popup.autoSize=true;popup.maxSize=new OpenLayers.Size(400,800);popup.fixedRelativePosition=true;feature.popup=popup;var checkPopup=map.popups.length;if(checkPopup>0){for(var i=0;i<checkPopup;i++){map.removePopup(map.popups[i]);}}
map.addPopup(popup);fnCallback(feature);};var modifyFeatureControl=new OpenLayers.Control.ModifyFeature(layerEdit,{clickout:true,toggle:false,deleteCodes:[46,68,27],hiden:true,onModificationStart:TestFnCallback,onModification:fnCallback,dragVertex:function(vertex,pixel){this.modified=true;if(this.feature.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){if(this.feature!=vertex){this.feature=vertex;}
this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}else{if(vertex._index){vertex.geometry.parent.addComponent(vertex.geometry,vertex._index);delete vertex._index;OpenLayers.Util.removeItem(this.virtualVertices,vertex);this.vertices.push(vertex);}else if(vertex==this.dragHandle){this.layer.removeFeatures(this.vertices,{silent:true});this.vertices=[];if(this.radiusHandle){this.layer.destroyFeatures([this.radiusHandle],{silent:true});this.radiusHandle=null;}}else if(vertex!==this.radiusHandle){this.layer.events.triggerEvent("vertexmodified",{vertex:vertex.geometry,feature:this.feature,pixel:pixel});}
if(this.virtualVertices.length>0){this.layer.destroyFeatures(this.virtualVertices,{silent:true});this.virtualVertices=[];}
this.layer.drawFeature(this.feature,this.standalone?undefined:this.selectControl.renderIntent);}
this.layer.drawFeature(vertex);},displayClass:"olControlModify"});var selectFeatureControl=new OpenLayers.Control.SelectFeature(layerEdit,{onSelect:onFeatureSelectLayerGoc,displayClass:"olControlModify",title:"Chỉnh sửa line"});selectFeatureControl.events.register("activate",this,function(e){});function onFeatureSelectLayerGoc(feature){var feature_clone=feature.clone();layerEdit.addFeatures(feature_clone);selectFeatureControl.unselect(feature);modifyFeatureControl.selectControl.select(feature_clone);modifyFeatureControl.activate();}
function fnPolygonCallbackDefault(feature){}
var panel=new OpenLayers.Control.Panel({div:OpenLayers.Util.getElement($(this).attr("id")),displayClass:'olControlEditingToolbar'});var nav=new OpenLayers.Control.Navigation({'displayClass':'olControlNavigation','title':'Điều hướng'});panel.addControls([modifyFeatureControl,drawControlLine]);map.addControls([panel,modifyFeatureControl]);panel.getValueFeatures=function(){if(gToolbar_Flag_DrawLineWay==1){return map.getLayer(idlayerEdit).features;}else{return map.getLayersByName("LayergClientRoute")[0].features;}};return panel;},searchbbox:function(options){var panel=new gClient.Control.NavToolbar({'div':OpenLayers.Util.getElement($(this).attr("id"))});var controlBB=new gClient.Control.BBOXPicker(options.polygonlayer,options.callback,{'displayClass':options.displayClass,'title':'Vẽ một vùng trên bản đồ'});panel.addControls([controlBB]);options.map.addControl(panel);return controlBB;},search:function(options){var layerfinder;if(options.layerfinder!=null){layerfinder=options.layerfinder;}else{layerfinder=options.map.overlayLayer;}
var panel=new gClient.Control.ToolbarSearch(layerfinder,{'div':OpenLayers.Util.getElement($(this).attr("id")),'callback':options.callback});options.map.addControl(panel);return panel;},point:function(options){var layerfinder;if(options.layerfinder!=null){layerfinder=options.layerfinder;}else{layerfinder=options.map.overlayLayer;}
var panel=new gClient.Control.LonLatPicker(layerfinder,{'div':OpenLayers.Util.getElement($(this).attr("id")),'callback':options.callback});options.map.addControl(panel);return panel;},gNav:function(map){var panel=new gClient.Control.gMapNav({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;},gZoomBox:function(map){var panel=new gClient.Control.gMapNav({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);var control=new OpenLayers.Control.ZoomIn({'displayClass':'gControlZoomIn','title':'Phóng to'});var control2=new OpenLayers.Control.ZoomBox({'displayClass':'gControlZoomBox','title':'Phóng to theo khung'})
panel.addControls([control,control2]);return panel;},gZoomIn:function(map){var panel=new gClient.Control.gMapZoomIn({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;},gZoomOut:function(map){var panel=new gClient.Control.gMapZoomOut({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;},gZoomToMaxExtent:function(map){var panel=new gClient.Control.gMapZoomToMaxExtent({'div':OpenLayers.Util.getElement($(this).attr("id"))});map.addControl(panel);return panel;}};$.fn.gToolbar=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin gNavToolbar');}};})(jQuery);﻿gClient.Popup=gClient.Popup||{};gClient.Popup.HeightMarker=25;gClient.Popup.gFramedCloud2=OpenLayers.Class(OpenLayers.Popup.Framed,{contentDisplayClass:"olgFramedCloudPopupContent",autoSize:true,panMapIfOutOfView:true,imageSize:new OpenLayers.Size(574,595),isAlphaImage:false,fixedRelativePosition:false,positionBlocks:{"tl":{'offset':new OpenLayers.Pixel(44,-gClient.Popup.HeightMarker),'padding':new OpenLayers.Bounds(20,30,10,30),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,22,16),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(40,'auto'),anchor:new OpenLayers.Bounds(null,31,0,16),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',19),anchor:new OpenLayers.Bounds(0,15,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,18),anchor:new OpenLayers.Bounds(null,16,0,null),position:new OpenLayers.Pixel(-550,-544)},{size:new OpenLayers.Size(30,20),anchor:new OpenLayers.Bounds(null,0,29,null),position:new OpenLayers.Pixel(0,-576)}]},"tr":{'offset':new OpenLayers.Pixel(-44,-gClient.Popup.HeightMarker),'padding':new OpenLayers.Bounds(20,30,10,30),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,22,16),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(40,'auto'),anchor:new OpenLayers.Bounds(null,31,0,16),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',19),anchor:new OpenLayers.Bounds(0,13,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,18),anchor:new OpenLayers.Bounds(null,13,0,null),position:new OpenLayers.Pixel(-550,-545)},{size:new OpenLayers.Size(30,20),anchor:new OpenLayers.Bounds(30,0,null,null),position:new OpenLayers.Pixel(0,-573)}]},"bl":{'offset':new OpenLayers.Pixel(45,0),'padding':new OpenLayers.Bounds(20,30,0,20),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,21,6),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(33,'auto'),anchor:new OpenLayers.Bounds(null,21,0,6),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',21),anchor:new OpenLayers.Bounds(0,9,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,21),anchor:new OpenLayers.Bounds(null,0,0,null),position:new OpenLayers.Pixel(-543,-553)},{size:new OpenLayers.Size(30,33),anchor:new OpenLayers.Bounds(null,null,27,0),position:new OpenLayers.Pixel(-30,-577)}]},"br":{'offset':new OpenLayers.Pixel(-45,0),'padding':new OpenLayers.Bounds(20,30,0,18),'blocks':[{size:new OpenLayers.Size('auto','auto'),anchor:new OpenLayers.Bounds(0,30,33,6),position:new OpenLayers.Pixel(0,0)},{size:new OpenLayers.Size(33,'auto'),anchor:new OpenLayers.Bounds(null,21,0,6),position:new OpenLayers.Pixel(-532,0)},{size:new OpenLayers.Size('auto',27),anchor:new OpenLayers.Bounds(0,4,22,null),position:new OpenLayers.Pixel(0,-544)},{size:new OpenLayers.Size(22,21),anchor:new OpenLayers.Bounds(null,0,0,null),position:new OpenLayers.Pixel(-543,-554)},{size:new OpenLayers.Size(30,33),anchor:new OpenLayers.Bounds(32,null,null,0),position:new OpenLayers.Pixel(-30,-578)}]}},minSize:new OpenLayers.Size(105,10),maxSize:new OpenLayers.Size(1200,660),initialize:function(id,lonlat,contentSize,contentHTML,anchor,closeBox,closeBoxCallback){this.imageSrc=OpenLayers.Util.getImagesLocation()+'popup-spritep-wd.png';OpenLayers.Popup.Framed.prototype.initialize.apply(this,arguments);this.contentDiv.className=this.contentDisplayClass;},destroy:function(){OpenLayers.Popup.Framed.prototype.destroy.apply(this,arguments);},CLASS_NAME:"gClient.Popup.gFramedCloud2"});﻿
gClient.Control.BaseLayerSwitcher=OpenLayers.Class(OpenLayers.Control,{roundedCorner:true,roundedCornerColor:"#629bae",layerStates:null,layersDiv:null,baseLayersDiv:null,baseLayers:null,dataLbl:null,dataLayersDiv:null,dataLayers:null,minimizeDiv:null,maximizeDiv:null,ascending:true,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.layerStates=[];},destroy:function(){OpenLayers.Event.stopObservingElement(this.div);OpenLayers.Event.stopObservingElement(this.minimizeDiv);OpenLayers.Event.stopObservingElement(this.maximizeDiv);this.clearLayersArray("base");this.clearLayersArray("data");this.map.events.un({"addlayer":this.redraw,"changelayer":this.redraw,"removelayer":this.redraw,"changebaselayer":this.redraw,scope:this});OpenLayers.Control.prototype.destroy.apply(this,arguments);},setMap:function(map){OpenLayers.Control.prototype.setMap.apply(this,arguments);this.map.events.on({"addlayer":this.redraw,"changelayer":this.redraw,"removelayer":this.redraw,"changebaselayer":this.redraw,scope:this});},draw:function(){OpenLayers.Control.prototype.draw.apply(this);this.loadContents();if(!this.outsideViewport){this.minimizeControl();}
this.redraw();return this.div;},clearLayersArray:function(layersType){var layers=this[layersType+"Layers"];if(layers){for(var i=0,len=layers.length;i<len;i++){var layer=layers[i];OpenLayers.Event.stopObservingElement(layer.inputElem);OpenLayers.Event.stopObservingElement(layer.labelSpan);}}
this[layersType+"LayersDiv"].innerHTML="";this[layersType+"Layers"]=[];},checkRedraw:function(){var redraw=false;if(!this.layerStates.length||(this.map.layers.length!=this.layerStates.length)){redraw=true;}else{for(var i=0,len=this.layerStates.length;i<len;i++){var layerState=this.layerStates[i];var layer=this.map.layers[i];if((layerState.name!=layer.name)||(layerState.inRange!=layer.inRange)||(layerState.id!=layer.id)||(layerState.visibility!=layer.visibility)){redraw=true;break;}}}
return redraw;},redraw:function(){if(!this.checkRedraw()){return this.div;}
this.clearLayersArray("base");this.clearLayersArray("data");var containsOverlays=false;var containsBaseLayers=false;var len=this.map.layers.length;this.layerStates=new Array(len);for(var i=0;i<len;i++){var layer=this.map.layers[i];this.layerStates[i]={'name':layer.name,'visibility':layer.visibility,'inRange':layer.inRange,'id':layer.id};}
var layers=this.map.layers.slice();if(!this.ascending){layers.reverse();}
var inputUlElem=document.createElement("ul");OpenLayers.Element.addClass(inputUlElem,"listbm-lvbasemap");this.baseLayersDiv.appendChild(inputUlElem);for(var i=0,len=layers.length;i<len;i++){var layer=layers[i];var baseLayer=layer.isBaseLayer;if(layer.displayInLayerSwitcher){if(baseLayer){containsBaseLayers=true;}else{containsOverlays=true;}
var checked=(baseLayer)?(layer==this.map.baseLayer):layer.getVisibility();var inputElem=document.createElement("li");var _a=document.createElement("a");_a.setAttribute("href","#");var _h4=document.createElement("h4");var _h1=document.createElement("h1");OpenLayers.Element.addClass(_h4,"default-color left");if(checked==true){OpenLayers.Element.addClass(_h1,"bt-24 star-ico right");}else{OpenLayers.Element.addClass(_h1,"bt-24  right");}
_a.appendChild(_h4);_a.appendChild(_h1);inputElem.appendChild(_a);inputElem.id=this.id+"_input_"+layer.name;if(!baseLayer&&!layer.inRange){inputElem.disabled=true;}
var context={'inputElem':inputElem,'layer':layer,'layerSwitcher':this};OpenLayers.Event.observe(inputElem,"mouseup",OpenLayers.Function.bindAsEventListener(this.onInputClick,context));var labelSpan=document.createElement("span");if(!baseLayer&&!layer.inRange){labelSpan.style.color="gray";}
if(checked==true){OpenLayers.Element.addClass(labelSpan,"selected");}
labelSpan.innerHTML=layer.name;OpenLayers.Event.observe(labelSpan,"click",OpenLayers.Function.bindAsEventListener(this.onInputClick,context));var br=document.createElement("br");var groupArray=(baseLayer)?this.baseLayers:this.dataLayers;groupArray.push({'layer':layer,'inputElem':inputElem,'labelSpan':labelSpan});var groupDiv=(baseLayer)?this.baseLayersDiv:this.dataLayersDiv;if(baseLayer){inputUlElem.appendChild(inputElem);}
_h4.appendChild(labelSpan);}}
this.baseLbl.style.display=(containsBaseLayers)?"":"none";return this.div;},onInputClick:function(e){this.layerSwitcher.minimizeControl();if(!this.inputElem.disabled){if(this.inputElem.type=="radio"){this.inputElem.checked=true;this.layer.map.setBaseLayer(this.layer);}else{this.inputElem.checked=!this.inputElem.checked;this.layerSwitcher.updateMap();}}
OpenLayers.Event.stop(e);},onLayerClick:function(e){this.updateMap();},updateMap:function(){for(var i=0,len=this.baseLayers.length;i<len;i++){var layerEntry=this.baseLayers[i];if(layerEntry.inputElem.checked){this.map.setBaseLayer(layerEntry.layer,false);}}},maximizeControl:function(e){this.div.style.width="";this.div.style.height="";this.showControls(false);if(e!=null){OpenLayers.Event.stop(e);}},minimizeControl:function(e){this.div.style.width="0px";this.div.style.height="0px";this.showControls(true);if(e!=null){OpenLayers.Event.stop(e);}},showControls:function(minimize){this.maximizeDiv.style.display=minimize?"":"none";this.minimizeDiv.style.display=minimize?"none":"";this.layersDiv.style.display=minimize?"none":"";},loadContents:function(){OpenLayers.Event.observe(this.div,"mouseup",OpenLayers.Function.bindAsEventListener(this.mouseUp,this));OpenLayers.Event.observe(this.div,"click",this.ignoreEvent);OpenLayers.Event.observe(this.div,"mousedown",OpenLayers.Function.bindAsEventListener(this.mouseDown,this));OpenLayers.Event.observe(this.div,"dblclick",this.ignoreEvent);this.layersDiv=document.createElement("div");this.layersDiv.id=this.id+"_layersDiv";OpenLayers.Element.addClass(this.layersDiv,"layersDiv");this.baseLbl=document.createElement("div");OpenLayers.Element.addClass(this.baseLbl,"baseLbl");this.baseLayersDiv=document.createElement("div");OpenLayers.Element.addClass(this.baseLayersDiv,"baseLayersDiv");this.dataLbl=document.createElement("div");this.dataLbl.innerHTML=OpenLayers.i18n("Lớp chuyên đề");OpenLayers.Element.addClass(this.dataLbl,"dataLbl");this.dataLbl.style.display="none";this.dataLayersDiv=document.createElement("div");OpenLayers.Element.addClass(this.dataLayersDiv,"dataLayersDiv");this.dataLayersDiv.style.display="none";if(this.ascending){this.layersDiv.appendChild(this.baseLbl);this.layersDiv.appendChild(this.baseLayersDiv);this.layersDiv.appendChild(this.dataLbl);this.layersDiv.appendChild(this.dataLayersDiv);}else{this.layersDiv.appendChild(this.dataLbl);this.layersDiv.appendChild(this.dataLayersDiv);this.layersDiv.appendChild(this.baseLbl);this.layersDiv.appendChild(this.baseLayersDiv);}
this.div.appendChild(this.layersDiv);OpenLayers.Rico.Corner.changeOpacity(this.layersDiv,1);var imgLocation=OpenLayers.Util.getImagesLocation();var sz=new OpenLayers.Size(24,24);var img=imgLocation+'basemap-icon.png';this.maximizeDiv=document.createElement("div");this.maximizeDiv.innerHTML='<a href="#"><div class="bt-basemap black-background left" style="position: absolute; width: 100px; top:0; height: 24px; right: 0px;">'+'<h1 class="bt-24 basemap-ico left"></h1><h4 class="headerbasemap">Bản đồ nền</h4>'+'</div></a>';OpenLayers.Element.addClass(this.maximizeDiv,"maximizeDiv");this.maximizeDiv.style.display="block";OpenLayers.Event.observe(this.maximizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.maximizeControl,this));this.div.appendChild(this.maximizeDiv);this.minimizeDiv=document.createElement("div");this.minimizeDiv.innerHTML='<a href="#"><div class="bt-basemap black-background left" style="position: absolute; width: 100px; top:0; height: 24px; right: 0px;">'+'<h1 class="bt-24 basemap-ico left"></h1><h4 class="headerbasemap">Bản đồ nền</h4>'+'</div></a>';OpenLayers.Element.addClass(this.minimizeDiv,"minimizeDiv");this.minimizeDiv.style.display="none";this.minimizeDiv.style.right="0";OpenLayers.Event.observe(this.minimizeDiv,"click",OpenLayers.Function.bindAsEventListener(this.minimizeControl,this));this.div.appendChild(this.minimizeDiv);},ignoreEvent:function(evt){OpenLayers.Event.stop(evt);},mouseDown:function(evt){this.isMouseDown=true;this.ignoreEvent(evt);},outDiv:function(evt){alert('run test');},mouseUp:function(evt){if(this.isMouseDown){this.isMouseDown=false;this.ignoreEvent(evt);}},CLASS_NAME:"gClient.Control.BaseLayerSwitcher"});﻿
gClient.Layer.Blank=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"gBlank",url:[],map:null,maLopBanDo:'',maLopDuLieu:'',tenLopBanDo:'',moTa:'',maBanDo:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,thuTuHienThi:null,duongDanAnh:'',laLopNen:false,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',cauHinhNhan:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',dieuKienLoc:'',sphericalMercator:true,wrapDateLine:true,tileOptions:null,optionsGServer:null,renderers:['Canvas'],renderer:null,backgroundColor:'white',tiles:[],EVENT_TYPES:["beforefeatureadded","beforefeaturesadded","featureadded","featuresadded","beforefeatureremoved","beforefeaturesremoved","featureremoved","featuresremoved","beforefeatureselected","featureselected","featureunselected","beforefeaturemodified","featuremodified","afterfeaturemodified","vertexmodified","vertexremoved","sketchstarted","sketchmodified","sketchcomplete","refresh"],rendererOptions:null,initialize:function(name,url,options){this.url='blank';this.optionsGServer=options;var minLevel;var maxLevel;if(options==undefined){options={};minLevel=0;maxLevel=22;}else{minLevel=((options.mucXemNhoNhat==undefined||options.mucXemNhoNhat==null)?0:options.mucXemNhoNhat);maxLevel=((options.mucXemLonNhat==undefined||options.mucXemLonNhat==null)?22:options.mucXemLonNhat);}
this.map=options.map;this.zoomOffset=minLevel;var arrayResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var arrayServerResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var resolutions=[];var serverResolutions=[];var j=0;for(var i=minLevel;i<maxLevel+1;i++){resolutions[j]=arrayResolutions[i];j++;}
serverResolutions=arrayServerResolutions;options.resolutions=resolutions;options.serverResolutions=serverResolutions;OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);this.transitionEffect='resize';this.isBaseLayer=true;this.tileSize=new OpenLayers.Size(256,256);if(!this.renderer||!this.renderer.supported()){this.assignRenderer();}
if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError();}
if(this.renderer)
this.renderer.map=this.map;if(options.backgroundColor){this.backgroundColor=options.backgroundColor;}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{'renderers':this.renderers.join("\n")}));}},assignRenderer:function(){for(var i=0,len=this.renderers.length;i<len;i++){var rendererClass=this.renderers[i];var renderer=(typeof rendererClass=="function")?rendererClass:OpenLayers.Renderer[rendererClass];if(renderer&&renderer.prototype.supported()){this.renderer=new renderer(this.div,this.rendererOptions);break;}}},redraw:function(){if(this.map){var baseLayers=this.map.getBaseLayers();var minZIndex=1000;for(var i=0;i<baseLayers.length;i++){if(minZIndex>baseLayers[i].getZIndex()&&baseLayers[i]!=this)
minZIndex=baseLayers[i].getZIndex();}
if(minZIndex==1000)
minZIndex=100;this.setZIndex(minZIndex);}},setBackgroundColor:function(color){for(var i=0;i<this.tiles.length;i++){this.tiles[i].frame.style.backgroundColor=color;}},destroy:function(){this.clearGrid();this.featureIDs=null;},addTile:function(bounds,position){var tile=new gClient.Tile.Blank(this,position,bounds,null,this.tileSize,this.tileOptions);this.tiles.push(tile);return tile;},clone:function(obj){if(obj==null){obj=new gClient.Layer.Blank(this.name,this.url,this.getOptions());}
obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj;},CLASS_NAME:"gClient.Layer.Blank"});﻿
gClient.Control=gClient.Control||{};gClient.Control.gMapZoomToMaxExtent=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.ZoomToMaxExtent({'displayClass':'gControlZoomToMaxExtent','title':'Phóng tới mức tối đa'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.gMapZoomToMaxExtent"});﻿gClient.Control.SelectFeature=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["beforefeaturehighlighted","featurehighlighted","featureunhighlighted","featureclick","boxselect"],map:null,multipleKey:null,toggleKey:null,multiple:false,clickout:true,toggle:false,hover:false,itemSelects:null,highlightOnly:false,box:false,boxLayer:null,onBeforeSelect:function(){},onSelect:function(){},onUnselect:function(){},scope:null,geometryTypes:null,layer:null,layers:null,callbacks:null,selectStyle:null,renderIntent:"select",handler:null,handlers:null,keyCtrl:false,listSelectedID:null,defaultHandlerOptions:{'single':true,'double':false,'pixelTolerance':0,'stopSingle':false,'stopDouble':false},hoverCallback:null,hoverCurrentId:null,hoverCurrentRID:null,hoverCurrentLayer:null,lostHovercallback:null,hightLightOnHover:true,initialize:function(layers,options,onSelectCallback){if(this.scope===null||this.scope===undefined){this.scope=this;}
OpenLayers.Control.prototype.initialize.apply(this,[options]);this.map=options.map;this.initLayer(layers);var callbacks={click:this.clickFeature,clickout:this.clickoutFeature};if(this.hover){callbacks.over=this.overFeature;callbacks.out=this.outFeature;}
this.callbacks=OpenLayers.Util.extend(callbacks,this.callbacks);this.handlerOptions=OpenLayers.Util.extend({},this.defaultHandlerOptions);this.handler=new OpenLayers.Handler.Click(this,{'click':this.clickFeature},this.handlerOptions);this.handlerKeyboard=new OpenLayers.Handler.Keyboard(this,{"keydown":this.handleKeydown,"keyup":this.handleKeyUp});this.handlers={feature:new OpenLayers.Handler.Feature(this,this.layer,this.callbacks,{geometryTypes:this.geometryTypes})};document.onkeydown=function(e){if(e&&e.keyCode&&e.keyCode==16)
this.multiple=true;};if(this.box){this.listSelectedID=new Array();this.handlers.box=new OpenLayers.Handler.Box(this,{start:this.startBox,done:this.selectBox},{boxDivClassName:"olHandlerBoxSelectFeature"});}},startBox:function(e){},handleKeydown:function(e){if(e&&e.keyCode===17)
this.keyCtrl=e.ctrlKey;},handleKeyUp:function(e){this.keyCtrl=false;},clearHandlers:function(){if(this.hander)
this.handler.deactivate();if(this.handlers.feature)
this.handlers.feature.deactivate();if(this.handlers.box)
this.handlers.box.deactivate();},setBoxLayer:function(layer){if(layer==null||layer==undefined)
return false;else{if(this.boxLayer&&this.boxLayer!=layer){this.unselectAll();this.boxLayer=layer;}
this.boxLayer=layer;this.handler.activate();return true;}},setBox:function(value){if(this.box){if(value)
return false;else{this.box=false;this.handlerKeyboard.deactivate();return this.handlers.box.deactivate();}}else{if(value){this.box=true;if(!this.handlers.box){this.handlers.box=new OpenLayers.Handler.Box(this.scope,{done:this.selectBox},{boxDivClassName:"olHandlerBoxSelectFeature"});this.handlerKeyboard.activate();return this.handlers.box.activate();}else{this.handlerKeyboard.activate();return this.handlers.box.activate();}}else{return false;}}},initLayer:function(layers){if(OpenLayers.Util.isArray(layers)){this.layers=layers;this.layer=new OpenLayers.Layer.Vector.RootContainer(this.id+"_container",{layers:layers});}else{this.layer=layers;}},destroy:function(){if(this.active&&this.layer){this.layer.destroy();}
OpenLayers.Control.prototype.destroy.apply(this,arguments);if(this.layers){if(this.map){for(var i=0;i<this.layers.length;i++){this.map.removeLayer(this.layers[i]);}}}},activate:function(){if(this.map.infoControl&&this.map.infoControl.active)
this.map.infoControl.deactivate();if(this.layers){this.map.addLayer(this.layer);}
this.handler.activate();if(this.box&&this.handlers.box){this.handlers.box.activate();}
if(this.handlerKeyboard)
this.handlerKeyboard.activate();return OpenLayers.Control.prototype.activate.apply(this,arguments);},deactivate:function(){if(this.active){this.handler.deactivate();if(this.handlers.box){this.handlers.box.deactivate();}
if(this.layers){this.map.removeLayer(this.layer);}
if(this.handlerKeyboard)
this.handlerKeyboard.deactivate();}
return OpenLayers.Control.prototype.deactivate.apply(this,arguments);},unselectAll:function(options){if(this.boxLayer){this.boxLayer.seletedFeatures=[];var selectColor=new Object();selectColor.fillColor='#0000ff';selectColor.strokeColor='#0000ff';selectColor.strokeWidth=2;selectColor.fillOpacity=1;selectColor.strokeOpacity=1;if(this.boxLayer.kieuKhongGian.toLowerCase()=='point'){if(this.boxLayer.map.selectLayer){this.boxLayer.map.selectLayer.removeAllFeatures();}}}},clickFeature:function(evt){console.log('click feature');if(this.CLASS_NAME!=='gClient.Control.SelectFeature')
return;var lonlat=this.map.getLonLatFromPixel(new OpenLayers.Pixel(evt.layerX,evt.layerY));var touches=evt.lastTouches;if(touches){lonlat=this.map.getLonLatFromPixel(evt.xy);}
var tiles=this.map.getTiles(lonlat);if(tiles&&tiles.length>0){var x,y;if(tiles.length>0&&tiles[0]!=null){x=tiles[0].i;y=tiles[0].j;}else{x=tiles.i;y=tiles.j;}
var r=8;var xr=x+r;var xl=x-r;var yt=y-r;var yb=y+r;var isHover;var selectedCandidates=new Array();if(!this.keyCtrl){this.listSelectedID=new Array();}
for(var i=0;i<tiles.length;i++){var candidate=new Object();var layer=tiles[i].tile.layer;var geomType=layer.kieuKhongGian.toLowerCase();if(geomType.indexOf('line')!=-1||geomType==='multilinestring'||geomType==='point'||geomType==='multipoint'){if(geomType.indexOf('line')!=-1||geomType==='multilinestring'){candidate.priority=2+layer.getZIndex();}
if(geomType==='point'||geomType==='multipoint'){candidate.priority=3+layer.getZIndex();}
var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){for(var j=0;j<d.length;j++){if(d[j]==undefined)
continue;if(d[j].t=='ml'||d[j].t=='mp'){for(var k=0;k<d[j].p.length;k++){isHover=TouchesPath(d[j].p[k],x,y,r);if(isHover)
break;}}else
isHover=TouchesPath(d[j].p,x,y,r);if(isHover){candidate.fid=d[j].c;candidate.layer=layer;selectedCandidates.push(candidate);}}}}
if(geomType==='polygon'){var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){var minarea=99999;for(var j=0;j<d.length;j++){if(d[j].t==='a'){var isInside=InsidePolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
if(d[j].t==='ma'){var isInside=InsideMultiPolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}else if(d[j].t==='gc'){isHover=TouchesGeometryCollection(d[j].p,x,y,r);}
if(isHover){var area=(d[j].b.xmax-d[j].b.xmin)*(d[j].b.ymax-d[j].b.ymin);if(area==undefined||isNaN(area))
area=minarea-1;candidate=new Object();candidate.priority=1+layer.getZIndex();candidate.fid=d[j].c;candidate.layer=layer;if(area<minarea){minarea=area;if(!selectedCandidates.contains(candidate)){selectedCandidates.push(candidate);}}}}}}}
if(selectedCandidates.length>0){var maxPriority=0;var index=null;for(var i=0;i<selectedCandidates.length;i++){var value=selectedCandidates[i].priority;if(maxPriority<value){maxPriority=value;index=i;}}
var layers=this.map.getLayersByClass('gClient.Layer.Canvas');if(!this.keyCtrl){for(var i=0;i<layers.length;i++){if(layers[i].visibility){layers[i].clearSelection();}}
var idindex=this.listSelectedID.indexOf(selectedCandidates[index].fid);if(idindex==-1){this.listSelectedID.push(selectedCandidates[index].fid);}else{this.listSelectedID.splice(idindex,1);}
this.highlightSelection();this.map.selectFeatureControl.events.triggerEvent("click",{featureID:selectedCandidates[index].fid,layer:selectedCandidates[index].layer});}else{var idindex=this.listSelectedID.indexOf(selectedCandidates[index].fid);if(idindex==-1){this.listSelectedID.push(selectedCandidates[index].fid);}else{this.listSelectedID.splice(idindex,1);}
this.highlightSelection();}}else{if(!this.keyCtrl){var layers=this.map.getLayersByClass('gClient.Layer.Canvas');for(var i=0;i<layers.length;i++){if(layers[i].visibility){layers[i].clearSelection();}}}}}else{if(!this.keyCtrl){var layers=this.map.getLayersByClass('gClient.Layer.Canvas');for(var i=0;i<layers.length;i++){if(layers[i].visibility){layers[i].clearSelection();}}}}},multipleSelect:function(){return this.multiple||(this.handlers.feature.evt&&this.handlers.feature.evt[this.multipleKey]);},toggleSelect:function(){return this.toggle||(this.handlers.feature.evt&&this.handlers.feature.evt[this.toggleKey]);},clickoutFeature:function(feature){if(!this.hover&&this.clickout){this.unselectAll();}},onMouseMove:function(evt){if(this.selectFeatureControl&&this.selectFeatureControl.handlers&&this.selectFeatureControl.handlers.box&&this.selectFeatureControl.handlers.box.active){return;}
var lonlat=this.map.getLonLatFromPixel(new OpenLayers.Pixel(evt.layerX,evt.layerY));var tiles=this.map.getTiles(lonlat);if(tiles){var x,y;if(tiles.length>0&&tiles[0]!=null){x=tiles[0].i;y=tiles[0].j;}else{x=tiles.i;y=tiles.j;}
var index=tiles.length-1;for(;index>=0;index--){var c=null;if(tiles[index]){c=tiles[index].tile.imgDiv;var layer=tiles[index].tile.layer;if(layer&&layer.cauHinhMoRong&&layer.cauHinhMoRong.length>0){var extendsObj=JSON.parse(layer.cauHinhMoRong);if(extendsObj.choPhepHover!=undefined&&!extendsObj.choPhepHover)
continue;}}
if(c==null||!c.data)
continue;var cc=c;var d=c.data;if(!d){continue;}
var r=8;var candidates=null;var has_line=0;var xr=x+r;var xl=x-r;var yt=y-r;var yb=y+r;var isHover=false;var selectedCandidates=new Array();for(var i=0;i<tiles.length;i++){var candidate=new Object();var layer=tiles[i].tile.layer;if(layer&&layer.cauHinhMoRong&&layer.cauHinhMoRong.length>0){var extendsObj=JSON.parse(layer.cauHinhMoRong);if(extendsObj.choPhepHover!=undefined&&!extendsObj.choPhepHover)
continue;}
var geomType=layer.kieuKhongGian.toLowerCase();if(geomType.indexOf('line')!=-1||geomType==='multilinestring'||geomType==='point'||geomType==='multipoint'){if(geomType.indexOf('line')!=-1||geomType==='multilinestring'){candidate.priority=5+parseInt(layer.getZIndex());}
if(geomType==='point'||geomType==='multipoint'){candidate.priority=10+parseInt(layer.getZIndex());}
var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){for(var j=0;j<d.length;j++){if(d[j]==undefined)
continue;if(d[j].t=='ml'||d[j].t=='mp'){for(var k=0;k<d[j].p.length;k++){isHover=TouchesPath(d[j].p[k],x,y,r);if(isHover)
break;}}else{isHover=TouchesPath(d[j].p,x,y,r);}
if(isHover){candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.layer=layer;candidate.obj=d[j];if(!selectedCandidates.contains(candidate))
selectedCandidates.push(candidate);}}}}
if(geomType==='polygon'){var d=tiles[i].tile.imgDiv.data;if(d&&d.length>0){var minarea=99999;for(var j=0;j<d.length;j++){isHover=false;if(d[j].t==='a'){var isInside=InsidePolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}
if(d[j].t==='ma'){var isInside=InsideMultiPolygon(d[j].p,x,y);isHover=(xr>=d[j].b.xmin&&xl<=d[j].b.xmax&&yb>=d[j].b.ymin&&yt<=d[j].b.ymax&&((d[j].ispoly&&isInside)||(!d[j].ispoly&&TouchesPath(d[j].p,x,y,r))));}else if(d[j].t==='gc'){isHover=TouchesGeometryCollection(d[j].p,x,y,r);}
if(isHover){var area=(d[j].b.xmax-d[j].b.xmin)*(d[j].b.ymax-d[j].b.ymin);if(area==undefined||isNaN(area))
area=minarea-1;candidate=new Object();candidate.priority=parseInt(layer.getZIndex());candidate.fid=d[j].c;candidate.rid=d[j].id;candidate.layer=layer;candidate.obj=d[j];if(area<minarea){minarea=area;if(!selectedCandidates.contains(candidate)){selectedCandidates.push(candidate);}}}}}}}
if(selectedCandidates.length>0){selectedCandidates=selectedCandidates.sort(function(a,b){return a.priority-b.priority});selectedCandidates=selectedCandidates.reverse();var layer=selectedCandidates[0].layer;var id=selectedCandidates[0].fid;var rid=selectedCandidates[0].rid;var label=selectedCandidates[0].obj.l;if(this.hoverCurrentLayer!=layer||(this.hoverCurrentLayer==layer&&id!=this.hoverCurrentId)){clearGeomHover();var extendsObj=null;if(layer.cauHinhMoRong.length>1){extendsObj=JSON.parse(layer.cauHinhMoRong);}
if(extendsObj==null||!(extendsObj.choPhepHover!=undefined&&!extendsObj.choPhepHover)){if(this.hightLightOnHover){drawGeomHover(id,layer);}
this.map.selectFeatureControl.events.triggerEvent("hoverFeature",{featureID:id,layer:layer,label:label});if(this.hoverCallback){var e={featureID:id,rid:rid,layer:layer,clientX:evt.layerX,clientY:evt.layerY,tileX:x,tileY:y,lonlat:lonlat,label:label};if(this.lostHovercallback)
this.lostHovercallback(e);this.hoverCallback(e);}}
this.hoverCurrentId=id;this.hoverCurrentRID=rid;this.hoverCurrentLayer=layer;hoverLayer=layer;hoverId=id;}}else{this.map.hoverLayer.removeAllFeatures();clearGeomHover();if(this.lostHovercallback){var e={featureID:id,rid:this.hoverCurrentRID,layer:layer,clientX:evt.layerX,clientY:evt.layerY,tileX:x,tileY:y,lonlat:lonlat};this.lostHovercallback(e);}
this.hoverCurrentId=null;this.hoverCurrentRID=null;this.hoverCurrentLayer=null;hoverLayer=null;hoverId=null;}}}},overFeature:function(evt){var layer=feature.layer;if(this.hover){if(this.highlightOnly){this.highlight(feature);}else if(OpenLayers.Util.indexOf(layer.selectedFeatures,feature)==-1){this.select(feature);}}},outFeature:function(feature){if(this.hover){if(this.highlightOnly){if(feature._lastHighlighter==this.id){if(feature._prevHighlighter&&feature._prevHighlighter!=this.id){delete feature._lastHighlighter;var control=this.map.getControl(feature._prevHighlighter);if(control){control.highlight(feature);}}else{this.unhighlight(feature);}}}else{this.unselect(feature);}}},highlightSelection:function(){if(this.boxLayer&&this.listSelectedID.length>0){if(this.boxLayer.kieuKhongGian.toLowerCase()=='point'){this.boxLayer.clearSelection();}
this.boxLayer.selectedFeatures=this.listSelectedID;this.boxLayer.refresh();}},highlight:function(c,featureId,layer){},setHover:function(isHover){if(isHover==false){this.map.events.unregister('mousemove',this,this.MouseStop);}},MouseStop:function(){},unhighlight:function(layer,feature){if(feature._prevHighlighter==undefined){delete feature._lastHighlighter;}else if(feature._prevHighlighter==this.id){delete feature._prevHighlighter;}else{feature._lastHighlighter=feature._prevHighlighter;delete feature._prevHighlighter;}
this.events.triggerEvent("featureunhighlighted",{feature:feature});},select:function(featureId,layer){},unselect:function(layer,feature){this.unhighlight(layer,feature);OpenLayers.Util.removeItem(layer.selectedFeatures,feature);layer.events.triggerEvent("featureunselected",{feature:feature});this.onUnselect.call(this.scope,feature);},selectBox:function(position){if(this.boxLayer){if(layerSelected!=this.boxLayer&&this.boxLayer.selectedFeatures&&this.boxLayer.selectedFeatures.length>0){this.boxLayer.selectedFeatures=[];this.boxLayer.refresh();this.boxLayer=layerSelected;}}
if(position instanceof OpenLayers.Bounds){var minXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.left,position.bottom));var maxXY=this.map.getLonLatFromPixel(new OpenLayers.Pixel(position.right,position.top));var bounds=new OpenLayers.Bounds(minXY.lon,minXY.lat,maxXY.lon,maxXY.lat);if(!this.keyCtrl)
this.unselectAll();if(!this.multipleSelect()&&!this.keyCtrl){this.listSelectedID=new Array();}
var prevMultiple=this.multiple;this.multiple=true;var layers=this.layers||[this.layer];var layer;var tileIntersected=new Array();var tileContained=new Array();var candidates=new Array();for(var i=0;i<this.boxLayer.grid.length;i++){for(var j=0;j<this.boxLayer.grid[i].length;j++){var tile=this.boxLayer.grid[i][j];if(tile&&tile.bounds&&tile.layer==this.boxLayer){if(bounds.intersectsBounds(tile.bounds)){if(bounds.containsBounds(tile.bounds)&&tile.imgDiv.data!=null){tileContained.push(tile);}else{if(tile.imgDiv&&tile.imgDiv.data!=null)
tileIntersected.push(tile);}}}}}
for(var i=0;i<tileContained.length;i++){if(tileContained[i]&&tileContained[i].imgDiv.data){for(var j=0;j<tileContained[i].imgDiv.data.length;j++){if(this.listSelectedID.length>0&&this.listSelectedID.indexOf(tileContained[i].imgDiv.data[j].c)!==-1&&!this.keyCtrl){continue;}
else{var idindex=this.listSelectedID.indexOf(tileContained[i].imgDiv.data[j].c);if(idindex==-1){var objID=tileContained[i].imgDiv.data[j].c;if(objID.indexOf(',')!=-1){var objIDS=objID.split(',');for(var oid=0;oid<objIDS.length;oid++){this.listSelectedID.push(objIDS[oid]);}}
else
this.listSelectedID.push(objID);}else{this.listSelectedID.splice(idindex,1);}}}}}
for(var i=0;i<tileIntersected.length;i++){var itemSelect=new Object();itemSelect.tile=tileIntersected[i];itemSelect.data=new Array();for(var j=0;j<tileIntersected[i].imgDiv.data.length;j++){if(!tileIntersected[i].imgDiv.data||!tileIntersected[i].imgDiv.data[j])
continue;if(this.listSelectedID.length>0&&this.listSelectedID.indexOf(tileIntersected[i].imgDiv.data[j].c)!==-1&&!this.keyCtrl){continue;}
var isInterSect;if(this.boxLayer.kieuKhongGian.toUpperCase()=="POLYGON"||this.boxLayer.kieuKhongGian.toUpperCase().indexOf('LINE')!=-1){isInterSect=this.selectBoundIntersectsWithGeomBox(bounds,tileIntersected[i].imgDiv.data[j],tileIntersected[i]);}else if(this.boxLayer.kieuKhongGian.toUpperCase()=="POINT")
isInterSect=this.isBoundContainPoint(bounds,tileIntersected[i].imgDiv.data[j],tileIntersected[i]);if(isInterSect&&tileIntersected[i].layer.InvisibleObjects.indexOf(tileIntersected[i].imgDiv.data[j].c)==-1){if(!this.keyCtrl){var objID=tileIntersected[i].imgDiv.data[j].c;if(objID.indexOf(',')!=-1){var objIDS=objID.split(',');for(var oid=0;oid<objIDS.length;oid++){this.listSelectedID.push(objIDS[oid]);}}
else
this.listSelectedID.push(objID);}else{var idindex=this.listSelectedID.indexOf(tileIntersected[i].imgDiv.data[j].c);if(idindex==-1){var objID=tileIntersected[i].imgDiv.data[j].c;if(objID.indexOf(',')!=-1){var objIDS=objID.split(',');for(var oid=0;oid<objIDS.length;oid++){this.listSelectedID.push(objIDS[oid]);}}
else
this.listSelectedID.push(objID);}else{this.listSelectedID.splice(idindex,1);}}}}
if(itemSelect.data.length>0)
this.itemSelects.push(itemSelect);}
if(!this.keyCtrl){var layers=this.boxLayer.map.getLayersByClass('gClient.Layer.Canvas');for(var i=0;i<layers.length;i++){if(layers[i].visibility){layers[i].clearSelection();}}}
if(this.boxLayer&&this.listSelectedID.length>0){this.highlightSelection();this.events.triggerEvent("boxselect",{featureID:this.listSelectedID,layer:this.boxLayer});}else{for(var i=0;i<layers.length;i++){if(layers[i].visibility){layers[i].clearSelection();}}}
this.multiple=prevMultiple;}},isBoundContainPoint:function(selectBox,point,tile){if(tile==undefined||tile==null)
return false;var bound=tile.bounds;if(point.t=='mp'){var p=point.p;var check=false;for(var i=0;i<p.length;i++){var x=p[i][0];var y=255-p[i][1];x=x*this.map.getResolution()+bound.left;y=y*this.map.getResolution()+bound.bottom;check=selectBox.containsPixel(new OpenLayers.Pixel(x,y));if(check)
break;}
return check;}else{var x=point.p[0];var y=255-point.p[1];x=x*this.map.getResolution()+bound.left;y=y*this.map.getResolution()+bound.bottom;return selectBox.containsPixel(new OpenLayers.Pixel(x,y));}},selectBoundIntersectsWithGeomBox:function(selectBox,data,tile){var geobox=data.b;if(geobox==undefined||geobox==null||tile==undefined||tile==null)
return false;var bound=tile.bounds;var xmin=geobox.xmin*this.map.getResolution()+bound.left;var xmax=geobox.xmax*this.map.getResolution()+bound.left;var ymin=(255-geobox.ymax)*this.map.getResolution()+bound.bottom;var ymax=(255-geobox.ymin)*this.map.getResolution()+bound.bottom;var boxOfGeom=new OpenLayers.Bounds(xmin,ymin,xmax,ymax);if(selectBox.intersectsBounds(boxOfGeom)){if(selectBox.containsBounds(boxOfGeom)){return true;}else{if(data.t=='a'||data.t=='ml'){var points=[];for(var i=0;i<data.p[0].length;i+=2){var x1=data.p[0][i]*this.map.getResolution()+bound.left;var y1=(255-data.p[0][i+1])*this.map.getResolution()+bound.bottom;var x2=data.p[0][i+2]*this.map.getResolution()+bound.left;var y2=(255-data.p[0][i+3])*this.map.getResolution()+bound.bottom;var p1=new OpenLayers.Geometry.Point(x1,y1);points.push(p1);var p2=new OpenLayers.Geometry.Point(x2,y2);points.push(p2);var segment=new OpenLayers.Geometry.LineString([p1,p2]);if(selectBox.toGeometry().intersects(segment)){return true;}}
var ring=new OpenLayers.Geometry.LinearRing(points);var polygon=new OpenLayers.Geometry.Polygon([ring]);if(selectBox.toGeometry().intersects(polygon)){return true;}
else
return false;}else if(data.t==='ma'){for(var i=0;i<data.p.length;i++){for(var j=0;j<data.p[i].length;j++){for(var k=0;k<data.p[i][j].length;k+=2){var x=data.p[i][j][k]*this.map.getResolution()+bound.left;var y=(255-data.p[i][j][k+1])*this.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);if(selectBox.containsLonLat(lonlat)){return true;}}}}
return false;}
else if(data.t==='l'){for(var i=0;i<data.p.length;i+=2){var x1=data.p[i]*this.map.getResolution()+bound.left;var y1=(255-data.p[i+1])*this.map.getResolution()+bound.bottom;var x2=data.p[i+2]*this.map.getResolution()+bound.left;var y2=(255-data.p[i+3])*this.map.getResolution()+bound.bottom;var p1=new OpenLayers.Geometry.Point(x1,y1);var p2=new OpenLayers.Geometry.Point(x2,y2);var segment=new OpenLayers.Geometry.LineString([p1,p2]);if(selectBox.toGeometry().intersects(segment))
return true;}
return false;}
else{for(var i=0;i<data.p.length;i+=2){var x=data.p[i]*this.map.getResolution()+bound.left;var y=(255-data.p[i+1])*this.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);if(selectBox.containsLonLat(lonlat))
return true;}
return false;}}}
return selectBox.containsBounds(boxOfGeom);},setMap:function(map){this.handlers.feature.setMap(map);if(this.box){this.handlers.box.setMap(map);}
OpenLayers.Control.prototype.setMap.apply(this,arguments);},setLayer:function(layers){if(this.handlers!=undefined&&this.handlers!=null)
this.handlers.feature.deactivate();var isActive=this.active;this.unselectAll();this.deactivate();if(this.layers){this.layer.destroy();this.layers=null;}
this.initLayer(layers);if(this.handlers!=undefined&&this.handlers!=null)
this.handlers.feature.layer=this.layer;if(isActive){this.activate();}
if(this.hover){var reg=true;for(var i=0;i<this.map.events.listeners.mousemove.length;i++){if(this.map.events.listeners.mousemove[i].func==this.onMouseMove){reg=false;break;}}
if(reg)
this.map.events.register('mousemove',this,this.onMouseMove);}},CLASS_NAME:"gClient.Control.SelectFeature"});﻿
gClient.Control=gClient.Control||{};gClient.Control.gMapZoomBox=OpenLayers.Class(OpenLayers.Control.Panel,{initialize:function(options){OpenLayers.Control.Panel.prototype.initialize.apply(this,[options]);this.addControls([new OpenLayers.Control.ZoomBox({'displayClass':'gControlZoomBox','title':'Phóng to theo khung'})]);},draw:function(){var div=OpenLayers.Control.Panel.prototype.draw.apply(this,arguments);this.defaultControl=this.controls[0];return div;},CLASS_NAME:"gClient.Control.gMapZoomBox"});﻿
gClient.GeoRouter.Context=OpenLayers.Class(gClient.GeoService.Context,{initialize:function(serviceName,serviceUrl,serviceApiKey,serviceProviderType,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.Context.prototype.initialize.apply(this,arguments);this.serviceProvider=null;},destroy:function(){},getProvider:function(){if(this.serviceProvider==null){if(this.serviceProviderType==gClient.GOOGLE){}
else if(this.serviceProviderType==gClient.ARCGIS){this.serviceProvider=new gClient.GeoRouter.ArcGISProvider(this.serviceName,this.serviceUrl,this.serviceApiKey);}
else if(this.serviceProviderType==gClient.GSERVER){}}
return this.serviceProvider;},CLASS_NAME:"gClient.GeoRouter.Context"});gClient.GOOGLE="GOOGLE";gClient.ARCGIS="ARCGIS";gClient.GSERVER="GSERVER";﻿
gClient.Handler=gClient.Handler||{};gClient.Handler.CanvasFeature=OpenLayers.Class(OpenLayers.Handler,{EVENTMAP:{'click':{'in':'click','out':'clickout'},'mousemove':{'in':'over','out':'out'},'dblclick':{'in':'dblclick','out':null},'mousedown':{'in':null,'out':null},'mouseup':{'in':null,'out':null},'touchstart':{'in':'click','out':'clickout'}},feature:null,lastFeature:null,down:null,up:null,clickTolerance:4,geometryTypes:null,stopClick:true,stopDown:true,stopUp:false,control:null,initialize:function(control,layer,callbacks,options){this.control=control;OpenLayers.Handler.prototype.initialize.apply(this,[control,callbacks,options]);this.layer=layer;},touchstart:function(evt){this.startTouch();return OpenLayers.Event.isMultiTouch(evt)?true:this.mousedown(evt);},touchmove:function(evt){OpenLayers.Event.preventDefault(evt);},mousedown:function(evt){if(OpenLayers.Event.isLeftClick(evt)||OpenLayers.Event.isSingleTouch(evt)){this.down=evt.xy;}
return this.handle(evt)?!this.stopDown:true;},mouseup:function(evt){this.up=evt.xy;return this.handle(evt)?!this.stopUp:true;},click:function(evt){return this.handle(evt)?!this.stopClick:true;},mousemove:function(evt){if(!this.callbacks['over']&&!this.callbacks['out']){return true;}
this.handle(evt);return true;},dblclick:function(evt){return!this.handle(evt);},geometryTypeMatches:function(feature){return this.geometryTypes==null||OpenLayers.Util.indexOf(this.geometryTypes,feature.geometry.CLASS_NAME)>-1;},handle:function(evt){if(this.control.CLASS_NAME!=='gClient.Control.SelectFeature'&&this.control.CLASS_NAME!=='gClient.Control.InfoFeature'){return false;}else{var type=evt.type;var handled=false;if(type=="click"||type=="touchstart"){this.control.clickFeature(evt);handled=true;}
return handled;}},triggerCallback:function(type,mode,args){var key=this.EVENTMAP[type][mode];if(key){if(type=='click'&&this.up&&this.down){var dpx=Math.sqrt(Math.pow(this.up.x-this.down.x,2)+
Math.pow(this.up.y-this.down.y,2));if(dpx<=this.clickTolerance){this.callback(key,args);}
this.up=this.down=null;}else{this.callback(key,args);}}},activate:function(){var activated=false;if(OpenLayers.Handler.prototype.activate.apply(this,arguments)){this.moveLayerToTop();this.map.events.on({"removelayer":this.handleMapEvents,"changelayer":this.handleMapEvents,scope:this});activated=true;}
return activated;},deactivate:function(){var deactivated=false;if(OpenLayers.Handler.prototype.deactivate.apply(this,arguments)){this.moveLayerBack();this.feature=null;this.lastFeature=null;this.down=null;this.up=null;this.map.events.un({"removelayer":this.handleMapEvents,"changelayer":this.handleMapEvents,scope:this});deactivated=true;}
return deactivated;},handleMapEvents:function(evt){if(evt.type=="removelayer"||evt.property=="order"){this.moveLayerToTop();}},moveLayerToTop:function(){var index=Math.max(this.map.Z_INDEX_BASE['Feature']-1,this.layer.getZIndex())+1;this.layer.setZIndex(index);},moveLayerBack:function(){var index=this.layer.getZIndex()-1;if(index>=this.map.Z_INDEX_BASE['Feature']){this.layer.setZIndex(index);}else{this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer));}},CLASS_NAME:"gClient.Handler.CanvasFeature"});﻿gClient.gSearchPOI_configDivMap=null;gClient.gSearchPOI_configUrlCtategory=null;gClient.gSearchPOI_configSubcat=null;gClient.gSearchPOI_configCat=null;gClient.gSearchPOI_configVectorfinder=null;(function($){var methods={init:function(options){var settings={'namedivmap':'map','gGeoFinderInfo':null,'urlCategory':'','catid':''}
if(options){$.extend(settings,options);}
if(options==undefined||options==null)options={};gClient.gSearchPOI_configDivMap=((options.namedivmap==undefined||options.namedivmap==null)?'map':options.namedivmap);gClient.gSearchPOI_configUrlCtategory=((options.urlCategory==undefined||options.urlCategory==null)?'':options.urlCategory);var obj=this;var myStyle=new OpenLayers.StyleMap({fillColor:"#629BAE",fillOpacity:0.5,strokeColor:"#629BAE",strokeDashstyle:"dot"});var vectorfinder=new OpenLayers.Layer.Vector('Lớp tìm kiếm',{styleMap:myStyle});gClient.gSearchPOI_configVectorfinder=vectorfinder;var map=gClient.Maps[gClient.gSearchPOI_configDivMap];var html='<div class="mc-mod">'+'<div id="thematic" class="mod-12-0">'+'<h4 class="left label">Chọn chủ đề</h4>'+'<div id="gSearchPOI_divcombo"></div>'+'<div class="clear"></div>'+'<h4 class="left label">Bán kính</h4>'+'<input id="gSearchPOI_idBuffer" class="textbox style-border left" type="text" style="width:50px;">'+'<h4 class="left" style="margin:5px 4px 0 4px">(m)</h4>'+'<ul class="search-bt">'+'<div id="gSearchPOI_paneldiv" class="olControlEditingToolbar"></div>'+'</ul>'+'</div>'+'<div class="clear"></div>'+'<div id="search-result"  class="mod-12-0">'+'<h2 class="style-color">Kết quả tìm kiếm</h2>'+'<div id="gDisplayGeoJson_numberResult"></div>'+'<ul class="sr-items">'+'<div id="gSearchPOI_resultdiv">'+'</div>'+'<div id="gDisplayGeoJson_Pagination" class="pagination">'+'</div>'+'</ul>'+'</div>'+'</div>';$(this).html(html);gClient.gSearchPOI_configCat=((options.catid==undefined||options.catid==null)?'6':options.catid);var objectChildren=null;jQuery.ajax({dataType:'jsonp',url:gClient.gSearchPOI_configUrlCtategory,obj:this,success:function(data){for(var i=0;i<data.length;i++){if(data[i].key==gClient.gSearchPOI_configCat){objectChildren=data[i].children;}}
var comboboxHTML='<select class="combobox style-border" onchange="onchangeSelectComboSubcats(this);">'+"<option value='"+'unselected'+"'>"+'-Chọn subcategory-'+"</option>";for(var i=0;i<objectChildren.length;i++){comboboxHTML+="<option value='"+objectChildren[i].key+"'>"+objectChildren[i].title+"</option>";}
comboboxHTML+='</select>';$("#gSearchPOI_divcombo").html(comboboxHTML);},error:function(){alert("error");}});map.addLayer(vectorfinder);var p=$("#gSearchPOI_paneldiv").gToolbar('search',{'map':map,'layerfinder':vectorfinder,'callback':fnGSearchPOIFinderGSERVER});}};$.fn.gSearchPOI=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin searchPOI');}};})(jQuery);function findPOI(response,options){var map=gClient.Maps[gClient.gSearchPOI_configDivMap];map.markerLayer.removeAllFeatures();var format=new OpenLayers.Format.GeoJSON();for(var i=0;i<format.read(response).length;i++){var point=format.read(response)[i].geometry;var gCode=''+point.x+point.y;var valueAtributes=format.read(response)[i].attributes["NAME"];var title=((valueAtributes==''||valueAtributes==null)?'Không có tiêu đề':valueAtributes);var label='<ul class="sr-items">'+'<li class="sr-item style-background-object">'+'<div class="list-marker left">'+'<h5 class="number-marker">'+(i+1)+'</h5>'+'</div>'+'<h2 class="style-color">'+title+'</h2>'+'<h4 class="address">Tầng 6, tòa nhà TechnoSoft Building, </h4>'+'<h4 class="tel">(+84)4 6251-0750.</h4>'+'<ul class="sr-button right">'+'<li>'+'<div class="sr-bt-start" onclick="fnStart();"></div>'+'</li>'+'<li>'+'<div class="sr-bt-end"></div>'+'</li>'+'<li>'+'<div class="sr-bt-around"></div>'+'</li>'+'</ul>'+'</li>'+'</ul>';var stt=i+1;map.addMarker(point.x,point.y,gCode,"red",label,{clean:false,value1:stt,color:"#505050",yOffset:20});}
$("#gSearchPOI_resultdiv").gDisplayGeoJson("init",{data:response,atributes:'NAME',namedivmap:gClient.gSearchPOI_configDivMap});}
function fnGSearchPOIFinderGSERVER(geometry){var radi=0;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){radi=0;}else{radi=$("#gSearchPOI_idBuffer").val();}
var geo=geometry.clone();var gcommon=new gClient.Utils.Common();var geoBuffer=gcommon.generateGeometryBuffer(geo,0);var graphic=new OpenLayers.Feature.Vector(geo,null,null);var geoservicecontext=new gClient.GeoFinder.Context(gGeoFinderInfo.name,gGeoFinderInfo.url,gGeoFinderInfo.apiKey,gGeoFinderInfo.providerType);var geoFinder=new gClient.GeoFinder(geoservicecontext,map,"resultPanel");var finderParam=new gClient.FinderParameters('find',{cat:(gClient.gSearchPOI_configCat==null?"6":gClient.gSearchPOI_configCat),geometry:geo,subcat:(gClient.gSearchPOI_configSubcat==null?"328":gClient.gSearchPOI_configSubcat),radius:radi,typesearch:"normal"});geoFinder.findTask(finderParam,findPOI);var common=new gClient.Utils.Common();var geoBuffer=common.generateGeometryBuffer(geometry,radi);common.redrawGeomeWithBuffer(gClient.gSearchPOI_configVectorfinder,geoBuffer,false);}
function onchangeSelectComboSubcats(select){var selected=select.options[select.selectedIndex].value;gClient.gSearchPOI_configSubcat=selected;}
﻿
gClient.gDisplayGeoJson_configDivMap=null;gClient.gDisplayGeoJson_configMember=null;(function($){var methods={init:function(options){var settings={'data':'','atributes':'NAME','namedivmap':'map'}
if(options){$.extend(settings,options);}
if(options==undefined||options==null)options={};gClient.gDisplayGeoJson_configDivMap=((options.namedivmap==undefined||options.namedivmap==null)?'map':options.namedivmap);var obj=this;var html='';var item='';var format=new OpenLayers.Format.GeoJSON();var optInit=getOptionsFromForm();gClient.gDisplayGeoJson_configMember=format.read(settings.data);$("#gDisplayGeoJson_Pagination").pagination(gClient.gDisplayGeoJson_configMember.length,optInit);}};$.fn.gDisplayGeoJson=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin gAdministrativeUnits');}};})(jQuery);function gDisplayGeoJsonZoomToMarker(gCode){var map=gClient.Maps[gClient.gSearchPOI_configDivMap];map.markerLayer.zoomToMarker(gCode,15);}
function getOptionsFromForm(){var opt={callback:pageselectCallback};opt['items_per_page']=4;var htmlspecialchars={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;"}
$.each(htmlspecialchars,function(k,v){opt.prev_text="Trước";opt.next_text="Tiếp theo";})
return opt;}
function pageselectCallback(page_index,jq){var items_per_page=4;var max_elem=Math.min((page_index+1)*items_per_page,gClient.gDisplayGeoJson_configMember.length);var newcontent='';for(var i=page_index*items_per_page;i<max_elem;i++){var valueAtributes=gClient.gDisplayGeoJson_configMember[i].attributes["NAME"];var point=gClient.gDisplayGeoJson_configMember[i].geometry;var gCode=''+point.x+point.y;var title=((valueAtributes==''||valueAtributes==null)?'Không có tiêu đề':valueAtributes);var item='<li class="sr-item style-background-object">'+'<div class="list-marker left">'+'<h5 class="number-marker">'+(i+1)+'</h5>'+'</div>'+'<h2 class="style-color">'+title+'</h2>'+'<h4 class="address">Tầng 6, tòa nhà TechnoSoft Building, </h4>'+'<h4 class="tel">(+84)4 6251-0750.</h4>'+'<ul class="sr-button right">'+'<li>'+'<div class="sr-bt-start" onclick="gDisplayGeoJsonZoomToMarker('+"'"+gCode+"'"+');"></div>'+'</li>'+'<li>'+'<div class="sr-bt-end"></div>'+'</li>'+'<li>'+'<div class="sr-bt-around"></div>'+'</li>'+'</ul>'+'</li>';newcontent+=item;}
var from=page_index*items_per_page+1;var to=max_elem;var newnumberResult='<h5 class="text-gray-1"> Không có kết quả nào được tìm thấy </h5>';if(gClient.gDisplayGeoJson_configMember.length>0){newnumberResult='<table>'+'<tr>'+'<td><h5 class="text-gray-1">'+from+'- '+to+' trong '+gClient.gDisplayGeoJson_configMember.length+' kết quả trả về</h5>'+'</td>'+'<td><a class="style-background"  style="color:#FFFFFF" href="#" onclick="fnGDisplayGeoJson_OnclickRemoveAllResult();">Xóa kết quả</a>'+'</td>'+'</tr>'+'</table>';}
$("#gDisplayGeoJson_numberResult").html(newnumberResult);$('#gSearchPOI_resultdiv').html(newcontent);return false;}
function fnGDisplayGeoJson_OnclickRemoveAllResult(){$("#gDisplayGeoJson_numberResult").html('');$('#gSearchPOI_resultdiv').html('');$('#gDisplayGeoJson_Pagination').html('');var map=gClient.Maps[gClient.gDisplayGeoJson_configDivMap];map.markerLayer.removeAllFeatures();gClient.gSearchPOI_configVectorfinder.removeAllFeatures();}
﻿
gClient.GeoFinder.GServerProvider=OpenLayers.Class(gClient.GeoService.Provider,{initialize:function(serviceName,serviceUrl,serviceApiKey,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.Provider.prototype.initialize.apply(this,arguments);},destroy:function(){},convertResponse:function(response){return response;},createRequest:function(requestParams){if(requestParams.typesearch!="searchNearest"){var ring="";var sub_parameter;var cat_parameter;if(requestParams.geometry!=null&&requestParams.radius!=null){var polygon=this.genPolygonFromGeo(requestParams.geometry,requestParams.radius);}
if(requestParams.subcat!=null){sub_parameter="&subcat="+requestParams.subcat;}else{sub_parameter="";}
return this.serviceUrl+"/"+requestParams.layer+"?geom="+polygon+"&cat="+requestParams.cat+sub_parameter+"";}else{if(requestParams.geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){var poit=requestParams.geometry;var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");poit.transform(EPSG_900913,EPSG_4326);return"http://10.0.1.191:8084/services/rest/pois/poi1/searchNearest/x/"+poit.x+"/y/"+poit.y+"/iR/"+this.convertMetertoDegree(10)+"/mR/"+this.convertMetertoDegree(10000)+"/limit/2?cat="+requestParams.cat+"&subcat="+requestParams.subcat;}}},convertMetertoDegree:function(length){var geomUnits="m";var inPerDisplayUnit=OpenLayers.INCHES_PER_UNIT["dd"];if(inPerDisplayUnit){var inPerMapUnit=OpenLayers.INCHES_PER_UNIT[geomUnits];length*=(inPerMapUnit/inPerDisplayUnit);}
return length;},genPolygonFromGeo:function(geometry,radius){radius=this.convertMetertoDegree(radius);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geometry.transform(EPSG_900913,EPSG_4326);var reader=new jsts.io.WKTReader();var geometryFactory=new jsts.geom.GeometryFactory();var polyonBuffer;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){var point=geometryFactory.createPoint(new jsts.geom.Coordinate(geometry.x,geometry.y));polyonBuffer=point.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var arrPoint=geometry.getVertices();var strPolygon="POLYGON ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strPolygon+=","+arrPoint[i].x+" "+arrPoint[i].y;strPolygon+=")";var inputPolygon=reader.read(strPolygon);if(radius==0||radius==undefined)
return geometry;polyonBuffer=inputPolygon.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"){var arrPoint=geometry.getVertices();var strLine="LINESTRING ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strLine+=","+arrPoint[i].x+" "+arrPoint[i].y;strLine+=")";var inputLine=reader.read(strLine);polyonBuffer=inputLine.buffer(radius);}
if(polyonBuffer!=undefined){var parser=new jsts.io.OpenLayersParser();polyonBuffer=parser.write(polyonBuffer);}
return polyonBuffer;},CLASS_NAME:"gClient.GeoFinder.GServerProvider"});﻿
gClient.Control=gClient.Control||{};gClient.Control.SearchFeature=OpenLayers.Class(OpenLayers.Control,{layer:null,callbacks:null,callbacksOption:null,EVENT_TYPES:["featureadded"],multi:false,featureAdded:function(){},handlerOptions:null,initialize:function(layer,handler,options){this.EVENT_TYPES=OpenLayers.Control.DrawFeature.prototype.EVENT_TYPES.concat(OpenLayers.Control.prototype.EVENT_TYPES);this.callbacksOption=options['callback'];OpenLayers.Control.prototype.initialize.apply(this,[options]);this.callbacks=OpenLayers.Util.extend({done:this.drawFeature,modify:function(vertex,feature){this.layer.events.triggerEvent("sketchmodified",{vertex:vertex,feature:feature});},create:function(vertex,feature){this.layer.events.triggerEvent("sketchstarted",{vertex:vertex,feature:feature});}},this.callbacks);this.layer=layer;this.handlerOptions=this.handlerOptions||{};if(!("multi"in this.handlerOptions)){this.handlerOptions.multi=this.multi;}
var sketchStyle=this.layer.styleMap&&this.layer.styleMap.styles.temporary;if(sketchStyle){this.handlerOptions.layerOptions=OpenLayers.Util.applyDefaults(this.handlerOptions.layerOptions,{styleMap:new OpenLayers.StyleMap({"default":sketchStyle})});}
this.handler=new handler(this,this.callbacks,this.handlerOptions);},drawFeature:function(geometry){var feature=new OpenLayers.Feature.Vector(geometry);var proceed=this.layer.events.triggerEvent("sketchcomplete",{feature:feature});if(proceed!==false){feature.state=OpenLayers.State.INSERT;this.layer.removeAllFeatures();this.layer.addFeatures([feature]);this.featureAdded(feature);this.events.triggerEvent("featureadded",{feature:feature});this.deactivate();this.callbacksOption(geometry);}},insertXY:function(x,y){if(this.handler&&this.handler.line){this.handler.insertXY(x,y);}},insertDeltaXY:function(dx,dy){if(this.handler&&this.handler.line){this.handler.insertDeltaXY(dx,dy);}},insertDirectionLength:function(direction,length){if(this.handler&&this.handler.line){this.handler.insertDirectionLength(direction,length);}},insertDeflectionLength:function(deflection,length){if(this.handler&&this.handler.line){this.handler.insertDeflectionLength(deflection,length);}},callback:function(geometry){},undo:function(){return this.handler.undo&&this.handler.undo();},redo:function(){return this.handler.redo&&this.handler.redo();},finishSketch:function(){this.handler.finishGeometry();},cancel:function(){this.handler.cancel();},CLASS_NAME:"gClient.Control.SearchFeature"});﻿
gClient.Control=gClient.Control||{};gClient.Control.PanZoomBar=OpenLayers.Class(gClient.Control.PanZoom,{zoomStopWidth:34,zoomStopHeight:8,slider:null,sliderEvents:null,zoombarDiv:null,divEvents:null,zoomWorldIcon:false,panIcons:true,forceFixedZoomLevel:false,mouseDragStart:null,deltaY:null,zoomStart:null,destroy:function(){this._removeZoomBar();this.map.events.un({"changebaselayer":this.redraw,scope:this});OpenLayers.Control.PanZoom.prototype.destroy.apply(this,arguments);delete this.mouseDragStart;delete this.zoomStart;},setMap:function(map){OpenLayers.Control.PanZoom.prototype.setMap.apply(this,arguments);this.map.events.register("changebaselayer",this,this.redraw);},redraw:function(){if(this.div!=null){this.removeButtons();this._removeZoomBar();}
this.draw();},draw:function(px){OpenLayers.Control.prototype.draw.apply(this,arguments);px=this.position.clone();this.buttons=[];var sz=new OpenLayers.Size(30,25);var div=document.createElement('div');div.className="ol-control ol-w ol-bg-top-2";this.div.appendChild(div);var centered=new OpenLayers.Pixel(px.x+sz.w/2,px.y);var wposition=sz.w;this._addButton1(div,"panup","bt-top");this._addButton1(div,"panright","bt-right");this._addButton1(div,"pandown","bt-bottom");this._addButton1(div,"panleft","bt-left");this._addButton1(div,"zoomworld","bt-center");this._addButton1(div,"zoomin","bt-zoomout");centered=this._addZoomBar(centered.add(3,-10));div=document.createElement('div');div.className="ol-control-bottom ol-w ol-bg-bottom-2";this.div.appendChild(div);this._addButton1(div,"zoomout","bt-zoomin-2");return this.div;},_addZoomBar:function(centered){var imgLocation=OpenLayers.Util.getImagesLocation();var id=this.id+"_"+this.map.id;var zoomsToEnd=this.map.getNumZoomLevels()-1-this.map.getZoom();var slider=OpenLayers.Util.createAlphaImageDiv(id,centered.add(-1,97+zoomsToEnd*this.zoomStopHeight),new OpenLayers.Size(34,8),imgLocation+"slider.png","absolute");slider.style.cursor="move";this.slider=slider;this.slider.style.position="absolute";this.sliderEvents=new OpenLayers.Events(this,slider,null,true,{includeXY:true});this.sliderEvents.on({"touchstart":this.zoomBarDown,"touchmove":this.zoomBarDrag,"touchend":this.zoomBarUp,"mousedown":this.zoomBarDown,"mousemove":this.zoomBarDrag,"mouseup":this.zoomBarUp,"dblclick":this.doubleClick,"click":this.doubleClick});var sz=new OpenLayers.Size();sz.h=this.zoomStopHeight*this.map.getNumZoomLevels();sz.w=this.zoomStopWidth;var div=null;if(OpenLayers.Util.alphaHack()){var id=this.id+"_"+this.map.id;div=OpenLayers.Util.createAlphaImageDiv(id,centered,new OpenLayers.Size(sz.w,this.zoomStopHeight),imgLocation+"ol-style-2-level.png","absolute",null,"crop");div.style.height=sz.h+"px";}else{div=OpenLayers.Util.createDiv('OpenLayers_Control_PanZoomBar_Zoombar'+this.map.id,centered,sz,imgLocation+"ol-style-2-level.png");}
div.style.cursor="pointer";div.style.position="relative";this.zoombarDiv=div;this.divEvents=new OpenLayers.Events(this,div,null,true,{includeXY:true});this.divEvents.on({"touchmove":this.passEventToSlider,"mousedown":this.divClick,"mousemove":this.passEventToSlider,"dblclick":this.doubleClick,"click":this.doubleClick});this.div.appendChild(div);this.startTop=parseInt(div.style.top);this.div.appendChild(slider);this.map.events.register("zoomend",this,this.moveZoomBar);centered=centered.add(0,this.zoomStopHeight*this.map.getNumZoomLevels());return centered;},_removeZoomBar:function(){this.sliderEvents.un({"touchmove":this.zoomBarDrag,"mousedown":this.zoomBarDown,"mousemove":this.zoomBarDrag,"mouseup":this.zoomBarUp,"dblclick":this.doubleClick,"click":this.doubleClick});this.sliderEvents.destroy();this.divEvents.un({"touchmove":this.passEventToSlider,"mousedown":this.divClick,"mousemove":this.passEventToSlider,"dblclick":this.doubleClick,"click":this.doubleClick});this.divEvents.destroy();this.div.removeChild(this.zoombarDiv);this.zoombarDiv=null;this.div.removeChild(this.slider);this.slider=null;this.map.events.unregister("zoomend",this,this.moveZoomBar);},passEventToSlider:function(evt){this.sliderEvents.handleBrowserEvent(evt);},divClick:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return;}
var levels=evt.xy.y/this.zoomStopHeight;if(this.forceFixedZoomLevel||!this.map.fractionalZoom){levels=Math.floor(levels);}
var zoom=(this.map.getNumZoomLevels()-1)-levels;zoom=Math.min(Math.max(zoom,0),this.map.getNumZoomLevels()-1);this.map.zoomTo(zoom);OpenLayers.Event.stop(evt);},zoomBarDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)&&!OpenLayers.Event.isSingleTouch(evt)){return;}
this.map.events.on({"touchmove":this.passEventToSlider,"mousemove":this.passEventToSlider,"mouseup":this.passEventToSlider,scope:this});this.mouseDragStart=evt.xy.clone();this.zoomStart=evt.xy.clone();this.div.style.cursor="move";this.zoombarDiv.offsets=null;OpenLayers.Event.stop(evt);},zoomBarDrag:function(evt){if(this.mouseDragStart!=null){var deltaY=this.mouseDragStart.y-evt.xy.y;var offsets=OpenLayers.Util.pagePosition(this.zoombarDiv);if((evt.clientY-offsets[1])>0&&(evt.clientY-offsets[1])<parseInt(this.zoombarDiv.style.height)-2){var newTop=parseInt(this.slider.style.top)-deltaY;this.slider.style.top=newTop+"px";this.mouseDragStart=evt.xy.clone();}
this.deltaY=this.zoomStart.y-evt.xy.y;OpenLayers.Event.stop(evt);}},zoomBarUp:function(evt){if(!OpenLayers.Event.isLeftClick(evt)&&evt.type!=="touchend"){return;}
if(this.mouseDragStart){this.div.style.cursor="";this.map.events.un({"touchmove":this.passEventToSlider,"mouseup":this.passEventToSlider,"mousemove":this.passEventToSlider,scope:this});var zoomLevel=this.map.zoom;if(!this.forceFixedZoomLevel&&this.map.fractionalZoom){zoomLevel+=this.deltaY/this.zoomStopHeight;zoomLevel=Math.min(Math.max(zoomLevel,0),this.map.getNumZoomLevels()-1);}else{zoomLevel+=this.deltaY/this.zoomStopHeight;zoomLevel=Math.max(Math.round(zoomLevel),0);}
this.map.zoomTo(zoomLevel);this.mouseDragStart=null;this.zoomStart=null;this.deltaY=0;OpenLayers.Event.stop(evt);}},moveZoomBar:function(){var newTop=((this.map.getNumZoomLevels()-1)-this.map.getZoom())*this.zoomStopHeight+this.startTop+1;this.slider.style.top=97+newTop+"px";},CLASS_NAME:"gClient.Control.PanZoomBar"});﻿gClient.gTreePOI_urlLayerPOI=null;gClient.gTreePOI_layerPOI=null;gClient.gTreePOI_Map=null;(function($){var methods={init:function(options){var settings={'url':'','divmap':'map','urlLayerPOI':''}
if(options){$.extend(settings,options);}
gClient.gTreePOI_urlLayerPOI=settings.urlLayerPOI;gClient.gTreePOI_Map=gClient.Maps[settings.divmap];jQuery.ajax({dataType:'jsonp',url:settings.url,obj:this,success:function(data){$(obj).dynatree({checkbox:true,selectMode:3,children:data,onSelect:fnGTree_CallbackTreeView,onDblClick:function(node,event){node.toggleSelect();},onKeydown:function(node,event){if(event.which==32){node.toggleSelect();return false;}}});},error:function(){alert("error");}});var obj=this;}};$.fn.gTreePOI=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin gAdministrativeUnits');}};})(jQuery);function fnGTree_CallbackTreeView(select,node){var cats=[];var subcats=[];var number=0;var selKeys=$.map(node.tree.getSelectedNodes(),function(node){return node.data.key;});var selRootNodes=node.tree.getSelectedNodes(true);var selRootKeys=$.map(selRootNodes,function(node){if(node.data.children!=null){for(var i=0;i<node.data.children.length;i++){subcats.push(node.data.children[i]);}}
else{subcats.push(node.data);}});var subcatsID='';if(subcats.length>0){for(var i=0;i<subcats.length-1;i++){subcatsID+=subcats[i].key+',';}
subcatsID+=subcats[subcats.length-1].key;}
if(subcatsID!=''){if(gClient.gTreePOI_layerPOI!=null){gClient.gTreePOI_Map.removeLayer(gClient.gTreePOI_layerPOI);}
gClient.gTreePOI_layerPOI=new gClient.Layer.MarkerGrid("POI",gClient.gTreePOI_urlLayerPOI,{subcat:subcatsID});gClient.gTreePOI_Map.addLayer(gClient.gTreePOI_layerPOI);}else{if(gClient.gTreePOI_layerPOI!=null){gClient.gTreePOI_Map.removeLayer(gClient.gTreePOI_layerPOI);}
gClient.gTreePOI_layerPOI=new gClient.Layer.MarkerGrid("POI","");gClient.gTreePOI_Map.addLayer(gClient.gTreePOI_layerPOI);}}
﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.Vector=OpenLayers.Class(OpenLayers.Layer.Vector,{maLopBanDo:'',maLopDuLieu:'',moTa:'',maBanDoChuyenDe:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,duongDanAnh:'',laLopNen:false,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',url:[],cache:false,featureIDs:null,attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",type:'txt',buffer:0,units:"m",projection:"EPSG:900913",sphericalMercator:true,tileOptions:null,whereClause:null,optionsVectorTile:null,initialize:function(name,options){this.optionsVectorTile=options;OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);if(options==undefined){options={};}
if(options.whereClause!=undefined){this.whereClause=options.whereClause;}
this.featureIDs={};if(options.maLopBanDo!=undefined)
this.maLopBanDo=options.maLopBanDo;if(options.maLopDuLieu!=undefined)
this.maLopDuLieu=options.maLopDuLieu;this.name=name;if(options.moTa!=undefined)
this.moTa=options.moTa;if(options.maBanDoChuyenDe!=undefined)
this.maBanDoChuyenDe=options.maBanDoChuyenDe;if(options.lopDuLieu!=undefined)
this.lopDuLieu=options.lopDuLieu;if(options.heQuyChieu!=undefined)
this.heQuyChieu=options.heQuyChieu;if(options.kieuKhongGian!=undefined)
this.kieuKhongGian=options.kieuKhongGian;if(options.maDichVu!=undefined)
this.maDichVu=options.maDichVu;if(options.trinhBayNangCao!=undefined)
this.trinhBayNangCao=options.trinhBayNangCao;if(options.duongDanAnh!=undefined)
this.duongDanAnh=options.duongDanAnh;if(options.laLopNen!=undefined){this.isBaseLayer=options.laLopNen;this.laLopNen=options.laLopNen;}
if(options.hienThi!=undefined){this.visibility=options.hienThi;this.hienThi=options.hienThi;}
if(options.nhom!=undefined)
this.nhom=options.nhom;if(options.duongDan!=undefined)
this.duongDan=options.duongDan;if(options.kieuTrinhBay!=undefined)
this.kieuTrinhBay=options.kieuTrinhBay;if(options.cauHinhHienThi!=undefined)
this.cauHinhHienThi=options.cauHinhHienThi;if(options.mucXemNhoNhat!=undefined)
this.mucXemNhoNhat=options.mucXemNhoNhat;if(options.mucXemLonNhat!=undefined)
this.mucXemLonNhat=options.mucXemLonNhat;if(options.vungBaoNhoNhat!=undefined)
this.vungBaoNhoNhat=options.vungBaoNhoNhat;if(options.vungBaoLonNhat!=undefined)
this.vungBaoLonNhat=options.vungBaoLonNhat;if(options.mucHienThi!=undefined)
this.mucHienThi=options.mucHienThi;if(options.cache!=undefined)
this.cache=options.cache;if(options.whereClause!=undefined)
this.whereClause=options.whereClause;},destroy:function(){this.clearGrid();OpenLayers.Layer.Vector.prototype.destroy.apply(this,arguments);this.featureIDs=null;},clone:function(obj){if(obj==null){obj=new gClient.Layer.Vector(this.name,this.duongDan,this.getOptions());}},toJson:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan.replaceAll("'","''");result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause.replaceAll("'","''");result.CLASS_NAME=this.CLASS_NAME;return result;},getLayerInfo:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan;result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause;return result;},CLASS_NAME:"gClient.Layer.Vector"});﻿
var hoverId,hoverLayer,multiselect=false;var tileExpandOffset=100;var track;var firsDraw=false;var imgData;function drawGeomHover(id,layer){hoverLayer=layer;hoverId=id;for(var j=0;j<layer.tiles.length;j++){var tile=layer.tiles[j].imgDiv;if(tile&&tile.data&&tile.data.length>0){var ctx=tile.getContext("2d");ctx.kieuKhongGian=layer.kieuKhongGian;for(var k=0;k<tile.data.length;k++){var geom=tile.data[k];if(typeof(geom)==='undefined')continue;if(isCompletelyContain(layer.InvisibleObjects,geom.c)||isCompletelyContain(layer.selectedFeatures,geom.c)||isCompletelyContain(layer.selectedRids,geom.id)){continue;}
if(geom.c===id){geom.isHover=true;var st=new Object();var hoverStyle=new Object();var sindex=-1;if(hoverLayer.customRules&&hoverLayer.customRules[geom.id]!=null)
sindex=hoverLayer.customRules[geom.id];else
sindex=geom.s;if(tile.styles[sindex]){st.fillColor=tile.styles[sindex].symbolizer.fillColor;st.strokeColor=tile.styles[sindex].symbolizer.strokeColor;st.strokeWidth=tile.styles[sindex].symbolizer.strokeWidth;st.fillOpacity=tile.styles[sindex].symbolizer.fillOpacity;hoverStyle.fillOpacity=tile.styles[sindex].symbolizer.fillOpacity;st.strokeOpacity=tile.styles[sindex].symbolizer.strokeOpacity;st.externalGraphic=tile.styles[sindex].symbolizer.externalGraphic;st.graphicWidth=tile.styles[sindex].symbolizer.graphicWidth;st.graphicHeight=tile.styles[sindex].symbolizer.graphicHeight;st.graphicXOffset=tile.styles[sindex].symbolizer.graphicXOffset;st.graphicYOffset=tile.styles[sindex].symbolizer.graphicYOffset;if(tile.styles[sindex].symbolizer.graphicName){st.externalGraphic='';st.graphicName=tile.styles[sindex].symbolizer.graphicName
if(layer.kieuKhongGian.toUpperCase()=='POINT'){st.pointRadius=tile.styles[sindex].symbolizer.pointRadius;hoverStyle.pointRadius=tile.styles[sindex].symbolizer.pointRadius;}}}
else{st.fillColor=tile.defaultStyle.fillColor;st.strokeColor=tile.defaultStyle.strokeColor;st.strokeWidth=tile.defaultStyle.strokeWidth;st.fillOpacity=tile.defaultStyle.fillOpacity;hoverStyle.fillOpacity=tile.defaultStyle.fillOpacity;st.strokeOpacity=tile.defaultStyle.strokeOpacity;st.externalGraphic=tile.defaultStyle.externalGraphic;st.graphicWidth=tile.defaultStyle.graphicWidth;st.graphicHeight=tile.defaultStyle.graphicHeight;st.graphicXOffset=tile.defaultStyle.graphicXOffset;st.graphicYOffset=tile.defaultStyle.graphicYOffset;if(tile.defaultStyle.graphicName){st.externalGraphic='';st.graphicName=tile.defaultStyle.graphicName;if(layer.kieuKhongGian.toUpperCase()=='POINT'){hoverStyle.pointRadius=tile.defaultStyle.pointRadius;st.pointRadius=tile.defaultStyle.pointRadius;}}}
ctx.globalCompositeOperation="destination-out";drawGeometryCanvas(tile,ctx,geom,st,id);finishGeom(tile,ctx);geom.isHover=false;ctx.globalCompositeOperation="source-over"
if(layer.kieuKhongGian.toUpperCase()=='POINT')
hoverStyle.fillColor=st.fillColor;else
hoverStyle.fillColor=tile.hoverStyle.fillColor;hoverStyle.strokeColor=hoverStyle.fillColor;hoverStyle.strokeWidth=st.strokeWidth;if(hoverStyle.fillOpacity==undefined||hoverStyle.fillOpacity==null)
hoverStyle.fillOpacity=tile.hoverStyle.fillOpacity;hoverStyle.strokeOpacity=tile.hoverStyle.strokeOpacity;hoverStyle.externalGraphic=st.externalGraphic;hoverStyle.graphicWidth=st.graphicWidth;hoverStyle.graphicHeight=st.graphicHeight;hoverStyle.graphicName=st.graphicName;hoverStyle.graphicXOffset=st.graphicXOffset;hoverStyle.graphicYOffset=st.graphicYOffset;if(hoverStyle.graphicName){hoverStyle.externalGraphic='';}
drawGeometryCanvas(tile,ctx,geom,hoverStyle,id);finishGeom(tile,ctx);break;}}}}}
function clearGeomHover(){if(hoverLayer&&hoverId){for(var j=0;j<hoverLayer.tiles.length;j++){var tile=hoverLayer.tiles[j].imgDiv;if(tile&&tile.data&&tile.data.length>0){var ctx=tile.getContext("2d");ctx.kieuKhongGian=hoverLayer.kieuKhongGian;for(var k=0;k<tile.data.length;k++){if(tile.data&&tile.data[k]&&tile.data[k].c==hoverId){var d=tile.data[k];var id=d.c;var rid=d.id;if(isCompletelyContain(hoverLayer.InvisibleObjects,id)){continue;}
if(isCompletelyContain(hoverLayer.selectedFeatures,id)){continue;}
if(isCompletelyContain(hoverLayer.selectedRids,rid)){continue;}
var originalStyle=null;var sindex=-1;if(hoverLayer.customRules&&hoverLayer.customRules[d.id]!=null)
sindex=hoverLayer.customRules[d.id];else
sindex=d.s;if(tile.styles.length>0&&sindex>=0){if(tile.styles[sindex])
originalStyle=tile.styles[sindex].symbolizer;else
originalStyle=tile.defaultStyle;}else
originalStyle=tile.defaultStyle;if(originalStyle.graphicName){originalStyle.externalGraphic='';}
if(!originalStyle.graphicName&&hoverLayer.kieuKhongGian.toUpperCase()=='POINT'&&originalStyle.externalGraphic){return;}
var hoverStyle=new Object();hoverStyle.fillColor=tile.hoverStyle.fillColor;hoverStyle.strokeColor=originalStyle.strokeColor;hoverStyle.strokeWidth=originalStyle.strokeWidth;hoverStyle.fillOpacity=tile.hoverStyle.fillOpacity;hoverStyle.externalGraphic=originalStyle.externalGraphic;hoverStyle.pointRadius=tile.hoverStyle.pointRadius;hoverStyle.graphicName=originalStyle.graphicName;if(hoverStyle.graphicName){hoverStyle.externalGraphic='';}
hoverStyle.fillOpacity=1;hoverStyle.strokeOpacity=1;ctx.globalCompositeOperation="destination-out";if(ctx.kieuKhongGian.toLowerCase()=='polygon')
hoverStyle.strokeColor=false;drawGeometryCanvas(tile,ctx,d,hoverStyle);finishGeom(tile,ctx);ctx.globalCompositeOperation="source-over";tile.last_c=originalStyle;drawGeometryCanvas(tile,ctx,d,originalStyle);finishGeom(tile,ctx);break;}}}}
hoverLayer=null;hoverId=null;}}
function finishGeom(el,ctx){var c=el.last_c;if(c){ctx.lineCap="round";ctx.lineJoin="round";if(c.fillColor&&ctx.kieuKhongGian!=undefined&&(ctx.kieuKhongGian.toLowerCase()=='polygon'||ctx.kieuKhongGian.toLowerCase()=='multipolygon'||ctx.kieuKhongGian.toLowerCase()=='point')){if(c.fillColor){ctx.fill();}}
if(c.strokeColor){ctx.globalAlpha=c.strokeOpacity;ctx.stroke();}
el.last_c=null;el._path=0;}}
function refreshCanvas(el,layer,focus){var ctx=el.getContext('2d');ctx.kieuKhongGian=layer.kieuKhongGian;ctx.clearRect(0,0,256,256);var styles=layer.kieuTrinhBay.styles['default'].rules;var defaultStyle=layer.kieuTrinhBay.styles['default'].defaultStyle;var selectStyle=layer.kieuTrinhBay.styles['select'].defaultStyle;var hoverStyle=layer.kieuTrinhBay.styles['temporary'].defaultStyle;var len=el.data.length;var selectedItem;if(el.obj)
selectedItem=el.obj.selectedItem;var minx=20037508.34;var miny=20037508.34;var maxx=-20037508.34;var maxy=-20037508.34;for(var i=0;i<len;i++){if(!el.data||!el.data[i])
continue;var s=null;var sindex=el.data[i].s;var id=el.data[i].c;var oid=el.data[i].id;if(layer.customRules!=null&&layer.customRules[oid]!=null){sindex=layer.customRules[oid];}
if(isCompletelyContain(layer.InvisibleObjects,id)){continue;}
var fidSelected=layer.selectedFeatures&&isCompletelyContain(layer.selectedFeatures,el.data[i].c);var ridSelected=layer.selectedRids&&isCompletelyContain(layer.selectedRids,el.data[i].id);if(fidSelected||ridSelected){if(!tileSelected[el.id]){tileSelected[el.id]=el;}
if(el.data[i].t=='p'){if(layer.kieuKhongGian.toUpperCase()=='POINT'){hightLightPoint(ctx,el.data[i]);}}
if(el.data[i].t=='mp'){var p=el.data[i].p;for(var j=0;j<p.length;j++){var point=new Object();point.p=p[j];hightLightPoint(ctx,point);}}
else{var selectColor=new Object();selectColor.fillColor=selectStyle.fillColor;selectColor.strokeColor=selectStyle.strokeColor;selectColor.fillColor='red';selectColor.strokeColor='red';if(sindex==-1||sindex>styles.length-1){selectColor.strokeWidth=defaultStyle.strokeWidth;selectColor.fillOpacity=defaultStyle.fillOpacity;selectColor.strokeOpacity=defaultStyle.strokeOpacity;}
else{selectColor.strokeWidth=styles[sindex].symbolizer.strokeWidth;selectColor.fillOpacity=styles[sindex].symbolizer.fillOpacity;selectColor.strokeOpacity=styles[sindex].symbolizer.strokeOpacity;}
selectColor.externalGraphic=selectStyle.externalGraphic;selectColor.graphicHeight=selectStyle.graphicHeight;selectColor.graphicWidth=selectStyle.graphicWidth;selectColor.graphicXOffset=selectStyle.graphicXOffset;selectColor.graphicYOffset=selectStyle.graphicYOffset;s=selectColor;el.style.cursor="help";el.lastP=selectedItem;}}
if(s==null){if(sindex==-1||sindex>styles.length-1){s=defaultStyle;}
else{s=styles[sindex].symbolizer;}}
if(el.data[i]&&(el.data[i].t==='a'||el.data[i].t==='ma')){el.data[i].ispoly=1;}
if(s.graphicName){s.externalGraphic='';}
drawGeometryCanvas(el,ctx,el.data[i],s);}
if(len>0){finishGeom(el,ctx);}}
function isCompletelyContain(arrayID,id){var flag=false;if(typeof(arrayID)==='undefined')return flag;if(typeof(arrayID)==='object'){if(id.indexOf(',')!=-1){var objids=id.split(',');var foundindex=0;for(var i=0;i<arrayID.length;i++){for(var j=0;j<objids.length;j++){if(arrayID[i]==objids[j]){foundindex++;if(foundindex==objids.length)
return true;else
break;}}}
return false;}else{for(var i=0;i<arrayID.length;i++){if(arrayID[i]==id){flag=true;break;}}
return flag;}}else if(typeof(arrayID)==='string'){if(arrayID===id){return true;}
else if(arrayID.indexOf(',')!=-1){var strArrayID=arrayID.split(',');for(var i=0;i<strArrayID.length;i++){if(strArrayID[i]==id){flag=true;break;}}}else{if(arrayID==id)
flag=true;}}else if(typeof(arrayID)==='number'){if(arrayID==id)
flag=true;}
return flag;}
function setCanvasOpacity(el,layer,opacity){var ctx=el.getContext('2d');ctx.kieuKhongGian=layer.kieuKhongGian;ctx.clearRect(0,0,256,256);ctx.globalAlpha=opacity;var styles=layer.kieuTrinhBay.styles['default'].rules;var defaultStyle=layer.kieuTrinhBay.styles['default'].defaultStyle;var selectStyle=layer.kieuTrinhBay.styles['select'].defaultStyle;var hoverStyle=layer.kieuTrinhBay.styles['temporary'].defaultStyle;var len=el.data.length;var selectedItem;if(el.obj)
selectedItem=el.obj.selectedItem;for(var i=0;i<len;i++){if(!el.data||!el.data[i])
continue;var s=null;var sindex=el.data[i].s;var id=el.data[i].c;if(isCompletelyContain(layer.InvisibleObjects,id)){continue;}
if(layer.selectedFeatures&&isCompletelyContain(layer.selectedFeatures,el.data[i].c)){if(el.data[i].t=='p'){if(layer.kieuKhongGian.toUpperCase()=='POINT')
hightLightPoint(ctx,el.data[i]);}else{var selectColor=new Object();selectColor.fillColor='#0000ff';selectColor.strokeColor='#0000ff';selectColor.strokeWidth=3;selectColor.fillOpacity=1;if(styles[sindex]){selectColor.externalGraphic=styles[sindex].symbolizer.externalGraphic;selectColor.graphicHeight=styles[sindex].symbolizer.graphicHeight;selectColor.graphicWidth=styles[sindex].symbolizer.graphicWidth;selectColor.graphicXOffset=styles[sindex].symbolizer.graphicXOffset;selectColor.graphicYOffset=styles[sindex].symbolizer.graphicYOffset;}else{selectColor.externalGraphic=styles.externalGraphic;selectColor.graphicHeight=styles.graphicHeight;selectColor.graphicWidth=styles.graphicWidth;selectColor.graphicXOffset=styles.graphicXOffset;selectColor.graphicYOffset=styles.graphicYOffset;}
s=selectColor;el.style.cursor="help";el.lastP=selectedItem;}}
if(s==null){if(sindex==-1||sindex>styles.length-1){s=defaultStyle;}
else{s=styles[sindex].symbolizer;}}
if(el.data[i].t==='a'||el.data[i].t==='ma'){el.data[i].ispoly=1;}
if(s.graphicName){s.externalGraphic='';}
s.fillOpacity=opacity;s.strokeOpacity=opacity;drawGeometryCanvas(el,ctx,el.data[i],s);}
if(len>0){finishGeom(el,ctx)}}
function drawGeomCanvas(el,data,layer){layer.cache=false;var styles=layer.kieuTrinhBay.styles['default'].rules;var defaultStyle=layer.kieuTrinhBay.styles['default'].defaultStyle;var selectStyle=layer.kieuTrinhBay.styles['select'].defaultStyle;var hoverStyle=layer.kieuTrinhBay.styles['temporary'].defaultStyle;el.data=new Array();if(!data||!data.geom){return;}
var geom=data.geom;if(!el.lista){el.lista=new Array();}
var selectedItem;if(el.obj)
selectedItem=el.obj.selectedItem;if(el.getContext){var ctx=el.getContext("2d");ctx.clearRect(0,0,el.width,el.height);var len=geom.length;el.data=new Array();var sarray=new Array();var sindex=-1;el.styles=styles;el.defaultStyle=defaultStyle;el.selectStyle=selectStyle;el.hoverStyle=hoverStyle;var s=null;for(var i=0;i<len;i++){if(isCompletelyContain(layer.InvisibleObjects,geom[i].c)){continue;}
s=null;sindex=geom[i].s;if(layer.customRules!=null&&layer.customRules[geom[i].id]!=null){sindex=layer.customRules[geom[i].id];}
var fidSelected=layer.selectedFeatures&&isCompletelyContain(layer.selectedFeatures,geom[i].c);var ridSelected=layer.selectedRids&&isCompletelyContain(layer.selectedRids,geom[i].id);if(fidSelected||ridSelected){var selectColor=new Object();selectColor.fillColor='red';selectColor.strokeColor='red';selectColor.strokeWidth=3;selectColor.fillOpacity=1;selectColor.externalGraphic=selectStyle.externalGraphic;selectColor.graphicHeight=selectStyle.graphicHeight;selectColor.graphicWidth=selectStyle.graphicWidth;selectColor.graphicXOffset=selectStyle.graphicXOffset;selectColor.graphicYOffset=selectStyle.graphicYOffset;s=selectColor;el.style.cursor="help";el.lastP=selectedItem;}
b={};if(geom[i].p){b=getBoundFromGeometryData(geom[i]);}
var cl=geom[i].c;if(!el.lista[cl]){el.lista[cl]=new Array()}
el.lista[cl].push(i);geom[i].b=b;el.data[i]=geom[i];el.layer=layer;ctx.t=geom[i].t;ctx.b=geom[i].b;ctx.kieuKhongGian=layer.kieuKhongGian;ctx.lopDuLieu=layer.lopDuLieu;if(s==null){if(sindex==-1||sindex>styles.length-1){s=defaultStyle;}
else{s=styles[sindex].symbolizer;}}
if(geom[i].t==='a'||geom[i].t==='ma'){geom[i].ispoly=1;}
if(i==0)
firsDraw=true;drawGeometryCanvas(el,ctx,geom[i],s);}
if(len>0){finishGeom(el,ctx)}
if(layer.cauHinhNhan&&el.data){drawText(el);}}}
function caculatePolygonBound(data){var b={};var g=data.p;b.xmin=b.xmax=g[0][0];b.ymin=b.ymax=g[0][1];for(var k=0;k<g.length;k++){var d=g[k];for(var j=2;j<d.length-1;j+=2){if(d[j]<b.xmin){b.xmin=d[j]}else{if(d[j]>b.xmax){b.xmax=d[j]}}
if(d[j+1]<b.ymin){b.ymin=d[j+1]}else{if(d[j+1]>b.ymax){b.ymax=d[j+1]}}}}
return b;}
function caculateLineStringBound(data){var b={};var g=data.p;b.xmin=b.xmax=g[0];b.ymin=b.ymax=g[1];for(var k=2;k<g.length;k+=2){var x=g[k];var y=g[k+1];if(x<b.xmin){b.xmin=x;}else{if(x>b.xmax){b.xmax=x;}}
if(y<b.ymin){b.ymin=y;}else{if(y>b.ymax){b.ymax=y;}}}
return b;}
function caculateMultilePolygonBound(data){var b={};var g=data.p;b.xmin=b.xmax=g[0][0][0];b.ymin=b.ymax=g[0][0][1];for(var i=0;i<g.length;i++){for(var j=0;j<g[i].length;j++){var dmp=g[i][j];for(var l=2;l<dmp.length-1;l+=2){if(dmp[l]<b.xmin){b.xmin=dmp[l]}else{if(dmp[l]>b.xmax){b.xmax=dmp[l]}}
if(dmp[l+1]<b.ymin){b.ymin=dmp[l+1]}else{if(dmp[l+1]>b.ymax){b.ymax=dmp[l+1]}}}}}
return b;}
function caculateGeometryCollectionBound(data){var b={};var g=data.p;var listB=[];for(var i=0;i<g.length;i++){if(g[i].t=='p'){b.xmin=b.xmax=g[i].p[0];b.ymin=b.ymax=g[i].p[1];listB.push(b);}
if(g[i].t=='a'||g[i].t=='ml'){b=caculatePolygonBound(g[i]);listB.push(b);}
else if(g[i].t=='l'){b=caculateLineStringBound(g[i]);listB.push(b);}
else if(g[i].t==='ma'){b=caculateMultilePolygonBound(g[i]);listB.push(b);}else if(g[i].t==='gc'){b=caculateGeometryCollectionBound(g[i]);listB.push(b);}}
var bound={};bound.xmin=bound.xmax=listB[0].xmin;bound.ymin=bound.ymax=listB[0].ymin;for(var i=0;i<listB.length;i++){if(bound.xmin>listB[i].xmin)
bound.xmin=listB[i].xmin;if(bound.ymin>listB[i].ymin)
bound.ymin=listB[i].ymin;if(bound.xmax<listB[i].xmax)
bound.xmax=listB[i].xmax;if(bound.ymax<listB[i].ymax)
bound.ymax=listB[i].ymax;}
return bound;}
function getBoundFromGeometryData(data){var b={};var g=data.p;if(data.t=='p'){b.xmin=b.xmax=g[0];b.ymin=b.ymax=g[1];}
if(data.t=='a'||data.t=='ml'){b=caculatePolygonBound(data);}
else if(data.t=='l'){b=caculateLineStringBound(data);}
else if(data.t==='ma'){b=caculateMultilePolygonBound(data);}else if(data.t==='gc'){b=caculateGeometryCollectionBound(data);}
if(b.xmin<0)b.xmin=0;if(b.ymin<0)b.ymin=0;if(b.xmax>255)b.xmax=255;if(b.ymax>255)b.ymax=255;return b;}
function drawGeometryCanvas(el,ctx,geom,c){var layer=el.layer;if(isCompletelyContain(layer.InvisibleObjects,geom.c))
return;if(geom==undefined)return;var p=geom.p;if(el.last_c&&el.last_c!=c){finishGeom(el,ctx)}
if(!el._path){ctx.lineCap="round";ctx.lineJoin="round";ctx.beginPath();el._path=1;el.last_c=c;var lineWidth=c.strokeWidth;if(c.strokeDashstyle){if(isChromeBrower){if(c.strokeDashstyle=="dot")
ctx.setLineDash([1,1+lineWidth]);else if(c.strokeDashstyle=="dash")
ctx.setLineDash([2+lineWidth,4+lineWidth]);else if(c.strokeDashstyle=="dashdot")
ctx.setLineDash([2+lineWidth,4+lineWidth,1]);else if(c.strokeDashstyle=="longdash")
ctx.setLineDash([4+lineWidth,8+lineWidth]);else if(c.strokeDashstyle=="longdashdot")
ctx.setLineDash([4+lineWidth,8+lineWidth,1]);else if(c.strokeDashstyle=="solid")
ctx.setLineDash([]);}else{if(c.strokeDashstyle=="dot")
ctx.mozDash=[1,1+lineWidth];else if(c.strokeDashstyle=="dash")
ctx.mozDash=[2+lineWidth,4+lineWidth];else if(c.strokeDashstyle=="dashdot")
ctx.mozDash=[2+lineWidth,4+lineWidth,1];else if(c.strokeDashstyle=="longdash")
ctx.mozDash=[4+lineWidth,8+lineWidth];else if(c.strokeDashstyle=="longdashdot")
ctx.mozDash=[4+lineWidth,8+lineWidth,1];else if(c.strokeDashstyle=="solid")
ctx.mozDash=null;}}else{ctx.setLineDash([]);ctx.mozDash=null;}
if(c&&c.fillColor){ctx.fillStyle=c.fillColor}
if(c&&c.fillOpacity||c.fillOpacity==0){ctx.globalAlpha=c.fillOpacity}
if(c&&c.strokeColor){ctx.strokeStyle=c.strokeColor}
if(c&&c.strokeWidth>=0.5){ctx.lineWidth=c.strokeWidth}else{ctx.lineWidth=0}}
if(geom.t==='gc'){drawGeometryCollection(ctx,geom,c);}
if(geom.t=='ma')
{drawMultiPolygon(ctx,p);}
else if(geom.t=='a'){drawPolygon(ctx,p);}
else if(geom.t=='ml'){drawMultiLineString(ctx,p);}
else if(geom.t=='mp'){drawMultiPoint(ctx,geom,c);}
else if(geom.t=='p'){drawPoint(ctx,geom,c);}
else if(geom.t=='l'){drawLineString(ctx,p);}}
function getWidth(ctx,text){return ctx.measureText(text).width;}
function getTextCenter(axy,textWidth){return[axy[1]+0.5*Math.cos(axy[0])*textWidth,axy[2]+0.5*Math.sin(axy[0])*textWidth];}
function renderText(ctx,axy,fontStyle){ctx.save();ctx.font=fontStyle.dangChu+" "+fontStyle.coChuHienThi+"px "+fontStyle.kieuChuHienThi;ctx.fillStyle=fontStyle.mauHienThi;ctx.strokeStyle=fontStyle.mauVien;ctx.strokeWidth=0.5;ctx.globalAlpha=fontStyle.doTrongSuot;ctx.textBaseline=fontStyle.viTriDoc;ctx.textAlign=fontStyle.viTriNgang;ctx.lineWidth=3;var text=axy[4];var halo=true;var textCenter=getTextCenter(axy,getWidth(ctx,text));var dx=parseInt(textCenter[0]);var dy=parseInt(textCenter[1]);ctx.translate(dx+tileExpandOffset,dy+tileExpandOffset);ctx.rotate(axy[0]);ctx.strokeText(text,0,0);ctx.fillText(text,0,0);ctx.restore();}
function getPolyLength(points){var pointsLen=points.length,x1,y1,x2,y2,dx,dy,len=0;for(var i=0;i<pointsLen;i+=4){x1=points[i];y1=points[i+1];x2=points[i+2];y2=points[i+3];if(x2==undefined)x2=x1;if(y2==undefined)y2=y1;dx=x2-x1;dy=y2-y1;var d=Math.sqrt(dx*dx+dy*dy);len+=d;}
return len;}
function drawTextOnPath(ctx,p,text,fontStyle){var points=p.concat();var halo=true;var textWidth=ctx.measureText(text).width,textLen=text.length,pathLen=getPolyLength(points);if(pathLen<textWidth/2){return;}
var letter,widthUsed,prevAngle,positions,solution=0,flipCount,flipped=false,axy,letterWidth;widthUsed=solution?getWidth(ctx,text.charAt(0)):(pathLen-textWidth)/2;flipCount=0;for(var i=0;i<textLen;i++){letter=text.charAt(i);letterWidth=getWidth(ctx,letter);axy=getAngleAndCoordsAtLength(points,widthUsed,letterWidth);if(!axy){continue;}else
break;}
if(axy){if((axy[0]>(Math.PI/2))||(axy[0]<(-Math.PI/2))){var angle=axy[0];var posx=axy[1];var posy=axy[2];axy[0]=(Math.PI-axy[0])*-1;var dx=Math.cos(angle)*textWidth;var dy=Math.sin(angle)*textWidth;axy[1]=axy[1]+dx;axy[2]=axy[2]+dy;}
axy.push(text);renderText(ctx,axy,fontStyle);}}
function drawString(ctx,text,posX,posY,rotation,fontStyle){var lines=text.split("\n");ctx.save();ctx.font=fontStyle.dangChu+" "+fontStyle.coChuHienThi+"px "+fontStyle.kieuChuHienThi;ctx.fillStyle=fontStyle.mauHienThi;ctx.strokeStyle=fontStyle.mauVien;ctx.globalAlpha=fontStyle.doTrongSuot;ctx.textBaseline=fontStyle.viTriDoc;ctx.textAlign=fontStyle.viTriNgang;ctx.lineWidth=2;posX+=parseInt(fontStyle.x);posY+=parseInt(fontStyle.y);ctx.translate(posX,posY);if(rotation)
ctx.rotate(rotation*Math.PI/180);for(i=0;i<lines.length;i++){ctx.strokeText(lines[i],0,i*fontStyle.coChuHienThi);ctx.fillText(lines[i],0,i*fontStyle.coChuHienThi);}
ctx.restore();}
function displayMapTip(id,layer){for(var j=0;j<layer.tiles.length;j++){var tile=layer.tiles[j].imgDiv;if(tile&&tile.data&&tile.data.length>0){var ctx=tile.getContext("2d");ctx.kieuKhongGian=layer.kieuKhongGian;for(var k=0;k<tile.data.length;k++){var geom=tile.data[k];if(!geom||isCompletelyContain(layer.InvisibleObjects,geom.c)||isCompletelyContain(layer.selectedFeatures,geom.c)){continue;}
if(geom.c===id){}}}}}
function drawText(el){var layer=el.layer;if(!layer)
return;var labelStyle=layer.cauHinhNhan;if(labelStyle==null||labelStyle==undefined){return;}
var zoom=layer.map.getZoom()+layer.map.baseLayer.mucXemNhoNhat;var labelzoom=labelStyle.mucHienThi.split(',');var mucHienThiNhoNhat=parseInt(labelzoom[0]);var mucHienThiLonNhat=parseInt(labelzoom[1]);if(mucHienThiNhoNhat<=zoom&&zoom<=mucHienThiLonNhat){var labelCanvas=el.labelCanvas;if(!labelCanvas||!el.data)
return;var ctx=labelCanvas.getContext('2d');if(labelCanvas.url==el.src){var x,y;for(var i=0;i<el.data.length;i++){if(el.data[i]==undefined)
continue;if(el.data[i].l){var geom=el.data[i];var rotation=0;if(geom.lr!=undefined&&geom.lr!=null)
rotation=geom.lr;x=geom.x;y=geom.y;x+=tileExpandOffset;y+=tileExpandOffset;if(layer.kieuKhongGian=='LINESTRING')
drawTextOnPath(ctx,geom.p,geom.l,labelStyle);else{drawString(ctx,geom.l,x,y,rotation,labelStyle);}}}
el.labelCanvas.url='';}}}
function getAngleAndCoordsAtLength(points,dist,width){var pointsLen=points.length,dx,dy,x,y,i,x1,y1,x2,y2,len=0,segLen=0,angle,partLen,sameseg=true,gotxy=false;width=width||0;for(i=0;i<pointsLen;i+=4){if(gotxy){sameseg=false;}
x1=points[i];y1=points[i+1];x2=points[i+2];y2=points[i+3];pc=points[i-1];if(x2==undefined)
x2=0;if(y2==undefined)
y2=0;dx=x2-x1;dy=y2-y1;segLen=Math.sqrt(dx*dx+dy*dy);if(!gotxy&&len+segLen>=dist){partLen=dist-len;x=x1+dx*partLen/segLen;y=y1+dy*partLen/segLen;gotxy=true;}
if(gotxy&&len+segLen>=dist+width){partLen=dist+width-len;dx=x1+dx*partLen/segLen;dy=y1+dy*partLen/segLen;angle=Math.atan2(dy-y,dx-x);if(sameseg){return[angle,x,y,segLen-partLen];}else{return[angle,x,y,0];}}
len+=segLen;}}
function drawGeometryCollection(ctx,geom,c){for(var i=0;i<geom.p.length;i++){if(geom.p[i].t==='ma')
drawMultiPolygon(ctx,geom.p[i].p);else if(geom.p[i].t==='a')
drawPolygon(ctx,geom.p[i].p);else if(geom.p[i].t==='ml')
drawMultiLineString(ctx,geom.p[i].p);else if(geom.p[i].t==='mp')
drawMultiPoint(ctx,geom,c);else if(geom.p[i].t==='p')
drawPoint(ctx,geom.p[i],c);else if(geom.p[i].t==='l')
drawLineString(ctx,geom.p[i].p);}}
function drawPolygon(ctx,p){for(var i=0;i<p.length;i++){var d=p[i];ctx.moveTo(d[0],d[1]);for(var j=2;j<d.length;j+=2){ctx.lineTo(d[j],d[j+1]);}}}
function drawMultiPolygon(ctx,p){for(var i=0;i<p.length;i++){for(var j=0;j<p[i].length;j++){var d=p[i][j];ctx.moveTo(d[0],d[1]);for(var k=2;k<d.length;k+=2){ctx.lineTo(d[k],d[k+1]);}}}}
function drawMultiLineString(ctx,p){for(var i=0;i<p.length;i++){var d=p[i];ctx.moveTo(d[0],d[1]);for(var j=2;j<d.length;j+=2){ctx.lineTo(d[j],d[j+1]);}}}
function drawLineString(ctx,p){ctx.moveTo(p[0],p[1]);for(var i=2;i<p.length;i+=2){ctx.lineTo(p[i],p[i+1]);}}
function hoverPoint(ctx,point,c){var x=point.p[0];var y=point.p[1];var bound=ctx.canvas.tile.bounds;var itemArr=c.externalGraphic.split('/');var iconUrl=c.externalGraphic;if(iconUrl){var size=c.graphicWidth+10;x=x*ctx.canvas.layer.map.getResolution()+bound.left;y=(255-y+size/2)*ctx.canvas.layer.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);var srs_900913=new OpenLayers.Projection("EPSG:900913");var srs_4326=new OpenLayers.Projection("EPSG:4326");lonlat.transform(srs_900913,srs_4326);var zIndex=parseInt(ctx.canvas.layer.getZIndex())+1;ctx.canvas.layer.map.hoverLayer.setZIndex(zIndex);ctx.canvas.layer.map.hoverLayer.removeAllFeatures();ctx.canvas.layer.map.hoverLayer.addMarkerWithIcon(lonlat.lon,lonlat.lat,iconUrl,size,size,0,0);ctx.canvas.layer.map.hoverLayer.markerSelectControl.deactivate();}
else{var size=(c.pointRadius*2)+15;x=x*ctx.canvas.layer.map.getResolution()+bound.left;y=(255-y+size/2)*ctx.canvas.layer.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);var srs_900913=new OpenLayers.Projection("EPSG:900913");var srs_4326=new OpenLayers.Projection("EPSG:4326");lonlat.transform(srs_900913,srs_4326);var zIndex=parseInt(ctx.canvas.layer.getZIndex())+1;ctx.canvas.layer.map.hoverLayer.setZIndex(zIndex);ctx.canvas.layer.map.hoverLayer.removeAllFeatures();var key=c.graphicName+c.fillColor+c.fillOpacity+c.strokeColor+c.strokeOpacity+c.pointRadius;if(extImgs[key]){ctx.canvas.layer.map.hoverLayer.addMarkerWithIcon(lonlat.lon,lonlat.lat,extImgs[key].src,size,size,0,0);ctx.canvas.layer.map.hoverLayer.markerSelectControl.deactivate();}}}
function drawSymbol(ctx,x,y,c){if(c.fillColor)
ctx.fillStyle=c.fillColor;if(c.strokeColor)
ctx.strokeStyle=c.strokeColor;ctx.globalAlpha=c.fillOpacity;ctx.strokeWidth=c.strokeWidth;var r=c.pointRadius;var w=c.graphicWidth;if(c.graphicName=='star'){star(ctx,x,y,r);}
else if(c.graphicName=='cross'){r=w/4;cross(ctx,x,y,r,w);}
else if(c.graphicName=='x'){r=w/4;xsymbol(ctx,x,y,r,w);}
else if(c.graphicName=='square'){square(ctx,x,y,r);}
else if(c.graphicName=='triangle'){triangle(ctx,x,y,r);}
else if(c.graphicName=='circle'){circle(ctx,x,y,r);}}
function hightLightPoint(ctx,point){var p=point.p;var x=p[0];var y=p[1];var bound=ctx.canvas.tile.bounds;x=x*ctx.canvas.layer.map.getResolution()+bound.left;y=(255-y)*ctx.canvas.layer.map.getResolution()+bound.bottom;var lonlat=new OpenLayers.LonLat(x,y);var srs_900913=new OpenLayers.Projection("EPSG:900913");var srs_4326=new OpenLayers.Projection("EPSG:4326");lonlat.transform(srs_900913,srs_4326);var styles=new OpenLayers.StyleMap({"default":{pointRadius:5,strokeColor:"blue",strokeWidth:2,fillColor:"blue",fillOpacity:0.6},"select":{pointRadius:5,strokeColor:"blue",strokeWidth:2,fillColor:"blue",fillOpacity:0.6}});ctx.canvas.layer.map.selectLayer.styleMap=styles;var zIndex=parseInt(ctx.canvas.layer.getZIndex())+1;ctx.canvas.layer.map.selectLayer.setZIndex(zIndex+1);var feature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(x,y));ctx.canvas.layer.map.selectLayer.addFeatures(feature);}
function drawPoint(ctx,geom,c){var p=geom.p;if(ctx.kieuKhongGian!=undefined&&ctx.kieuKhongGian.toLowerCase()!=='point'){ctx.fillRect(p[0],p[1],1,1);}
else{if(c.externalGraphic==undefined||c.externalGraphic==""){if(geom.isHover){hoverPoint(ctx,geom,c);}else{var x=p[0]-c.pointRadius;var y=p[1]-c.pointRadius;x+=10;y+=10;var key=c.graphicName+c.fillColor+c.fillOpacity+c.strokeColor+c.strokeOpacity+c.pointRadius;if(extImgs[key]){var img=new Image();img.onload=function(){ctx.drawImage(img,x,y,2*c.pointRadius,2*c.pointRadius);}
img.src=extImgs[key].src;}
ctx.restore();}}else{if(!geom.isHover){var x=p[0]+c.graphicXOffset;var y=p[1]+c.graphicYOffset;x+=10;y+=10;if(extImgs[c.externalGraphic]){var img=new Image();img.onload=function(){ctx.drawImage(img,x,y,c.graphicWidth,c.graphicHeight);}
img.src=extImgs[c.externalGraphic].src;}
ctx.restore();}else{hoverPoint(ctx,geom,c);}}}}
function star(ctx,x,y,r){var r1=r*0.39;var sinb=0.5877;var cosb=0.8090;var sina=0.9510;var cosa=0.3090;ctx.moveTo(x,y-r);ctx.lineTo(x+r1*sinb,y-r1*cosb);ctx.lineTo(x+r*sina,y-r*cosa);ctx.lineTo(x+r1*sina,y+r1*cosa);ctx.lineTo(x+r*sinb,y+r*cosb);ctx.lineTo(x,y+r1);ctx.lineTo(x-r*sinb,y+r*cosb);ctx.lineTo(x-r1*sina,y+r1*cosa);ctx.lineTo(x-r*sina,y-r*cosa);ctx.lineTo(x-r1*sinb,y-r1*cosb);ctx.lineTo(x,y-r);}
function circle(ctx,x,y,r){ctx.moveTo(x+r,y);ctx.arc(x,y,r,0,2*Math.PI,true);}
function cross(ctx,x,y,r,w){ctx.moveTo(x+r/2,y+r/2);ctx.lineTo(x+r/2,y+r/2+w/2);ctx.lineTo(x-r/2,y+r/2+w/2);ctx.lineTo(x-r/2,y+r/2);ctx.lineTo(x-r/2-w/2,y+r/2);ctx.lineTo(x-r/2-w/2,y-r/2);ctx.lineTo(x-r/2,y-r/2);ctx.lineTo(x-r/2,y-r/2-w/2);ctx.lineTo(x+r/2,y-r/2-w/2);ctx.lineTo(x+r/2,y-r/2);ctx.lineTo(x+r/2+w/2,y-r/2);ctx.lineTo(x+r/2+w/2,y+r/2);ctx.lineTo(x+r/2,y+r/2);}
function xsymbol(ctx,x,y,r,w){ctx.moveTo(x+r/2,y);ctx.lineTo(x+r/2+w/2,y+w/2);ctx.lineTo(x+w/2-r/2,y+w/2);ctx.lineTo(x,y+r/2);ctx.lineTo(x-w/2,y+w/2);ctx.lineTo(x-r-w/2,y+w/2);ctx.lineTo(x-r/2,y);ctx.lineTo(x-r-w/2,y-w/2);ctx.lineTo(x-w/2,y-w/2);ctx.lineTo(x,y-r/2);ctx.lineTo(x+w/2,y-w/2);ctx.lineTo(x+r+w/2,y-w/2);ctx.lineTo(x+r/2,y);}
function square(ctx,x,y,r){ctx.rect(x-r,y-r,2*r,2*r);}
function triangle(ctx,x,y,r){ctx.moveTo(x,y-r);ctx.lineTo(x-r,y+r);ctx.lineTo(x+r,y+r);ctx.lineTo(x,y-r);}
function hightLightFeature(url){$.ajax({type:'GET',url:url,contentType:"application/json; charset=utf-8",dataType:"json",success:function(responseData,textStatus,jqXHR){map.markerLayer.addMarker(responseData.xdaidien,responseData.ydaidien,'geditor','black','',{clean:true});},error:function(responseData,textStatus,errorThrown){return;}});}
function MetersToLatLon(mx,my){var originShift=2*Math.PI*6378137/2.0;var lon=(mx/originShift)*180.0;var lat=(my/originShift)*180.0;lat=180/Math.PI*(2*Math.atan(Math.exp(lat*Math.PI/180.0))-Math.PI/2.0);var latlon=new Array();latlon.push(lat);latlon.push(lon);return latlon;}
function tile2long(x,z){return(x/Math.pow(2,z)*360-180);}
function tile2lat(y,z){var n=Math.PI-2*Math.PI*y/Math.pow(2,z);return(180/Math.PI*Math.atan(0.5*(Math.exp(n)-Math.exp(-n))));}
function drawMultiPoint(ctx,geom,c){var p=geom.p;for(var i=0;i<p.length;i++){var geo=new Object();geo.p=p[i];geo.t=geom.t;geo.isHover=geom.isHover;drawPoint(ctx,geo,c);}}
function expandCanvas(el,d){el.style.marginLeft="-"+d+"px";el.style.marginTop="-"+d+"px";el.width=256+d*2;el.height=256+d*2;if(el.c){el.c.width=256+d*2;el.c.height=256+d*2;el.c.style.width=256+d*2+"px";el.c.style.height=256+d*2+"px";}
el.style.width=el.width+"px";el.style.height=el.height+"px";el._offset=d}
function ajaxLoader(func,url,dest,tile,layer){if(document.getElementById){var x=(window.XDomainRequest)?new XDomainRequest():new XMLHttpRequest();if(window.XDomainRequest){x.xdomain=1}}
if(x){x.onreadystatechange=function(){if(url==dest.src){if(x.xdomain||x.readyState==4){var d=0;if(x.xdomain||x.status==200){el=dest;if(x.responseText[0]=="<"){return;}
if(window.JSON){try{d=window.JSON.parse(x.responseText)}catch(e){console.log(url);}}else{d=eval("("+x.responseText+")")}}
if(d){if(d.geom.length===0){return;}
else{func(el,d,layer)}}}}
else{x.abort();console.log(dest);}};if(x.xdomain){x.onerror=function(){};x.ontimeout=function(){};x.onprogress=function(){};x.onload=x.onreadystatechange}
x.open("GET",url);x.send(null)}}
function InsideMultiPolygon(d,x,y){for(var i=0;i<d.length;i++){if(InsidePolygon(d[i],x,y)){return 1;}else{if(i===d.length-1)return 0;}}}
function TouchesGeometryCollection(d,x,y,r){var result=false;for(var i=0;i<d.length;i++){if(d[i].t==='l'||d[i].t==='ml'||d[i].t==='p'||d[i].t==='mp'){result=TouchesPath(d[i].p,x,y,r)}
else if(d[i].t=='a'){result=InsidePolygon(d[i].p,x,y,r)}
else if(d[i].t=='ma'){result=InsideMultiPolygon(d[i].p,x,y);}
if(result)
return result;}
return result;}
function InsidePolygon(d,x,y){for(var i=0;i<d.length;i++){if(InsideSinglePolygon(d[i],x,y)){return 1;}else{if(i===d.length-1)return 0;}}}
function InsideSinglePolygon(d,x,y){var counter=0;var i;var xinters;var p1,p2;var N=d.length/2;p1x=d[0];p1y=d[1];for(i=1;i<=N;i++){p2x=d[2*(i%N)];p2y=d[2*(i%N)+1];if(y>minn(p1y,p2y)){if(y<=maxx(p1y,p2y)){if(x<=maxx(p1x,p2x)){if(p1y!=p2y){xinters=(y-p1y)*(p2x-p1x)/(p2y-p1y)+p1x;if(p1x==p2x||x<=xinters){counter++}}}}}
p1x=p2x;p1y=p2y}
if(counter%2==0){return 0}else{return 1}}
function TouchesPath(d,x,y,r){if(d[0]&&d[0].length!=undefined){if(d[0][0].length!=undefined){d=d[0][0];}else
d=d[0];}
var N=d.length;if(N===2){if(x>=d[0]-r&&x<=d[0]+r&&y>=d[1]-r&&y<=d[1]+r)
return 1;else
return 0;}
var p1x=d[0];var p1y=d[1];for(var i=2;i<N;i+=2){var p2x=d[i];var p2y=d[i+1];var dirx=p2x-p1x;var diry=p2y-p1y;var diffx=x-p1x;var diffy=y-p1y;var t=1*(diffx*dirx+diffy*diry*1)/(dirx*dirx+diry*diry*1);if(t<0){t=0}
if(t>1){t=1}
var closestx=p1x+t*dirx;var closesty=p1y+t*diry;var dx=x-closestx;var dy=y-closesty;if((dx*dx+dy*dy)<=r*r){return 1}
p1x=p2x;p1y=p2y;}
return 0}
function maxx(a,b){if(a>b){return a}
return b}
function minn(a,b){if(a<b){return a}
return b}
gClient.Tile.Canvas=OpenLayers.Class(OpenLayers.Tile,{url:null,imgDiv:null,labelCanvas:null,labelDiv:null,frame:null,imageReloadAttempts:null,layerAlphaHack:null,asyncRequestId:null,maxGetUrlLength:null,canvasContext:null,defaultStyles:null,styles:null,selectedStyels:null,hoverStyles:null,labelDiv:null,layer:null,crossOriginKeyword:null,initialize:function(layer,position,bounds,url,size,options){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.layer=layer;if(layer.kieuTrinhBay.styles){this.styles=layer.kieuTrinhBay.styles['default'].rules;this.defaultStyles=layer.kieuTrinhBay.styles['default'].defaultStyle;this.selectedStyels=layer.kieuTrinhBay.styles['select'].defaultStyle;this.hoverStyles=layer.kieuTrinhBay.styles['temporary'].defaultStyle;}
this.url=url;this.layerAlphaHack=this.layer.alpha&&OpenLayers.Util.alphaHack();this.frame=document.createElement("div");this.frame.style.position="absolute";this.frame.style.overflow="hidden";if(this.layer.cauHinhNhan){this.labelDiv=document.createElement('div');this.labelDiv.style.overflow='hidden';this.labelDiv.style.position='absolute';this.labelDiv.id=OpenLayers.Util.createUniqueID("labelDiv");}
if(this.maxGetUrlLength!=null){OpenLayers.Util.extend(this,OpenLayers.Tile.Image.IFrame);}},destroy:function(){if(this.imgDiv){this.clear();this.imgDiv=null;this.frame=null;}
this.asyncRequestId=null;OpenLayers.Tile.prototype.destroy.apply(this,arguments);},draw:function(){var shouldDraw=OpenLayers.Tile.prototype.draw.apply(this,arguments);if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position);}
var bound=this.bounds.clone();if(this.bounds){var epsg4326=new OpenLayers.Projection('EPSG:4326');var mapProj=new OpenLayers.Projection(this.layer.map.getProjection());bound=bound.transform(mapProj,epsg4326);}
if(shouldDraw){if(this.isLoading){this._loadEvent="reload";}else{this.isLoading=true;this._loadEvent="loadstart";}
this.renderTile();this.positionTile();}else if(shouldDraw===false&&this.imgDiv){this.unload();}
return shouldDraw;},renderTile:function(){this.url=this.layer.getURL(this.bounds);this.initImage();},positionTile:function(){var labelSize=new OpenLayers.Size(456,456);if(this.labelDiv){expandCanvas(this.labelDiv,tileExpandOffset);OpenLayers.Util.modifyDOMElement(this.labelDiv,null,this.position,labelSize);if(this.labelDiv.c){var labelCtx=this.labelDiv.c.getContext('2d');labelCtx.clearRect(0,0,512,512);}}
var style=this.frame.style,size=this.frame?this.size:this.layer.getImageSize(this.bounds),ratio=1;style.left=this.position.x+"px";style.top=this.position.y+"px";if(this.layer.kieuKhongGian.toUpperCase()!='POINT'){style.width=Math.round(ratio*size.w)+"px";style.height=Math.round(ratio*size.h)+"px";}},clear:function(){try{OpenLayers.Tile.prototype.clear.apply(this,arguments);var img=this.imgDiv;if(img){var tile=this.getTile();if(tile.parentNode===this.layer.div){this.layer.div.removeChild(tile);}
this.setImgSrc();if(this.layerAlphaHack===true){img.style.filter="";}
OpenLayers.Element.removeClass(img,"olImageLoadError");}
if(this.labelDiv&&this.labelDiv.parentNode==this.layer.div){this.labelDiv.parentNode.removeChild(this.labelDiv);}
if(this.labelCanvas){var labelCtx=this.labelCanvas.getContext('2d');labelCtx.clearRect(0,0,500,500);}}catch(e){console.log(e);}},createCanvas:function(id,px,sz,imgURL,position,border,opacity,delayDisplay){var image=document.createElement("canvas");if(!id){id=OpenLayers.Util.createUniqueID("gCanvasDiv");}
if(!position){position="relative";}
OpenLayers.Util.modifyDOMElement(image,id,px,sz,position,border,null,opacity);image.style.alt=id;image.galleryImg="no";image.od=document;image.setAttribute("width",256);image.setAttribute("height",256);image.style.position="absolute";image.obj=this.layer.map;return image;},createLabelCanvas:function(){try{var offset=this.layer.imageOffset;var size=this.layer.getImageSize(this.bounds);if(!this.labelCanvas)
this.labelCanvas=this.createCanvas(null,offset,size,null,"relative",null,null,true);this.labelCanvas.className='olTileImage';if(this.labelCanvas){if(!this.labelDiv){this.labelDiv=document.createElement('div');this.labelDiv.style.overflow='hidden';this.labelDiv.style.position='absolute';this.labelDiv.id=OpenLayers.Util.createUniqueID("labelDiv");}
if(this.frame)
this.labelDiv.style.zIndex=this.frame.style.zIndex+1;this.layer.div.appendChild(this.labelDiv);if(this.labelDiv.children.length==0){this.labelDiv.appendChild(this.labelCanvas);this.labelDiv.c=this.labelCanvas;}
if(this.imgDiv)
this.imgDiv.labelCanvas=this.labelCanvas;}}catch(e){console.log(e);}},moveTo:function(bounds,position,redraw){if(redraw==null){redraw=true;}
this.bounds=bounds.clone();this.position=position.clone();if(redraw){this.draw();}},getImage:function(){if(this.imgDiv){return this.imgDiv;}
else{var offset=this.layer.imageOffset;var size=this.layer.getImageSize(this.bounds);this.imgDiv=this.createCanvas(null,offset,size,null,"relative",null,null,true);this.imgDiv.map=this.layer.map;this.imgDiv.tile=this;this.imgDiv.className='olTileImage';var style=this.imgDiv.style;if(this.frame){var left=0,top=0;if(this.layer.gutter){left=this.layer.gutter/this.layer.tileSize.w*100;top=this.layer.gutter/this.layer.tileSize.h*100;}
style.left=-left+"%";style.top=-top+"%";style.width=(2*left+100)+"%";style.height=(2*top+100)+"%";}
style.visibility="hidden";style.opacity=0;if(this.layer.opacity<1){style.filter='alpha(opacity='+(this.layer.opacity*100)+')';}
style.position="absolute";if(this.layerAlphaHack){style.paddingTop=style.height;style.height="0";style.width="100%";}
if(this.frame){this.frame.appendChild(this.imgDiv);this.frame.c=this.imgDiv;}
if(this.layer.kieuKhongGian.toUpperCase()=='POINT'){expandCanvas(this.frame,10);}
if(this.layer.cauHinhNhan)
this.createLabelCanvas();}
return this.imgDiv;},setImage:function(img){this.imgDiv=img;},initImage:function(){if(!this.url&&!this.imgDiv){this.isLoading=true;return;}
this.events.triggerEvent('beforeload');this.layer.div.appendChild(this.getTile());this.events.triggerEvent(this._loadEvent);var img=this.getImage();var src=img.getAttribute('src')||'';if(this.url&&OpenLayers.Util.isEquivalentUrl(src,this.url)){}else{this.stopLoading();if(this.crossOriginKeyword){img.removeAttribute("crossorigin");}
OpenLayers.Event.observe(img,"error",OpenLayers.Function.bind(this.onImageError,this));this.imageReloadAttempts=0;this.setImgSrc(this.url);}
this.onImageLoad();},setImgSrc:function(url){var img=this.imgDiv;if(url){img.src=url;if(img.labelCanvas)
img.labelCanvas.url=url;}else{this.stopLoading();if(this.imgDiv){this.imgDiv.lista=null;this.imgDiv=null;}
if(img&&img.labelCanvas){img.labelCanvas.url='';}
if(img.parentNode){img.parentNode.removeChild(img);}}},getTile:function(){return this.frame?this.frame:this.getImage();},createBackBuffer:function(){},onImageLoad:function(){var img=this.imgDiv;if(img){this.stopLoading();this.isLoading=false;img.style.visibility='inherit';img.style.opacity=this.layer.opacity;this.events.triggerEvent("loadend");this._loadEvent="loadend";this.canvasContext=null;if(this.layerAlphaHack===true){img.style.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+
img.src+"', sizingMethod='scale')";}}},onImageError:function(){var img=this.imgDiv;if(img.src!=null){this.imageReloadAttempts++;if(this.imageReloadAttempts<=OpenLayers.IMAGE_RELOAD_ATTEMPTS){this.setImgSrc(this.layer.getURL(this.bounds));}else{OpenLayers.Element.addClass(img,"olImageLoadError");this.events.triggerEvent("loaderror");this.onImageLoad();}}},stopLoading:function(){if(this.imgDiv)
OpenLayers.Event.stopObservingElement(this.imgDiv);window.clearTimeout(this._loadTimeout);delete this._loadTimeout;},refresh:function(focus){if(this.imgDiv){var data=this.imgDiv.data;if(!data)
return;if(this.layer.cauHinhNhan&&!this.labelDiv){this.labelDiv=document.createElement('div');this.labelDiv.style.overflow='hidden';this.labelDiv.style.position='absolute';this.labelDiv.id=OpenLayers.Util.createUniqueID("labelDiv");var offset=this.layer.imageOffset;var size=this.layer.getImageSize(this.bounds);this.labelCanvas=this.createCanvas(null,offset,size,null,"relative",null,null,true);this.labelCanvas.className='olTileImage';this.labelDiv.style.zIndex=this.frame.style.zIndex+1;this.layer.div.appendChild(this.labelDiv);this.labelDiv.appendChild(this.labelCanvas);this.labelDiv.c=this.labelCanvas;this.imgDiv.labelDiv=this.labelCanvas;}
refreshCanvas(this.imgDiv,this.layer,focus);}},setOpacity:function(opacity){if(this.imgDiv){var data=this.imgDiv.data;if(!data)
return;setCanvasOpacity(this.imgDiv,this.layer,opacity);}},getCanvasContext:function(){if(OpenLayers.CANVAS_SUPPORTED&&this.imgDiv&&!this.isLoading){if(!this.canvasContext){var canvas=document.createElement("canvas");canvas.width=this.size.w;canvas.height=this.size.h;this.canvasContext=canvas.getContext("2d");this.canvasContext.drawImage(this.imgDiv,0,0);}
return this.canvasContext;}},CLASS_NAME:"gClient.Tile.Canvas"});gClient.Tile.Canvas.useBlankTile=(OpenLayers.BROWSER_NAME=="safari"||OpenLayers.BROWSER_NAME=="opera");﻿
gClient.Map=OpenLayers.Class(OpenLayers.Map,{maBanDo:'',tenBanDo:'',moTa:'',loaiBanDo:'',nguoiTao:'',nguoiCapNhat:'',ngayTao:'',ngayCapNhat:'',khungNhinHienTai:'',vungBaoLonNhat:'',vungBaoNhoNhat:'',vungBaoGioiHan:'',cacLopBanDo:'',mucXemNhoNhat:'',mucXemLonNhat:'',Dashboard:null,markerLayer:null,directionLayer:null,administrativeunitLayer:null,overlayLayer:null,editLayer:null,transparentLayer:null,groups:[],initialize:function(div,options){OpenLayers.Map.prototype.initialize.apply(this,arguments);},addMarker:function(lon,lat,gcode,featuretype,label,options){if(this.markerLayer==null){this.markerLayer=new gClient.Layer.Markers("POI");this.addLayer(this.markerLayer);}
this.markerLayer.addMarker(lon,lat,gcode,featuretype,label,options);},openMap:function(mapconfig){var layerActive=null;var maBanDo=mapconfig.maBanDo;var tenBanDo=mapconfig.tenBanDo;var moTa=mapconfig.moTa;var loaiBanDo=mapconfig.loaiBanDo;var nguoiTao=mapconfig.nguoiTao;var ngayTao=mapconfig.ngayTao;var nguoiCapNhat=mapconfig.nguoiCapNhat;var ngayCapNhat=mapconfig.ngayCapNhat;var cacLopBanDo=mapconfig.cacLopBanDo;var Dashboard=mapconfig.Dashboard;var khungNhinHienTai_map=mapconfig.khungNhinHienTai;var vungBaoNhoNhat_map=mapconfig.vungBaoNhoNhat;var vungBaoLonNhat_map=mapconfig.vungBaoLonNhat;var vungBaoGioiHan_map=mapconfig.vungBaoGioiHan;var mucXemNhoNhat_map=mapconfig.mucXemNhoNhat;var mucXemLonNhat_map=mapconfig.mucXemLonNhat;this.maBanDo=maBanDo;this.tenBanDo=tenBanDo;this.moTa=moTa;this.loaiBanDo=loaiBanDo;this.nguoiTao=nguoiTao;this.ngayTao=ngayTao;this.nguoiCapNhat=nguoiCapNhat;this.ngayCapNhat=ngayCapNhat;this.vungBaoGioiHan=vungBaoGioiHan_map;this.vungBaoLonNhat=vungBaoLonNhat_map;this.vungBaoNhoNhat=vungBaoNhoNhat_map;this.khungNhinHienTai=khungNhinHienTai_map;this.mucXemLonNhat=mucXemLonNhat_map;this.mucXemNhoNhat=mucXemNhoNhat_map;this.Dashboard=Dashboard;for(var i=0;i<cacLopBanDo.length;i++){var item=cacLopBanDo[i];var maLopBanDo=item.maLopBanDo;var tenLopBanDo=item.tenLopBanDo;var moTa=item.moTa;var maBanDoChuyenDe=item.maBanDoChuyenDe;var lopDuLieu=item.lopDuLieu;var heQuyChieu=item.heQuyChieu;var kieuKhongGian=item.kieuKhongGian;var maDichVu=item.maDichVu;var trinhBayNangCao=item.trinhBayNangCao;var duongDanAnh=item.duongDanAnh;var laLopNen=item.laLopNen;var hienthi=item.hienThi;var nhom=item.nhom;var duongDan=item.duongDan;var kieuTrinhBay=item.kieuTrinhBay;var mucXemNhoNhat=item.mucXemNhoNhat;var mucXemLonNhat=item.mucXemLonNhat;var vungBaoNhoNhat=item.vungBaoNhoNhat;var vungBaoLonNhat=item.vungBaoLonNhat;if(kieuKhongGian.toUpperCase()=='IMAGE'){var minLevelBaseMap=((mucXemNhoNhat==undefined||mucXemNhoNhat==null||mucXemNhoNhat=="")?0:mucXemNhoNhat);var maxLevelBaseMap=((mucXemLonNhat==undefined||mucXemLonNhat==null||mucXemLonNhat=="")?17:mucXemLonNhat);if(mucXemLonNhat_map!=null&&mucXemLonNhat_map!='')
maxLevelBaseMap=mucXemLonNhat_map;if(mucXemNhoNhat_map!=null&&mucXemNhoNhat_map!='')
minLevelBaseMap=minLevelBaseMap;var layerItem=new gClient.Layer.gServer(tenLopBanDo,duongDan,{mucXemNhoNhat:minLevelBaseMap,mucXemLonNhat:maxLevelBaseMap,hienThi:hienthi,laLopNen:laLopNen});if(hienthi)
layerActive=layerItem;this.addLayer(layerItem);}}
if(layerActive!=null)
this.setBaseLayer(layerActive);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");var extent=null;if(khungNhinHienTai_map!=""&&khungNhinHienTai_map!=null){extent=new OpenLayers.Bounds(khungNhinHienTai_map.left,khungNhinHienTai_map.bottom,khungNhinHienTai_map.right,khungNhinHienTai_map.top);extent.transform(EPSG_4326,EPSG_900913);}
var restricted_Extent=null;if(vungBaoGioiHan_map!=""){restricted_Extent=new OpenLayers.Bounds(vungBaoGioiHan_map.left,vungBaoGioiHan_map.bottom,vungBaoGioiHan_map.right,vungBaoGioiHan_map.top);restricted_Extent.transform(EPSG_4326,EPSG_900913);this.restrictedExtent=restricted_Extent;}
var max_extent=null;if(vungBaoLonNhat_map!=""){max_extent=new OpenLayers.Bounds(vungBaoLonNhat_map.left,vungBaoLonNhat_map.bottom,vungBaoLonNhat_map.right,vungBaoLonNhat_map.top);max_extent.transform(EPSG_4326,EPSG_900913);this.maxExtent=max_extent;}
if(khungNhinHienTai_map!=''&&khungNhinHienTai_map.x!=''&&khungNhinHienTai_map.y!=''&&khungNhinHienTai_map.level!=''){this.setCenter((new OpenLayers.LonLat(khungNhinHienTai_map.x,khungNhinHienTai_map.y).transform(EPSG_4326,EPSG_900913)),khungNhinHienTai_map.level);}else{this.zoomToExtent(max_extent);}},getTilePixel:function(layerX,layerY){var layers=this.getLayersByClass('gClient.Layer.Canvas');var pix=new OpenLayers.Pixel(layerX,layerY);var lonlat=map.getLonLatFromPixel(pix);var x=lonlat.lon;var y=lonlat.lat;var bounds=layers[0].grid[0][0].bounds,left=bounds.left,top=bounds.top;if(x<left){if(layers[0].map.baseLayer.wrapDateLine){var worldWidth=layers[0].map.getMaxExtent().getWidth();var worldsAway=Math.ceil((left-x)/worldWidth);x+=worldWidth*worldsAway;}}
var res=layers[0].map.getResolution();var dtx=(x-left)/(res*256);var dty=(top-y)/(res*256);var col=Math.floor(dtx);var row=Math.floor(dty);var tileX=Math.floor((dtx-col)*256);var tileY=Math.floor((dty-row)*256);var position=new Array();position.push(tileX);position.push(tileY);return position;},getTiles:function(loc,layer){var tiles=new Array();if(!loc){return tiles;}
var layers=[];if(layer)
layers.push(layer);else
layers=this.getLayersByClass('gClient.Layer.Canvas');var dertermined=false;var col;var row;for(var i=0;i<layers.length;i++)
if(layers[i].visibility){if(!dertermined){var data=null,x=loc.lon,y=loc.lat,numRows=layers[i].grid.length;if(layers[i].map&&numRows){if(!(layers[i].grid[0])||!(layers[i].grid[0][0])){return tiles;}
if(!col&&!row){var res=layers[i].map.getResolution(),tileWidth=layers[i].tileSize.w,tileHeight=layers[i].tileSize.h,bounds=layers[i].grid[0][0].bounds,left=bounds.left,top=bounds.top;if(x<left){if(layers[i].map.baseLayer.wrapDateLine){var worldWidth=layers[i].map.getMaxExtent().getWidth();var worldsAway=Math.ceil((left-x)/worldWidth);x+=worldWidth*worldsAway;}}
var dtx=(x-left)/(res*tileWidth);var dty=(top-y)/(res*tileHeight);col=Math.floor(dtx);row=Math.floor(dty);}
if(row>=0&&row<numRows){dertermined=true;var tile;if(layers[i].grid[row]&&layers[i].grid[row][col])
tile=layers[i].grid[row][col];if(tile&&tile.imgDiv){data={tile:tile,i:Math.floor((dtx-col)*tileWidth),j:Math.floor((dty-row)*tileHeight),col:col,row:row};}}}
if(data!=null)
tiles.push(data);}else{var tile;if(layers[i].grid[row]&&layers[i].grid[row][col])
tile=layers[i].grid[row][col];if(tile&&tile.imgDiv){data={tile:tile,i:Math.floor((dtx-col)*tileWidth),j:Math.floor((dty-row)*tileHeight),col:col,row:row};}
if(data!=null)
tiles.push(data);}}
return tiles;},updateSize:function(){OpenLayers.Map.prototype.updateSize.apply(this,arguments);var is_chrome=navigator.userAgent.toLowerCase().indexOf('chrome')>-1;if(is_chrome){var mapDoc=this.div;var mapSize=this.getSize();var elements=mapDoc.getElementsByTagName('svg');for(var i=0;i<elements.length;i++){var svg=elements[i];svg.style.display="block";}}},zoomToProvinces:function(options){var id=options.id;var url_layer=URL_TINH_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0.7});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},zoomToDistrict:function(options){var id=options.id;var url_layer=URL_HUYEN_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0.7});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},zoomToVillage:function(options){var id=options.id;var url_layer=URL_XA_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0.7});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();console.log(geojson_format);console.log(geojson_format.read(featurecollection));layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},removeAuLayer:function(){if(this.administrativeunitLayer!=null){this.removeLayer(this.administrativeunitLayer);this.administrativeunitLayer=null;}},addMarkerPolygon:function(listpoint,options){this.markerLayer.addMarkerPolygon(listpoint,options);},addMarkerLine:function(listpoint,options){this.markerLayer.addMarkerLine(listpoint,options);},zoomToProvinces:function(options){var id=options.id;var url_layer=URL_TINH_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0.7});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},zoomToDistrict:function(options){var id=options.id;var url_layer=URL_HUYEN_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0.7});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},zoomToWard:function(options){var id=options.id;var url_layer=URL_XA_GEOBI+"/"+id+"?f=geojson";var objMap=this;if(this.administrativeunitLayer==null){this.administrativeunitLayer=new OpenLayers.Layer.Vector("đơn vị hành chính");this.administrativeunitLayer.styleMap=new OpenLayers.StyleMap({fillOpacity:0,strokeColor:"#FF0000",strokeDashstyle:"solid",strokeWidth:5,strokeOpacity:0});objMap.addLayer(this.administrativeunitLayer);}
var layerDVHC=this.administrativeunitLayer;var geojson_format=new OpenLayers.Format.GeoJSON();var featurecollection=null;if(this.administrativeunitLayer!=null){this.addLayer(this.administrativeunitLayer);}
jQuery.ajax({dataType:'jsonp',url:url_layer,cache:false,obj:this,success:function(data){featurecollection=data;},complete:function(){var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");geojson_format.externalProjection=EPSG_4326;geojson_format.internalProjection=EPSG_900913;layerDVHC.removeAllFeatures();layerDVHC.addFeatures(geojson_format.read(featurecollection));var extent=layerDVHC.getDataExtent();objMap.zoomToExtent(extent);},error:function(){}});},zoomToPointWidthLevel:function(lon,lat,zoomLevel){if(zoomLevel!=null){this.zoomTo(zoomLevel);}
var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");this.setCenter(new OpenLayers.LonLat(lon,lat).transform(EPSG_4326,EPSG_900913));},changeNameLayer:function(olName,newName){var listLayer=this.getLayersByName(olName);for(var i=0;i<listLayer.length;i++){listLayer[i].setName(newName);}},toJson:function(){var result={};var listLayers=this.layers;result.maBanDo=this.maBanDo;result.tenBanDo=this.tenBanDo;result.moTa=this.moTa;result.loaiBanDo=this.loaiBanDo;result.nguoiTao=this.nguoiTao;result.ngayTao=this.ngayTao;result.nguoiCapNhat=this.nguoiCapNhat;result.ngayCapNhat=this.ngayCapNhat;result.khungNhinHienTai=this.khungNhinHienTai;result.vungBaoLonNhat=this.vungBaoLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoGioiHan=this.vungBaoGioiHan;result.mucXemLonNhat=this.mucXemLonNhat;result.mucXemNhoNhat=this.mucXemNhoNhat;if(this.Dashboard&&this.Dashboard!=undefined)
result.Dashboard=this.Dashboard;else
result.Dashboard=null;result.cacLopBanDo=[];for(var i=0;i<listLayers.length;i++){if(listLayers[i].displayInLayerSwitcher==true){result.cacLopBanDo.push(listLayers[i].toJson());}}
return result;},mapByType:function(typeMap){if(typeMap=="simple"){this.markerLayer=new gClient.Layer.Markers("POI");this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer]);var controlSimple=[new gClient.Control.SmallPanZoom(),new gClient.Control.LayerSwitcher()];this.addControls(controlSimple);}
else if(typeMap=="normal"){this.markerLayer=new gClient.Layer.Markers("POI");this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer]);this.addControls([new gClient.Control.LayerSwitcher(),new gClient.Control.PanZoomBar()]);}
else if(typeMap=="full"){this.markerLayer=new gClient.Layer.Markers("POI");this.directionLayer=new OpenLayers.Layer.Vector("Đường đi",{displayInLayerSwitcher:false});this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer,this.directionLayer]);var obj=this;this.addControls([new gClient.Control.LayerSwitcher(),new gClient.Control.PanZoomBar(),new OpenLayers.Control.Scale(null,{updateScale:function(){var scale=obj.getScale();if(scale){this.element.innerHTML="Tỷ lệ 1 : "+OpenLayers.Number.format(Math.round(scale),0,".");}}}),new OpenLayers.Control.ScaleLine()]);}
else if(typeMap=="demo"){this.markerLayer=new gClient.Layer.Markers("POI");this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer]);this.addControls([new gClient.Control.BaseLayerSwitcher(),new gClient.Control.PanZoomBarV2()]);}
else if(typeMap=="mini"){this.markerLayer=new gClient.Layer.Markers("POI");this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer]);this.addControls([new gClient.Control.LayerSwitcher()]);}
else if(typeMap=="demo2"){this.markerLayer=new gClient.Layer.Markers("POI");this.overlayLayer=new OpenLayers.Layer.Vector("Chồng xếp",{displayInLayerSwitcher:false});this.addLayers([this.markerLayer,this.overlayLayer]);this.addControls([new gClient.Control.EditCommandLine()]);}},CLASS_NAME:"gClient.Map"});function fnConvertObjectToString2(o){var parse=function(_o){var a=[],t;for(var p in _o){if(_o.hasOwnProperty(p)){t=_o[p];if(t&&typeof t=="object"){a[a.length]=p+":{ "+arguments.callee(t).join(", ")+"}";}
else{if(t==null){t='null';}
if(typeof t=="string"){a[a.length]=[p+": \""+t.toString()+"\""];}
else{a[a.length]=[p+": "+t.toString()];}}}}
return a;}
return"{"+parse(o).join(", ")+"}";}
﻿
gClient.Tile.Blank=OpenLayers.Class(OpenLayers.Tile,{layer:null,url:null,imgDiv:null,frame:null,layerAlphaHack:null,isBackBuffer:false,isFirstDraw:true,backBufferTile:null,maxGetUrlLength:null,initialize:function(layer,position,bounds,url,size,options){OpenLayers.Tile.prototype.initialize.apply(this,arguments);if(this.maxGetUrlLength!=null){OpenLayers.Util.extend(this,OpenLayers.Tile.Image.IFrame);}
this.url=url;this.frame=document.createElement('div');this.frame.style.overflow='hidden';this.frame.style.position='absolute';this.layerAlphaHack=this.layer.alpha&&OpenLayers.Util.alphaHack();this.layer=layer;if(layer.backgroundColor){this.frame.style.backgroundColor=layer.backgroundColor;}},destroy:function(){if(this.imgDiv!=null){this.removeImgDiv();}
this.imgDiv=null;if((this.frame!=null)&&(this.frame.parentNode==this.layer.div)){this.layer.div.removeChild(this.frame);}
this.frame=null;if(this.backBufferTile){this.backBufferTile.destroy();this.backBufferTile=null;}
this.layer.events.unregister("loadend",this,this.resetBackBuffer);OpenLayers.Tile.prototype.destroy.apply(this,arguments);},clone:function(obj){if(obj==null){obj=new gClient.Tile.Canvas(this.layer,this.position,this.bounds,this.url,this.size);}
obj=OpenLayers.Tile.prototype.clone.apply(this,[obj]);obj.imgDiv=null;return obj;},draw:function(){return this.renderTile();},createBackBuffer:function(){if(!this.imgDiv){return;}
var backBuffer;if(this.frame){backBuffer=this.frame.cloneNode(false);backBuffer.appendChild(this.imgDiv);}else{backBuffer=this.imgDiv;}
this.imgDiv=null;return backBuffer;},resetBackBuffer:function(){return;this.showTile();if(this.backBufferTile&&(this.isFirstDraw||!this.layer.numLoadingTiles)){this.isFirstDraw=false;var maxExtent=this.layer.maxExtent;var withinMaxExtent=(maxExtent&&this.bounds.intersectsBounds(maxExtent,false));if(withinMaxExtent){this.backBufferTile.position=this.position;this.backBufferTile.bounds=this.bounds;this.backBufferTile.size=this.size;this.backBufferTile.imageSize=this.layer.getImageSize(this.bounds)||this.size;this.backBufferTile.imageOffset=this.layer.imageOffset;this.backBufferTile.resolution=this.layer.getResolution();this.backBufferTile.renderTile();}
this.backBufferTile.hide();}},renderTile:function(){if(this.layer.async){this.initImgDiv();this.layer.getURLasync(this.bounds,this,"url",this.positionImage);}else{this.url=this.layer.getURL(this.bounds);this.initImgDiv();this.positionImage();}
return true;},positionImage:function(){if(this.layer===null){return;}
OpenLayers.Util.modifyDOMElement(this.frame,null,this.position,this.size);var imageSize=this.layer.getImageSize(this.bounds);OpenLayers.Util.modifyDOMElement(this.imgDiv,null,null,imageSize);this.imgDiv.src=this.url;this.imgDiv.data=null;},clear:function(){if(this.imgDiv){var context=this.imgDiv.getContext('2d');context.clearRect(0,0,this.imgDiv.width,this.imgDiv.height);this.imgDiv.lista=null;this.imgDiv.data=null;if(this.labelCanvas){var labelCtx=this.labelCanvas.getContext('2d');labelCtx.clearRect(0,0,456,456);}}},createCanvas:function(id,px,sz,imgURL,position,border,opacity,delayDisplay){var image=document.createElement("canvas");if(!id){id=OpenLayers.Util.createUniqueID("gCanvasDiv");}
if(!position){position="relative";}
OpenLayers.Util.modifyDOMElement(image,id,px,sz,position,border,null,opacity);image.style.alt=id;image.galleryImg="no";image.od=document;image.setAttribute("width",256);image.setAttribute("height",256);image.style.position="absolute";image.obj=this.layer.map;if(imgURL){image.src=imgURL;}
return image;},initImgDiv:function(){if(this.imgDiv==null){var offset=this.layer.imageOffset;var size=this.layer.getImageSize(this.bounds);this.imgDiv=this.createCanvas(null,offset,size,null,"relative",null,null,true);if(OpenLayers.Util.isArray(this.layer.url)){this.imgDiv.urls=this.layer.url.slice();}
this.imgDiv.className='olTileImage';this.frame.style.zIndex=1;this.frame.appendChild(this.imgDiv);this.frame.c=this.imgDiv;this.layer.div.appendChild(this.frame);if(this.layer.opacity!=null){OpenLayers.Util.modifyDOMElement(this.imgDiv,null,null,null,null,null,null,this.layer.opacity);}
this.imgDiv.map=this.layer.map;this.imgDiv.tile=this;var onload=function(){if(this.isLoading){this.isLoading=false;this.events.triggerEvent("loadend");}};if(this.layerAlphaHack){OpenLayers.Event.observe(this.imgDiv.childNodes[0],'load',OpenLayers.Function.bind(onload,this));}else{OpenLayers.Event.observe(this.imgDiv,'load',OpenLayers.Function.bind(onload,this));}
var onerror=function(){if(this.imgDiv._attempts>OpenLayers.IMAGE_RELOAD_ATTEMPTS){onload.call(this);}};OpenLayers.Event.observe(this.imgDiv,"error",OpenLayers.Function.bind(onerror,this));}
this.imgDiv.viewRequestID=this.layer.map.viewRequestID;},removeImgDiv:function(){OpenLayers.Event.stopObservingElement(this.imgDiv);if(this.imgDiv.parentNode==this.frame){this.frame.removeChild(this.imgDiv);this.imgDiv.map=null;}
this.imgDiv.urls=null;var child=this.imgDiv.firstChild;if(child){OpenLayers.Event.stopObservingElement(child);this.imgDiv.removeChild(child);delete child;}else{this.imgDiv.src=OpenLayers.Util.getImagesLocation()+"blank.gif";}},checkImgURL:function(){if(this.layer){var loaded=this.layerAlphaHack?this.imgDiv.firstChild.src:this.imgDiv.src;if(!OpenLayers.Util.isEquivalentUrl(loaded,this.url)){this.hide();}}},startTransition:function(){if(!this.backBufferTile||!this.backBufferTile.imgDiv){return;}
var ratio=1;if(this.backBufferTile.resolution){ratio=this.backBufferTile.resolution/this.layer.getResolution();}
if(ratio!=1){if(this.layer.transitionEffect=='resize'){var upperLeft=new OpenLayers.LonLat(this.backBufferTile.bounds.left,this.backBufferTile.bounds.top);var size=new OpenLayers.Size(this.backBufferTile.size.w*ratio,this.backBufferTile.size.h*ratio);var px=this.layer.map.getLayerPxFromLonLat(upperLeft);OpenLayers.Util.modifyDOMElement(this.backBufferTile.frame,null,px,size);var imageSize=this.backBufferTile.imageSize;imageSize=new OpenLayers.Size(imageSize.w*ratio,imageSize.h*ratio);var imageOffset=this.backBufferTile.imageOffset;if(imageOffset){imageOffset=new OpenLayers.Pixel(imageOffset.x*ratio,imageOffset.y*ratio);}
OpenLayers.Util.modifyDOMElement(this.backBufferTile.imgDiv,null,imageOffset,imageSize);this.backBufferTile.show();}}else{if(this.layer.singleTile){this.backBufferTile.show();}else{this.backBufferTile.hide();}}},show:function(){this.frame.style.display='';if(this.labelDiv)
this.labelDiv.style.display='';if(OpenLayers.Util.indexOf(this.layer.SUPPORTED_TRANSITIONS,this.layer.transitionEffect)!=-1){if(OpenLayers.IS_GECKO===true){this.frame.scrollLeft=this.frame.scrollLeft;}}},moveTo:function(bounds,position,redraw){if(redraw==null){redraw=true;}
this.bounds=bounds.clone();this.position=position.clone();if(redraw){this.draw();}},hide:function(){},CLASS_NAME:"gClient.Tile.Blank"});gClient.Tile.Canvas.useBlankTile=(OpenLayers.BROWSER_NAME=="safari"||OpenLayers.BROWSER_NAME=="opera");﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.PointTile=OpenLayers.Class(OpenLayers.Layer.XYZ,OpenLayers.Layer.Vector,{cache:false,maLopBanDo:'',maLopDuLieu:'',moTa:'',maBanDoChuyenDe:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'',maDichVu:'',trinhBayNangCao:null,duongDanAnh:'',laLopNen:false,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',url:[],featureIDs:null,attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",type:'txt',buffer:0,units:"m",projection:"EPSG:900913",sphericalMercator:true,tileOptions:null,whereClause:null,optionsPointTile:null,initialize:function(name,url,options){this.optionsPointTile=options;OpenLayers.Layer.XYZ.prototype.initialize.apply(this,arguments);OpenLayers.Layer.Vector.prototype.initialize.apply(this,arguments);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);if(options==undefined){options={};}
if(options.whereClause!=undefined){this.whereClause=options.whereClause;}
this.featureIDs={};if(options.maLopBanDo!=undefined)
this.maLopBanDo=options.maLopBanDo;if(options.maLopDuLieu!=undefined)
this.maLopDuLieu=options.maLopDuLieu;this.name=name;if(options.moTa!=undefined)
this.moTa=options.moTa;if(options.maBanDoChuyenDe!=undefined)
this.maBanDoChuyenDe=options.maBanDoChuyenDe;if(options.lopDuLieu!=undefined)
this.lopDuLieu=options.lopDuLieu;if(options.heQuyChieu!=undefined)
this.heQuyChieu=options.heQuyChieu;if(options.kieuKhongGian!=undefined)
this.kieuKhongGian=options.kieuKhongGian;if(options.maDichVu!=undefined)
this.maDichVu=options.maDichVu;if(options.trinhBayNangCao!=undefined)
this.trinhBayNangCao=options.trinhBayNangCao;if(options.duongDanAnh!=undefined)
this.duongDanAnh=options.duongDanAnh;if(options.laLopNen!=undefined)
this.isBaseLayer=options.laLopNen;if(options.hienThi!=undefined)
this.visibility=options.hienThi;if(options.nhom!=undefined)
this.nhom=options.nhom;if(options.duongDan!=undefined)
this.duongDan=options.duongDan;if(options.kieuTrinhBay!=undefined)
this.kieuTrinhBay=options.kieuTrinhBay;if(options.cauHinhHienThi!=undefined)
this.cauHinhHienThi=options.cauHinhHienThi;if(options.mucXemNhoNhat!=undefined)
this.mucXemNhoNhat=options.mucXemNhoNhat;if(options.mucXemLonNhat!=undefined)
this.mucXemLonNhat=options.mucXemLonNhat;if(options.vungBaoNhoNhat!=undefined)
this.vungBaoNhoNhat=options.vungBaoNhoNhat;if(options.vungBaoLonNhat!=undefined)
this.vungBaoLonNhat=options.vungBaoLonNhat;if(options.mucHienThi!=undefined)
this.mucHienThi=options.mucHienThi;if(options.cache!=undefined)
this.cache=options.cache;if(options.whereClause!=undefined)
this.whereClause=options.whereClause;},destroy:function(){this.clearGrid();OpenLayers.Layer.XYZ.prototype.destroy.apply(this,arguments);OpenLayers.Layer.Vector.prototype.destroy.apply(this,arguments);this.featureIDs=null;},clone:function(obj){if(obj==null){obj=new OpenLayers.Layer.PointTile(this.name,this.duongDan,this.getOptions());}},addTile:function(bounds,position){return new gClient.Tile.Point(this,position,bounds,null,this.tileSize,this.whereClause);},Refresh:function(){var tilesBounds=this.getTilesBounds();this.initGriddedTiles(tilesBounds);},moveTo:function(bounds,zoomChanged,dragging){if(zoomChanged){this.removeAllFeatures();}
OpenLayers.Layer.XYZ.prototype.moveTo.apply(this,arguments);OpenLayers.Layer.Vector.prototype.moveTo.apply(this,arguments);},toJson:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan.replaceAll("'","''");result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause.replaceAll("'","''");result.CLASS_NAME=this.CLASS_NAME;return result;},getLayerInfo:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.moTa=this.moTa;result.maBanDoChuyenDe=this.maBanDoChuyenDe;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan;result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.whereClause=this.whereClause;result.CLASS_NAME=this.CLASS_NAME;return result;},CLASS_NAME:"gClient.Layer.PointTile"});﻿
gClient.Tile=gClient.Tile||{};gClient.Tile.Point=OpenLayers.Class(OpenLayers.Tile,{features:null,url:null,request:null,whereClause:null,initialize:function(layer,position,bounds,url,size,whereClause){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.url=url;this.features=[];this.whereClause=whereClause;this.request=null;},destroy:function(){this.destroyAllFeatures();OpenLayers.Tile.prototype.destroy.apply(this,arguments);this.features=null;this.url=null;this.layer=null;},clear:function(){this.destroyAllFeatures();},draw:function(){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position);}
var maxExtent=this.layer.limitExtent;var withinMaxExtent=(maxExtent&&this.bounds.intersectsBounds(maxExtent,false));this.shouldDraw=(withinMaxExtent||this.layer.displayOutsideMaxExtent);this.clear();if(!this.shouldDraw){return false;}
if(this.isLoading){this.events.triggerEvent("reload");}else{this.isLoading=true;this.events.triggerEvent("loadstart");}
this.url=this.layer.getURL(this.bounds);this.loadFeaturesForRegion(this.requestSuccess,this.requestFailure);this.drawn=true;return true;},loadFeaturesForRegion:function(success,failure){var urlRequest="";if(this.request!=null){this.request.abort();this.request=null;}
urlRequest=this.url;this.request=$.jsonp({url:urlRequest,callbackParameter:"callback",obj:this,success:function(data,textStatus){success(this.obj,data,this.obj.request);},error:function(){}});},requestFailure:function(request){},requestSuccess1:function(obj,data){obj.clear();},requestSuccess:function(obj,data,request){var url;var WGS84=new OpenLayers.Projection("EPSG:4326");var EPSG900913=obj.layer.map.getProjectionObject();var format=new OpenLayers.Format.GeoJSON();var geojson=format.read(data);if(geojson!=null){if((geojson.length)>0){for(var i=0;i<geojson.length;i++){var geometry=geojson[i].geometry;geometry.transform(WGS84,EPSG900913);var feature=new OpenLayers.Feature.Vector(geometry,geojson[i].attributes);var gid=geojson[i].attributes["madoituong"];feature.fid=gid;obj.features.push(feature);}
if(obj.request!=request){console.log("===========");}
obj.layer.addFeatures(obj.features);}}
if(obj.events){obj.events.triggerEvent("loadend");}
obj.request=null;},destroyAllFeatures:function(){if(this.features.length>0){if(this.layer.features.length>0){this.layer.removeFeatures(this.features);}
for(var i=0;i<this.features.length;i++){this.features[i].destroy();}}
this.features=[];},CLASS_NAME:"gClient.Tile.Point"});﻿
gClient.RouteParameters=OpenLayers.Class({returnDirections:true,returnRoutes:true,returnStops:true,returnBarriers:false,stops:null,initialize:function(options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}},destroy:function(){},CLASS_NAME:"gClient.RouteParameters"});﻿
gClient.Layer=gClient.Layer||{};gClient.Layer.gServer=OpenLayers.Class(OpenLayers.Layer.XYZ,{maLopBanDo:'',maLopDuLieu:'',tenLopBanDo:'',moTa:'',maBanDo:'',lopDuLieu:'',heQuyChieu:'',kieuKhongGian:'IMAGE',maDichVu:'',trinhBayNangCao:'',thuTuHienThi:null,duongDanAnh:'',laLopNen:true,hienThi:true,nhom:'',duongDan:'',kieuTrinhBay:'',cauHinhHienThi:'',cauHinhNhan:'',mucXemNhoNhat:'',mucXemLonNhat:'',vungBaoNhoNhat:'',vungBaoLonNhat:'',mucHienThi:'',dieuKienLoc:'',cache:false,bieuDo:null,url:[],attribution:"Data by <a href='http://cloudgis.vn/'>gServer</a>",sphericalMercator:true,wrapDateLine:true,tileOptions:null,optionsGServer:null,initialize:function(name,url,options){this.optionsGServer=options;var minLevel;var maxLevel;var maxMapLevel;if(options==undefined){options={};minLevel=0;maxLevel=22;maxMapLevel=22;}else{minLevel=((options.mucXemNhoNhat==undefined||options.mucXemNhoNhat==null)?0:options.mucXemNhoNhat);maxLevel=((options.mucXemLonNhat==undefined||options.mucXemLonNhat==null)?22:options.mucXemLonNhat);if(options.laLopNen)
maxMapLevel=((options.mucXemBanDoLonNhat==undefined||options.mucXemBanDoLonNhat==null)?22:options.mucXemBanDoLonNhat);else{minLevel=0;maxMapLevel=22;maxLevel=22;}}
this.zoomOffset=minLevel;var arrayResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var arrayServerResolutions=[156543.03390625,78271.516953125,39135.7584765625,19567.87923828125,9783.939619140625,4891.9698095703125,2445.9849047851562,1222.9924523925781,611.4962261962891,305.74811309814453,152.87405654907226,76.43702827453613,38.218514137268066,19.109257068634033,9.554628534317017,4.777314267158508,2.388657133579254,1.194328566789627,0.5971642833948135,0.2985821416974068,0.1492910708487034,0.0746455354243517,0.03732276771217585];var resolutions=[];var serverResolutions=[];var j=0;for(var i=minLevel;i<maxMapLevel+1;i++){resolutions[j]=arrayResolutions[i];j++;}
j=0;for(var i=0;i<maxLevel+1;i++){serverResolutions[j]=arrayServerResolutions[i];j++;}
if(options.maLopBanDo!=undefined)
this.maLopBanDo=options.maLopBanDo;if(options.maLopDuLieu!=undefined)
this.maLopDuLieu=options.maLopDuLieu;this.name=name;this.tenLopBanDo=name;if(options.moTa!=undefined)
this.moTa=options.moTa;if(options.maBanDo!=undefined)
this.maBanDo=options.maBanDo;if(options.lopDuLieu!=undefined)
this.lopDuLieu=options.lopDuLieu;if(options.heQuyChieu!=undefined)
this.heQuyChieu=options.heQuyChieu;if(options.kieuKhongGian!=undefined)
this.kieuKhongGian=options.kieuKhongGian;if(options.maDichVu!=undefined)
this.maDichVu=options.maDichVu;if(options.trinhBayNangCao!=undefined)
this.trinhBayNangCao=options.trinhBayNangCao;if(options.duongDanAnh!=undefined)
this.duongDanAnh=options.duongDanAnh;if(options.laLopNen!=undefined){this.isBaseLayer=options.laLopNen;this.laLopNen=options.laLopNen;}
if(options.hienThi!=undefined){this.visibility=options.hienThi;this.hienThi=options.hienThi;}
if(options.thuTuHienThi!=undefined){this.thuTuHienThi=options.thuTuHienThi;}
if(options.nhom!=undefined)
this.nhom=options.nhom;this.duongDan=url;if(options.kieuTrinhBay!=undefined)
this.kieuTrinhBay=options.kieuTrinhBay;if(options.cauHinhHienThi!=undefined)
this.cauHinhHienThi=options.cauHinhHienThi;if(options.cauHinhNhan!=undefined)
this.cauHinhNhan=options.cauHinhNhan;if(options.mucXemNhoNhat!=undefined)
this.mucXemNhoNhat=options.mucXemNhoNhat;if(options.mucXemLonNhat!=undefined)
this.mucXemLonNhat=options.mucXemLonNhat;if(options.vungBaoNhoNhat!=undefined)
this.vungBaoNhoNhat=options.vungBaoNhoNhat;if(options.vungBaoLonNhat!=undefined)
this.vungBaoLonNhat=options.vungBaoLonNhat;if(options.mucHienThi!=undefined)
this.mucHienThi=options.mucHienThi;if(options.cache!=undefined)
this.cache=options.cache;if(options.bieuDo!=undefined)
this.bieuDo=options.bieuDo;options.resolutions=resolutions;options.serverResolutions=serverResolutions;options=OpenLayers.Util.extend({transitionEffect:'resize'},options);OpenLayers.Layer.XYZ.prototype.initialize.apply(this,[name,url,options]);this.tileOptions=OpenLayers.Util.extend({crossOriginKeyword:'anonymous'},this.options&&this.options.tileOptions);this.transitionEffect='resize';},clone:function(obj){if(obj==null){obj=new gClient.Layer.gServer(this.name,this.duongDan,this.getOptions());}
obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj;},toJson:function(){var result={};result.cache=this.cache;result.maLopBanDo=this.maLopBanDo;result.maLopDuLieu=this.maLopDuLieu;result.tenLopBanDo=this.name;result.thuTuHienThi=this.thuTuHienThi;result.moTa=this.moTa;result.maBanDo=this.maBanDo;result.lopDuLieu=this.lopDuLieu;result.heQuyChieu=this.heQuyChieu;result.kieuKhongGian=this.kieuKhongGian;result.maDichVu=this.maDichVu;result.trinhBayNangCao=this.trinhBayNangCao;result.duongDanAnh=this.duongDanAnh;result.laLopNen=this.isBaseLayer;result.hienThi=this.visibility;result.nhom=this.nhom;result.duongDan=this.duongDan.replace("'","''");result.kieuTrinhBay=this.kieuTrinhBay;result.cauHinhHienThi=this.cauHinhHienThi;result.cauHinhNhan=this.cauHinhNhan;result.mucXemNhoNhat=this.mucXemNhoNhat;result.mucXemLonNhat=this.mucXemLonNhat;result.vungBaoNhoNhat=this.vungBaoNhoNhat;result.vungBaoLonNhat=this.vungBaoLonNhat;result.mucHienThi=this.mucHienThi;result.CLASS_NAME=this.CLASS_NAME;return result;},CLASS_NAME:"gClient.Layer.gServer"});﻿
gClient.Control=gClient.Control||{};gClient.Control.BBOXPicker=OpenLayers.Class(OpenLayers.Control.DrawFeature,{transform:null,callback:null,initialize:function(layer,callback,options){options.handlerOptions={sides:4,snapAngle:90,irregular:true,persist:true};var handler=OpenLayers.Handler.RegularPolygon;var newArguments=[];newArguments.push(layer,handler,options);OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,newArguments);this.transform=new gClient.Control.TransformFeature(layer,{rotate:false,irregular:true,renderIntent:"transform"});this.transform.callback_transformComplete=callback;this.transform.events.register("transformcomplete",this.transform,this.transformComplete);this.handler.callbacks.done=this.endDrag;this.callback=callback;},endDrag:function(bbox){var bounds=bbox.getBounds();this.layer.removeAllFeatures();this.transform.unsetFeature();var feature=new OpenLayers.Feature.Vector(bounds.toGeometry());this.layer.addFeatures(feature);this.transform.setFeature(feature);this.deactivate();this.callback(bounds);},transformComplete:function(event){this.callback_transformComplete(event.feature.geometry.bounds);},setMap:function(map){OpenLayers.Control.DrawFeature.prototype.setMap.apply(this,arguments);map.addControl(this.transform);},CLASS_NAME:"gClient.Control.BBOXPicker"});﻿
gClient.Control=gClient.Control||{};gClient.Control.SmallPanZoom=OpenLayers.Class(OpenLayers.Control,{slideFactor:50,slideRatio:null,buttons:null,position:null,initialize:function(options){this.position=new OpenLayers.Pixel(gClient.Control.SmallPanZoom.X,gClient.Control.SmallPanZoom.Y);OpenLayers.Control.prototype.initialize.apply(this,arguments);},destroy:function(){this.removeButtons();this.buttons=null;this.position=null;OpenLayers.Control.prototype.destroy.apply(this,arguments);},draw:function(px){OpenLayers.Control.prototype.draw.apply(this,arguments);var div=document.createElement('div');div.className="ol-control-mini ol-w-mini";this.div.appendChild(div);this._addButton1(div,"panup","bt-top-mini");this._addButton1(div,"panright","bt-right-mini");this._addButton1(div,"pandown","bt-bottom-mini");this._addButton1(div,"panleft","bt-left-mini");this._addButton1(div,"zoomworld","bt-center-mini");this._addButton1(div,"zoomin","bt-zoomout-mini");div=document.createElement('div');div.className="ol-control-bottom-mini ol-w-mini ol-bg-control-bottom-mini";this.div.appendChild(div);this._addButton1(div,"zoomout","bt-zoomin");return this.div;},_addButton:function(id,img,xy,sz){var imgLocation=OpenLayers.Util.getImagesLocation()+img;var btn=OpenLayers.Util.createAlphaImageDiv(this.id+"_"+id,xy,sz,imgLocation,"absolute");btn.style.cursor="pointer";this.div.appendChild(btn);OpenLayers.Event.observe(btn,"mousedown",OpenLayers.Function.bindAsEventListener(this.buttonDown,btn));OpenLayers.Event.observe(btn,"dblclick",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));OpenLayers.Event.observe(btn,"click",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));btn.action=id;btn.map=this.map;if(!this.slideRatio){var slideFactorPixels=this.slideFactor;var getSlideFactor=function(){return slideFactorPixels;};}else{var slideRatio=this.slideRatio;var getSlideFactor=function(dim){return this.map.getSize()[dim]*slideRatio;};}
btn.getSlideFactor=getSlideFactor;this.buttons.push(btn);return btn;},_addButton1:function(div,id,btnclass){var a=document.createElement('a');var btn=document.createElement('div');btn.className=btnclass;btn.id=id;a.appendChild(btn);div.appendChild(a);OpenLayers.Event.observe(btn,"mousedown",OpenLayers.Function.bindAsEventListener(this.buttonDown,btn));OpenLayers.Event.observe(btn,"dblclick",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));OpenLayers.Event.observe(btn,"click",OpenLayers.Function.bindAsEventListener(this.doubleClick,btn));btn.action=id;btn.map=this.map;if(!this.slideRatio){var slideFactorPixels=this.slideFactor;var getSlideFactor=function(){return slideFactorPixels;};}else{var slideRatio=this.slideRatio;var getSlideFactor=function(dim){return this.map.getSize()[dim]*slideRatio;};}
btn.getSlideFactor=getSlideFactor;return btn;},_removeButton:function(btn){OpenLayers.Event.stopObservingElement(btn);btn.map=null;btn.getSlideFactor=null;this.div.removeChild(btn);OpenLayers.Util.removeItem(this.buttons,btn);},removeButtons:function(){for(var i=this.buttons.length-1;i>=0;--i){this._removeButton(this.buttons[i]);}},doubleClick:function(evt){OpenLayers.Event.stop(evt);return false;},buttonDown:function(evt){if(!OpenLayers.Event.isLeftClick(evt)){return;}
switch(this.action){case"panup":this.map.pan(0,-this.getSlideFactor("h"));break;case"pandown":this.map.pan(0,this.getSlideFactor("h"));break;case"panleft":this.map.pan(-this.getSlideFactor("w"),0);break;case"panright":this.map.pan(this.getSlideFactor("w"),0);break;case"zoomin":this.map.zoomIn();break;case"zoomout":this.map.zoomOut();break;case"zoomworld":this.map.zoomToMaxExtent();break;}
OpenLayers.Event.stop(evt);},CLASS_NAME:"gClient.Control.PanZoom"});gClient.Control.SmallPanZoom.X=10;gClient.Control.SmallPanZoom.Y=10;﻿
gClient.Control=gClient.Control||{};gClient.Control.TransformFeature=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["beforesetfeature","setfeature","beforetransform","transform","transformcomplete"],geometryTypes:null,layer:null,irregular:false,preserveAspectRatio:false,rotate:true,feature:null,renderIntent:"temporary",rotationHandleSymbolizer:null,box:null,center:null,scale:1,ratio:1,rotation:0,handles:null,rotationHandles:null,dragControl:null,initialize:function(layer,options){OpenLayers.Control.prototype.initialize.apply(this,[options]);this.layer=layer;if(!this.rotationHandleSymbolizer){this.rotationHandleSymbolizer={stroke:false,pointRadius:10,fillOpacity:0,cursor:"pointer"};}
this.createBox();this.createControl();},activate:function(){var activated=false;if(OpenLayers.Control.prototype.activate.apply(this,arguments)){this.dragControl.activate();this.layer.addFeatures([this.box]);this.rotate&&this.layer.addFeatures(this.rotationHandles);this.layer.addFeatures(this.handles);activated=true;}
return activated;},deactivate:function(){var deactivated=false;if(OpenLayers.Control.prototype.deactivate.apply(this,arguments)){this.layer.removeFeatures(this.handles);this.rotate&&this.layer.removeFeatures(this.rotationHandles);this.layer.removeFeatures([this.box]);this.dragControl.deactivate();deactivated=true;}
if(deactivated){this.unsetFeature();}
return deactivated;},setMap:function(map){this.dragControl.setMap(map);OpenLayers.Control.prototype.setMap.apply(this,arguments);},setFeature:function(feature,initialParams){initialParams=OpenLayers.Util.applyDefaults(initialParams,{rotation:0,scale:1,ratio:1});var oldRotation=this.rotation;var oldCenter=this.center;OpenLayers.Util.extend(this,initialParams);var cont=this.events.triggerEvent("beforesetfeature",{feature:feature});if(cont===false){return;}
this.feature=feature;this.activate();this._setfeature=true;var featureBounds=this.feature.geometry.getBounds();this.box.move(featureBounds.getCenterLonLat());this.box.geometry.rotate(-oldRotation,oldCenter);this._angle=0;var ll;if(this.rotation){var geom=feature.geometry.clone();geom.rotate(-this.rotation,this.center);var box=new OpenLayers.Feature.Vector(geom.getBounds().toGeometry());box.geometry.rotate(this.rotation,this.center);this.box.geometry.rotate(this.rotation,this.center);this.box.move(box.geometry.getBounds().getCenterLonLat());var llGeom=box.geometry.components[0].components[0];ll=llGeom.getBounds().getCenterLonLat();}else{ll=new OpenLayers.LonLat(featureBounds.left,featureBounds.bottom);}
this.handles[0].move(ll);delete this._setfeature;this.events.triggerEvent("setfeature",{feature:feature});},unsetFeature:function(){if(this.active){this.deactivate();}else{this.feature=null;this.rotation=0;this.scale=1;this.ratio=1;}},createBox:function(){var control=this;this.center=new OpenLayers.Geometry.Point(0,0);var box=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-1,-1),new OpenLayers.Geometry.Point(0,-1),new OpenLayers.Geometry.Point(1,-1),new OpenLayers.Geometry.Point(1,0),new OpenLayers.Geometry.Point(1,1),new OpenLayers.Geometry.Point(0,1),new OpenLayers.Geometry.Point(-1,1),new OpenLayers.Geometry.Point(-1,0),new OpenLayers.Geometry.Point(-1,-1)]),null,typeof this.renderIntent=="string"?null:this.renderIntent);box.geometry.move=function(x,y){control._moving=true;OpenLayers.Geometry.LineString.prototype.move.apply(this,arguments);control.center.move(x,y);delete control._moving;};var vertexMoveFn=function(x,y){OpenLayers.Geometry.Point.prototype.move.apply(this,arguments);this._rotationHandle&&this._rotationHandle.geometry.move(x,y);this._handle.geometry.move(x,y);};var vertexResizeFn=function(scale,center,ratio){OpenLayers.Geometry.Point.prototype.resize.apply(this,arguments);this._rotationHandle&&this._rotationHandle.geometry.resize(scale,center,ratio);this._handle.geometry.resize(scale,center,ratio);};var vertexRotateFn=function(angle,center){OpenLayers.Geometry.Point.prototype.rotate.apply(this,arguments);this._rotationHandle&&this._rotationHandle.geometry.rotate(angle,center);this._handle.geometry.rotate(angle,center);};var handleMoveFn=function(x,y){var oldX=this.x,oldY=this.y;OpenLayers.Geometry.Point.prototype.move.call(this,x,y);if(control._moving){return;}
var evt=control.dragControl.handlers.drag.evt;var preserveAspectRatio=!control._setfeature&&control.preserveAspectRatio;var reshape=!preserveAspectRatio&&!(evt&&evt.shiftKey);var oldGeom=new OpenLayers.Geometry.Point(oldX,oldY);var centerGeometry=control.center;this.rotate(-control.rotation,centerGeometry);oldGeom.rotate(-control.rotation,centerGeometry);var dx1=this.x-centerGeometry.x;var dy1=this.y-centerGeometry.y;var dx0=dx1-(this.x-oldGeom.x);var dy0=dy1-(this.y-oldGeom.y);if(control.irregular&&!control._setfeature){dx1-=(this.x-oldGeom.x)/2;dy1-=(this.y-oldGeom.y)/2;}
this.x=oldX;this.y=oldY;var scale,ratio=1;if(reshape){scale=Math.abs(dy0)<0.00001?1:dy1/dy0;ratio=(Math.abs(dx0)<0.00001?1:(dx1/dx0))/scale;}else{var l0=Math.sqrt((dx0*dx0)+(dy0*dy0));var l1=Math.sqrt((dx1*dx1)+(dy1*dy1));scale=l1/l0;}
control._moving=true;control.box.geometry.rotate(-control.rotation,centerGeometry);delete control._moving;control.box.geometry.resize(scale,centerGeometry,ratio);control.box.geometry.rotate(control.rotation,centerGeometry);control.transformFeature({scale:scale,ratio:ratio});if(control.irregular&&!control._setfeature){var newCenter=centerGeometry.clone();newCenter.x+=Math.abs(oldX-centerGeometry.x)<0.00001?0:(this.x-oldX);newCenter.y+=Math.abs(oldY-centerGeometry.y)<0.00001?0:(this.y-oldY);control.box.geometry.move(this.x-oldX,this.y-oldY);control.transformFeature({center:newCenter});}};var rotationHandleMoveFn=function(x,y){var oldX=this.x,oldY=this.y;OpenLayers.Geometry.Point.prototype.move.call(this,x,y);if(control._moving){return;}
var evt=control.dragControl.handlers.drag.evt;var constrain=(evt&&evt.shiftKey)?45:1;var centerGeometry=control.center;var dx1=this.x-centerGeometry.x;var dy1=this.y-centerGeometry.y;var dx0=dx1-x;var dy0=dy1-y;this.x=oldX;this.y=oldY;var a0=Math.atan2(dy0,dx0);var a1=Math.atan2(dy1,dx1);var angle=a1-a0;angle*=180/Math.PI;control._angle=(control._angle+angle)%360;var diff=control.rotation%constrain;if(Math.abs(control._angle)>=constrain||diff!==0){angle=Math.round(control._angle/constrain)*constrain-
diff;control._angle=0;control.box.geometry.rotate(angle,centerGeometry);control.transformFeature({rotation:angle});}};var handles=new Array(8);var rotationHandles=new Array(4);var geom,handle,rotationHandle;for(var i=0;i<8;++i){geom=box.geometry.components[i];handle=new OpenLayers.Feature.Vector(geom.clone(),null,typeof this.renderIntent=="string"?null:this.renderIntent);if(i%2==0){rotationHandle=new OpenLayers.Feature.Vector(geom.clone(),null,typeof this.rotationHandleSymbolizer=="string"?null:this.rotationHandleSymbolizer);rotationHandle.geometry.move=rotationHandleMoveFn;geom._rotationHandle=rotationHandle;rotationHandles[i/2]=rotationHandle;}
geom.move=vertexMoveFn;geom.resize=vertexResizeFn;geom.rotate=vertexRotateFn;handle.geometry.move=handleMoveFn;geom._handle=handle;handles[i]=handle;}
this.box=box;this.rotationHandles=rotationHandles;this.handles=handles;},createControl:function(){var control=this;this.dragControl=new OpenLayers.Control.DragFeature(this.layer,{documentDrag:true,moveFeature:function(pixel){if(this.feature===control.feature){this.feature=control.box;}
OpenLayers.Control.DragFeature.prototype.moveFeature.apply(this,arguments);},onDrag:function(feature,pixel){if(feature===control.box){control.transformFeature({center:control.center});control.drawHandles();}},onStart:function(feature,pixel){var eligible=!control.geometryTypes||OpenLayers.Util.indexOf(control.geometryTypes,feature.geometry.CLASS_NAME)!==-1;var i=OpenLayers.Util.indexOf(control.handles,feature);i+=OpenLayers.Util.indexOf(control.rotationHandles,feature);if(feature!==control.feature&&feature!==control.box&&i==-2&&eligible){control.setFeature(feature);}},onComplete:function(feature,pixel){control.events.triggerEvent("transformcomplete",{feature:control.feature});}});},drawHandles:function(){var layer=this.layer;for(var i=0;i<8;++i){if(this.rotate&&i%2===0){layer.drawFeature(this.rotationHandles[i/2],this.rotationHandleSymbolizer);}
layer.drawFeature(this.handles[i],this.renderIntent);}},transformFeature:function(mods){if(!this._setfeature){this.scale*=(mods.scale||1);this.ratio*=(mods.ratio||1);var oldRotation=this.rotation;this.rotation=(this.rotation+(mods.rotation||0))%360;if(this.events.triggerEvent("beforetransform",mods)!==false){var feature=this.feature;var geom=feature.geometry;var center=this.center;geom.rotate(-oldRotation,center);if(mods.scale||mods.ratio){geom.resize(mods.scale,center,mods.ratio);}else if(mods.center){feature.move(mods.center.getBounds().getCenterLonLat());}
geom.rotate(this.rotation,center);this.layer.drawFeature(feature);feature.toState(OpenLayers.State.UPDATE);this.events.triggerEvent("transform",mods);}}
this.layer.drawFeature(this.box,this.renderIntent);this.drawHandles();},destroy:function(){var geom;for(var i=0;i<8;++i){geom=this.box.geometry.components[i];geom._handle.destroy();geom._handle=null;geom._rotationHandle&&geom._rotationHandle.destroy();geom._rotationHandle=null;}
this.box.destroy();this.box=null;this.layer=null;this.dragControl.destroy();OpenLayers.Control.prototype.destroy.apply(this,arguments);},CLASS_NAME:"gClient.Control.TransformFeature"});﻿
gClient.Control=gClient.Control||{};gClient.Control.DrawFeatureOpt=OpenLayers.Class(OpenLayers.Control.DrawFeature,{handlers:null,initialize:function(layer,handler,options){OpenLayers.Control.DrawFeature.prototype.initialize.apply(this,[layer,handler,options]);var keyboardOptions={keydown:this.handleKeypress};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,keyboardOptions)};},handleKeypress:function(evt){var code=evt.keyCode;if(this.handler.drawing){if(code===27){var index=this.handler.line.geometry.components.length-2;this.handler.line.geometry.removeComponent(this.handler.line.geometry.components[index]);this.handler.finalize();}
if(code===46){var index=this.handler.line.geometry.components.length-3;this.handler.line.geometry.removeComponent(this.handler.line.geometry.components[index]);this.handler.drawFeature();}}
return true;},activate:function(){return this.handlers.keyboard.activate()&&OpenLayers.Control.DrawFeature.prototype.activate.apply(this,arguments);},deactivate:function(){var deactivated=false;if(OpenLayers.Control.DrawFeature.prototype.deactivate.apply(this,arguments)){this.handlers.keyboard.deactivate();deactivated=true;}
return deactivated;},CLASS_NAME:"gClient.Control.DrawFeatureOpt"});﻿
gClient.Tile=gClient.Tile||{};gClient.Tile.POITile=OpenLayers.Class(OpenLayers.Tile,{features:null,url:null,cat:null,subcat:null,initialize:function(layer,position,bounds,url,size,cat,subcat){OpenLayers.Tile.prototype.initialize.apply(this,arguments);this.url=url;this.cat=cat;this.subcat=subcat;this.features=[];},destroy:function(){this.destroyAllFeatures();this.features=null;this.url=null;},clear:function(){this.destroyAllFeatures();},draw:function(){if(this.layer!=this.layer.map.baseLayer&&this.layer.reproject){this.bounds=this.getBoundsFromBaseLayer(this.position);}
if(!OpenLayers.Tile.prototype.draw.apply(this,arguments)){return false;}
if(this.isLoading){this.events.triggerEvent("reload");}else{this.isLoading=true;this.events.triggerEvent("loadstart");}
this.url=this.layer.getURL(this.bounds);this.loadFeaturesForRegion(this.requestSuccess,this.requestFailure);this.drawn=true;return true;},loadFeaturesForRegion:function(success,failure){var urlRequest="";var cat_query;var sub_query;if(this.cat!=null){cat_query="?cat="+this.cat;if(this.subcat!=null){sub_query="&subcat="+this.subcat;}else{sub_query='';}
urlRequest=this.url+cat_query+sub_query;}else{if(this.subcat!=null){sub_query="?subcat="+this.subcat;}else{sub_query='';}
urlRequest=this.url+sub_query;}
jQuery.ajax({dataType:'jsonp',url:urlRequest,cache:false,obj:this,success:function(data){success(this.obj,data);},error:function(){alert("error");}});},requestFailure:function(request){},requestSuccess1:function(obj,data){obj.clear();},requestSuccess:function(obj,request){obj.clear();var columns;var mylocation,title,url;var icon,iconSize,iconOffset,popupSize,overflow;var format=new OpenLayers.Format.GeoJSON();var host=gClient.HOST;if((format.read(request).length)>0){for(var i=0;i<format.read(request).length;i++){mylocation=new OpenLayers.LonLat(0,0);iconSize=new OpenLayers.Size(16,16);iconOffset=new OpenLayers.Pixel(0,0);popupSize=null;var point=format.read(request)[i].geometry;var set=true;mylocation.lon=point.x;mylocation.lat=point.y;iconSize=new OpenLayers.Size(12,12);iconOffset=new OpenLayers.Pixel(6,6);if(set){var data={};var WGS84=new OpenLayers.Projection("EPSG:4326");var EPSG900913=new OpenLayers.Projection("EPSG:900913");mylocation.transform(WGS84,obj.layer.map.getProjectionObject());url=host+"img/marker/icons/"+format.read(request)[i].attributes["category_id"]+format.read(request)[i].attributes["subcategory_id"]+".png";if(url!=null){data.icon=new OpenLayers.Icon(url,iconSize,iconOffset);}else{data.icon=OpenLayers.Marker.defaultIcon();}
if((title!=null)&&(description!=null)){data['popupContentHTML']='<b>'+title+'</b><br/>'+description;}
popupSize=new OpenLayers.Size(100,100);if(popupSize!=null){data.popupSize=popupSize;}
var feature=new OpenLayers.Feature(obj.layer,mylocation,data);obj.features.push(feature);var marker=feature.createMarker();if((title!=null)&&(description!=null)){marker.events.register('click',feature,obj.markerClick);}
obj.layer.addMarker(marker);}}}
if(obj.events){obj.events.triggerEvent("loadend");}},markerClick:function(evt){alert('click marker !!!');sameMarkerClicked=(this==this.layer.selectedFeature);this.layer.selectedFeature=(!sameMarkerClicked)?this:null;for(var i=0;i<this.layer.map.popups.length;i++){this.layer.map.removePopup(this.layer.map.popups[i]);}
this.layer.map.addPopup(this.createPopup());OpenLayers.Event.stop(evt);},destroyAllFeatures:function(){if(this.features){while(this.features.length>0){var feature=this.features.shift();if(feature.marker!=null)
if(this.layer!=null)
this.layer.removeMarker(feature.marker);feature.destroy();}}
this.features=[];},CLASS_NAME:"OpenLayers.Tile.MarkerTile"});﻿gClient.gMeasure_idoutput=null;(function($){var methods={init:function(options){},distanceArea:function(options){var color=((options.color==undefined||options.color==null)?"red":options.color);var widthLine=((options.widthLine==undefined||options.widthLine==null)?2:options.widthLine);var widthPolygon=((options.widthPolygon==undefined||options.widthPolygon==null)?2:options.widthPolygon);var sketchSymbolizers={"Point":{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:0.7,strokeWidth:1,strokeOpacity:1,strokeColor:color},"Line":{strokeWidth:widthLine,strokeOpacity:0.7,strokeColor:color,strokeDashstyle:"dash"},"Polygon":{strokeWidth:widthPolygon,strokeOpacity:1,strokeColor:color,fillColor:"white",fillOpacity:0.3}};var style=new OpenLayers.Style();style.addRules([new OpenLayers.Rule({symbolizer:sketchSymbolizers})]);var styleMap=new OpenLayers.StyleMap({"default":style});var renderer=OpenLayers.Util.getParameters(window.location.href).renderer;renderer=(renderer)?[renderer]:OpenLayers.Layer.Vector.prototype.renderers;measureControls={line:new OpenLayers.Control.Measure(OpenLayers.Handler.Path,{persist:true,handlerOptions:{layerOptions:{renderers:renderer,styleMap:styleMap}}}),polygon:new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,{persist:true,handlerOptions:{layerOptions:{renderers:renderer,styleMap:styleMap}}})};var control;var fnCallback=((options.callback==undefined||options.callback==null)?fnGMeasureHandleMeasurements:options.callback);for(var key in measureControls){control=measureControls[key];control.events.on({"measure":fnCallback,"measurepartial":fnCallback});options.map.addControl(control);}
var outPut;if(options.output==undefined||options.output==null){outPut='<span id="gMeasure_idOutPut"></span>';gClient.gMeasure_idoutput="gMeasure_idOutPut";}else{outPut='';gClient.gMeasure_idoutput=options.output;}
var html=outPut+'<ul class="gMeasureControlToggle">'+'<li class="gMeasureNoneToggle">'+'<input type="radio" name="type" value="none" id="noneToggle"'+'onclick="toggleControl(this);" checked="checked" />'+'<label for="noneToggle">Điều hướng</label>'+'</li>'+'<li class="gMeasureLineToggle">'+'<input type="radio" name="type" value="line" id="lineToggle" onclick="toggleControl(this);" />'+'<label for="lineToggle">Chiều dài</label>'+'</li>'+'<li class="gMeasurePolygonToggle">'+'<input type="radio" name="type" value="polygon" id="polygonToggle" onclick="toggleControl(this);" />'+'<label for="polygonToggle">Diện tích</label>'+'</li>'+'</ul>';$(this).html(html);},distance:function(options){},area:function(options){}};$.fn.gMeasure=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong plugin gMeasure');}};})(jQuery);function fnGMeasureHandleMeasurements(event){var geometry=event.geometry;var units=event.units;var order=event.order;var measure=event.measure;var out="";if(order==1){out+="Khoảng cách: "+measure.toFixed(3)+" "+units;}else{out+="Diện tích: "+measure.toFixed(3)+" "+units+"<sup>2</"+"sup>";}
$("#"+gClient.gMeasure_idoutput).html(out)}
function toggleControl(element){for(key in measureControls){var control=measureControls[key];if(element.value==key&&element.checked){control.activate();}else{control.deactivate();}}}
﻿
gClient.Maps=[];(function($){$.fn.Map=function(server,mapIds,options){var vnBounds=new OpenLayers.Bounds(102.06723935844,8.3449739956849,109.54867032767,23.26804108858);var maxBounds=new OpenLayers.Bounds(-180,-90,180,90);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");vnBounds.transform(EPSG_4326,EPSG_900913);var optionsMap={maxExtent:maxBounds,projection:EPSG_900913,displayProjection:EPSG_4326,units:'m',controls:[new OpenLayers.Control.Navigation({dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.ArgParser(),new OpenLayers.Control.MousePosition()]};var map=new gClient.Map($(this).attr('id'),optionsMap);gClient.Maps[$(this).attr('id')]=map;var baseMap;function fnConvertNameIdToNameLayer(nameId){if(nameId=="vietbando"){nameId="Việt bản đồ";}
else if(nameId=="googleMap"){nameId="Google map";}
else if(nameId=="bing"){nameId="Bing map";}
else if(nameId=="osm"){nameId="Open street map";}
else if(nameId=="AdministrativeMap"){nameId="Bản đồ hành chính";}
else if(nameId=="PhysicalMap"){nameId="Địa hình";}
else if(nameId=="RoadMap"){nameId="Bản đồ";}
else if(nameId=="ShadedReliefMap"){nameId="Bản đồ dáng địa hình";}
else if(nameId=="TerrainMap"){nameId="Bản đồ địa mạo";}
else if(nameId=="TopographicMap"){nameId="Bản đồ địa hình";}
return nameId;}
if(options==undefined||options==null)options={};if(mapIds==null){baseMap=new gClient.Layer.gServer(fnConvertNameIdToNameLayer(mapid),server+'/tile/${z}/${x}/${y}.png',{minLevel:((options.minLevel==undefined||options.minLevel==null)?0:options.minLevel),maxLevel:((options.maxLevel==undefined||options.maxLevel==null)?17:options.maxLevel)});map.addLayer(baseMap);}
else{if(server instanceof Array){for(var i=0;i<mapIds.length;i++){var mapid=mapIds[i];var listBase=[];for(var j=0;j<server.length;j++){var baseTemp=server[j]+'/'+mapid+'/tile/${z}/${x}/${y}.png';listBase.push(baseTemp);}
baseMap=new gClient.Layer.gServer(fnConvertNameIdToNameLayer(mapid),listBase,{minLevel:((options.minLevel==undefined||options.minLevel==null)?0:options.minLevel),maxLevel:((options.maxLevel==undefined||options.maxLevel==null)?17:options.maxLevel)});map.addLayer(baseMap);}}
else{for(var i=0;i<mapIds.length;i++){var mapid=mapIds[i];baseMap=new gClient.Layer.gServer(fnConvertNameIdToNameLayer(mapid),server+'/'+mapid+'/tile/${z}/${x}/${y}.png',{minLevel:((options.minLevel==undefined||options.minLevel==null)?0:options.minLevel),maxLevel:((options.maxLevel==undefined||options.maxLevel==null)?17:options.maxLevel)});map.addLayer(baseMap);}}}
var typeMap="simple";if(options.type){typeMap=options.type;}
map.mapByType(typeMap);if(!map.getCenter()){map.zoomToExtent(vnBounds);}
return map;};$.fn.XYZMap=function(server,name,options){var vnBounds=new OpenLayers.Bounds(102.06723935844,8.3449739956849,109.54867032767,23.26804108858);var maxBounds=new OpenLayers.Bounds(-180,-90,180,90);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");if(options==undefined||options==null)options={};var optionsMap={maxExtent:maxBounds,projection:EPSG_900913,displayProjection:EPSG_4326,units:'m',transitionEffect:'resize',controls:[],w:(options.w?options.w:30),h:(options.h?options.h:30)};var map=new gClient.Map($(this).attr('id'),optionsMap);gClient.Maps[$(this).attr('id')]=map;var baseMap;baseMap=new gClient.Layer.gServer(name,server+'/${z}/${x}/${y}.png',{minLevel:((options.minLevel==undefined||options.minLevel==null)?0:options.minLevel),maxLevel:((options.maxLevel==undefined||options.maxLevel==null)?18:options.maxLevel)});map.addLayer(baseMap);var controls=[new OpenLayers.Control.LayerSwitcher(),new OpenLayers.Control.PanZoomBar(),new OpenLayers.Control.Scale(),new OpenLayers.Control.Navigation(),new OpenLayers.Control.MousePosition()];map.addControls(controls);map.zoomToExtent(vnBounds.transform(EPSG_4326,map.getProjectionObject()));return map;};$.fn.WMSMap=function(server,name,options){var vnBounds=new OpenLayers.Bounds(102.06723935844,8.3449739956849,109.54867032767,23.26804108858);var maxBounds=new OpenLayers.Bounds(-180,-90,180,90);var optionsMap={maxResolution:10.18748046875,projection:"EPSG:2093",units:'m',maxExtent:maxBounds,controls:[]};var map=new OpenLayers.Map($(this).attr('id'),optionsMap);var baseMap;if(options==undefined||options==null)options={};baseMap=new OpenLayers.Layer.WMS(name,server,{layers:"vietnam",version:"1.3.0",crs:"wgs84",Format:"image/png"});map.addLayer(baseMap);var controls=[new OpenLayers.Control.Navigation()];map.addControls(controls);map.zoomToExtent(vnBounds);return map;};$.fn.gMapTaiBanDoChuyenDe=function(map,input,onload){function requestSuccess(data,obj){var vnBounds=new OpenLayers.Bounds(102.06723935844,8.3449739956849,109.54867032767,23.26804108858);var maxBounds=new OpenLayers.Bounds(-180,-90,180,90);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");vnBounds.transform(EPSG_4326,EPSG_900913);var optionsMap={maxExtent:maxBounds,projection:EPSG_900913,displayProjection:EPSG_4326,units:'m',controls:[new OpenLayers.Control.Navigation({dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.ArgParser(),new OpenLayers.Control.MousePosition()]};var baseMap;var baseLayer=data.baseLayer;var layerChongXep=data.overlayLayer;var extent=data.extent;for(var i=0;i<baseLayer.length;i++){var options=baseLayer[i].options;baseMap=new gClient.Layer.gServer(baseLayer[i].name,baseLayer[i].url,options);map.addLayer(baseMap);}
var typeMap=data.typeMap;map.mapByType("demo");if(layerChongXep!=undefined){for(var i=0;i<layerChongXep.length;i++){var layer=layerChongXep[i];var class_name=layerChongXep[i].CLASS_NAME;var url=layer.url;var name=layer.name;var style=layer.styleMap;var layerTem=null;var defaultStyle=style.styles['default'].defaultStyle;var propertyStyles=style.styles['default'].propertyStyles;var styleMap=new OpenLayers.Style(defaultStyle);var rules=style.styles['default'].rules;var rules_convert=[];for(var j=0;j<rules.length;j++){var rule_tem=new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison(rules[j].filter),symbolizer:rules[j].symbolizer});rules_convert.push(rule_tem);}
styleMap.addRules(rules_convert);if(class_name=="gClient.Layer.PointTile"){layerTem=new gClient.Layer.PointTile(name,url,{styleMap:styleMap});map.addLayer(layerTem);}
else if(class_name=="gClient.Layer.VectorTile"){layerTem=new gClient.Layer.PointTile(name,url,{styleMap:styleMap});map.addLayer(layerTem);}
else if(class_name=="gClient.Layer.Choropleth"){layerTem=new gClient.Layer.Choropleth(name,url,{styleMap:styleMap});map.addLayer(layerTem);}}}
var boundsExtent=new OpenLayers.Bounds(extent.left,extent.bottom,extent.right,extent.top);map.zoomToExtent(boundsExtent);gClient.Maps[$(obj).attr('id')]=map;return map;}
var obj=this;function onloadDefault(){}
if(onload==undefined||onload==null){onload=onloadDefault;}
var typeofInput=typeof(input);if(typeofInput=='string'){jQuery.ajax({dataType:'json',url:input,success:function(data){var object=data.mapconfig;requestSuccess(object,obj);},complete:onload,error:function(){alert("error get url :"+input);}});}};$.fn.gMapLoadMap=function(map,input){function requestSuccess(data,obj){var vnBounds=new OpenLayers.Bounds(102.06723935844,8.3449739956849,109.54867032767,23.26804108858);var maxBounds=new OpenLayers.Bounds(-180,-90,180,90);var EPSG_900913=new OpenLayers.Projection("EPSG:900913");var EPSG_4326=new OpenLayers.Projection("EPSG:4326");vnBounds.transform(EPSG_4326,EPSG_900913);var optionsMap={maxExtent:maxBounds,projection:EPSG_900913,displayProjection:EPSG_4326,units:'m',controls:[new OpenLayers.Control.Navigation({dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.ArgParser(),new OpenLayers.Control.MousePosition()]};var baseMap;var baseLayer=data.baseLayer;var layerChongXep=data.overlayLayer;var extent=data.extent;for(var i=0;i<baseLayer.length;i++){var options=baseLayer[i].options;baseMap=new gClient.Layer.gServer(baseLayer[i].name,baseLayer[i].url,options);map.addLayer(baseMap);}
var typeMap=data.typeMap;map.mapByType("demo");if(layerChongXep!=undefined){for(var i=0;i<layerChongXep.length;i++){var class_name=layerChongXep[i].CLASS_NAME;var url=layerChongXep[i].url;var name=layerChongXep[i].name;var style=layerChongXep[i].styleMap;var layerTem=null;var defaultStyle=style.defaultStyle;var propertyStyles=style.propertyStyles;var styleMap=new OpenLayers.Style(defaultStyle);var rules=style.rules;var rules_convert=[];for(var j=0;j<rules.length;j++){var rule_tem=new OpenLayers.Rule({filter:new OpenLayers.Filter.Comparison(rules[j].filter),symbolizer:rules[j].symbolizer});rules_convert.push(rule_tem);}
styleMap.addRules(rules_convert);if(class_name=="gClient.Layer.PointTile"){layerTem=new gClient.Layer.PointTile(name,url,{styleMap:styleMap});map.addLayer(layerTem);}
else if(class_name=="gClient.Layer.VectorTile"){layerTem=new gClient.Layer.PointTile(name,url,{styleMap:styleMap});map.addLayer(layerTem);}}}
var boundsExtent=new OpenLayers.Bounds(extent.bottom,extent.left,extent.right,extent.top);map.zoomToExtent(boundsExtent);gClient.Maps[$(obj).attr('id')]=map;return map;}
var obj=this;var typeofInput=typeof(input);if(typeofInput=='string'){jQuery.ajax({dataType:'jsonp',url:input,success:function(data){var object=data.cauHinh;var _data=JSON.parse(object);requestSuccess(_data,obj);},error:function(){alert("error get url :"+input);}});}
else requestSuccess(input,this);};})(jQuery);﻿
gClient.AddressResult=OpenLayers.Class({listAddress:null,initialize:function(){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
this.listAddress=[];},CLASS_NAME:"gClient.AddressResult"});﻿
gClient.GeoFinder.ArcGISProvider=OpenLayers.Class(gClient.GeoService.Provider,{initialize:function(serviceName,serviceUrl,serviceApiKey,options){if(this.id==null){this.id=OpenLayers.Util.createUniqueID(this.CLASS_NAME+"_");}
gClient.GeoService.Provider.prototype.initialize.apply(this,arguments);},destroy:function(){},convertResponse:function(response){var findResult=response.features;return findResult;},createRequest:function(requestParams){var ring="";if(requestParams.geometry!=null&&requestParams.radius!=null){var polygon=this.genPolygonFromGeo(requestParams.geometry,requestParams.radius);ring=this.convertPolygonOpenLayerToArcgis(polygon);}
return this.serviceUrl+"/"+requestParams.layer+'/query?f=pjson&geometryType=esriGeometryPolygon&geometry='+ring+"&outFields=*&inSR="+requestParams.inSR+"&outSR="+requestParams.outSR+"&spatialRel="+requestParams.spatialRel+"&where="+requestParams.where+"";},convertPolygonOpenLayerToArcgis:function(polygon){var arrPoint=polygon.getVertices();var ring='{"rings":[[['+arrPoint[0].x+','+arrPoint[0].y+']';for(i=0;i<arrPoint.length;i++)
ring+=',['+arrPoint[i].x+','+arrPoint[i].y+']';ring+=']]}';return ring;},genPolygonFromGeo:function(geometry,radius){var reader=new jsts.io.WKTReader();var geometryFactory=new jsts.geom.GeometryFactory();var polyonBuffer;if(geometry.CLASS_NAME=="OpenLayers.Geometry.Point"){var point=geometryFactory.createPoint(new jsts.geom.Coordinate(geometry.x,geometry.y));polyonBuffer=point.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.Polygon"){var arrPoint=geometry.getVertices();var strPolygon="POLYGON ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strPolygon+=","+arrPoint[i].x+" "+arrPoint[i].y;strPolygon+=")";var inputPolygon=reader.read(strPolygon);if(radius==0||radius==undefined)
return geometry;polyonBuffer=inputPolygon.buffer(radius);}
if(geometry.CLASS_NAME=="OpenLayers.Geometry.LineString"){var arrPoint=geometry.getVertices();var strLine="LINESTRING ("+arrPoint[0].x+" "+arrPoint[0].y;for(i=1;i<arrPoint.length;i++)
strLine+=","+arrPoint[i].x+" "+arrPoint[i].y;strLine+=")";var inputLine=reader.read(strLine);polyonBuffer=inputLine.buffer(radius);}
if(polyonBuffer!=undefined){var parser=new jsts.io.OpenLayersParser();polyonBuffer=parser.write(polyonBuffer);}
return polyonBuffer;},CLASS_NAME:"gClient.GeoFinder.ArcGISProvider"});﻿
gClient.gThematic_configDivMap=null;gClient.gThematic_configNameLayer=null;gClient.gThematic_configUrlChoropleth=null;gClient.gThematic_configUrlListAU=null;gClient.gThematic_configCallback=null;gClient.gThematic_layer=null;gClient.gThematic_TinhThanhDuocChon=null;gClient.gThematic_QuanHuyenDuocChon=null;gClient.gThematic_TypeDoiTuong=null;gClient.gThematic_selectControl=null;gClient.gThematic_selectGroup=null;gClient.gThematic_selectIndicator=null;gClient.gThematic_selectYear=null;gClient.gThematic_urlGroupIndicators=null;gClient.gThematic_tenLayer=null;(function($){var methods={init:function(options){var settings=$.extend({'namedivmap':'olmap','nameThematicLayer':'thematiclayer','urlListAU':'','callbackAdministrative':'onchangeSelectAU','urlChoropleth':'','urlRange':'','urlGroupIndicators':'','config':{}},options);if(options==undefined||options==null)options={};gClient.gThematic_configDivMap=((options.namedivmap==undefined||options.namedivmap==null)?'map':options.namedivmap);gClient.gThematic_tenLayer=((options.nameThematicLayer==undefined||options.nameThematicLayer==null)?null:options.nameThematicLayer);gClient.gThematic_configUrlChoropleth=((options.urlChoropleth==undefined||options.urlChoropleth==null)?null:options.urlChoropleth);gClient.gThematic_configCallback='onchangeSelectAU';gClient.gThematic_configUrlListAU=((options.urlListAU==undefined||options.urlListAU==null)?null:options.urlListAU);gClient.gThematic_urlGroupIndicators=((options.urlGroupIndicators==undefined||options.urlGroupIndicators==null)?null:options.urlGroupIndicators);gClient.gThematic_urlRange=((options.urlRange==undefined||options.urlRange==null)?'':options.urlRange);if(options.config!=undefined&&options.config!=null){}
var htmlResult='';htmlResult='<div class="mc-mod">'+'<div id="thematic">'+'<ul class="tm-items">'+'<li class="style-background-object tm-item">'+'<h4 class="style-color">Chọn phạm vi đối tượng</h4>'+'<div class="clear"></div>'+'<p class="left label">Phạm vi</p> '+'<div id="listTinhThanhVietNam">'+'</div>'+'<div id="listDistrictsOfProvinces"></div>'+'<div class="clear"></div>'+'<div id="gThematic_divChonDoiTuong"></div>'+'</li>'+'<li class="style-background-object tm-item">'+'<h4 class="style-color">Nhóm chỉ số</h4>'+'<div class="clear"></div>'+'<p class="left label">Nhóm</p> '+'<div id="gThematic_divComboGroup"></div>'+'<div class="clear"></div>'+'<p class="left label">Chỉ số</p> '+'<div id="gThematic_divComboIndicator"></div>'+'<div class="clear"></div> '+'<p class="left label">Năm</p>'+'<select class="combobox style-border"  style="width:50%;" onchange="fnGThematic_OnSelectedYear(this);">'+'<option value="0">Chọn năm </option>'+'<option value="2009">2009 </option>'+'<option value="2010">2010 </option>'+'<option value="2011">2011 </option>'+'<option value="2012">2012 </option>'+'</select>'+'<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>'+'<a  class="buton-icon-actionrefresh"  title="Tải dữ liệu" href="#" onclick="fnGThematic_LoadData();"><span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp</span></a>'+'</li>'+'<li class="style-background-object tm-item">'+'<h4 class="style-color">Lựa chọn trình bày</h4>'+'<table style="width:100%;">'+'<tr>'+'<td>'+'Hàm '+'</td>'+'<td>'+'<select class="combobox style-border" onchange="onchangeSelectMethod(this, '+"'"+settings.namedivmap+"'"+', '+"'"+settings.nameThematicLayer+"'"+');">'+"<option select='true' value='"+'unSelect'+"'>"+'- lựa chọn -'+"</option>"+"<option select='true' value='"+'uniqueValue'+"'>"+'Giá trị duy nhất'+"</option>"+"<option select='true' value='"+'equalIntervals'+"'>"+'Định nghĩa'+"</option>"+'</select>'+'</td>'+'</tr>'+'<tr>'+'<td>'+'Chia khoảng'+'</td>'+'<td>'+'<div id="g_divSelectSegment">'+'</div>'+'</td>'+'</tr>'+'<tr>'+'<td>'+'Màu cơ bản'+'</td>'+'<td>'+'<input   data-layer="'+settings.nameThematicLayer+'" data-map="'+settings.namedivmap+'" type="text" maxlength="6" size="6" class="color-picker textbox style-border w50 left" id="g_inputColorOriginal" value="#FF1160" />'+'</td>'+'</tr>'+'</table>'+'<div id="g_choiceColor"></div>'+'<label for="g_thematic_amount">Độ trong suốt:</label>'+'<span class="label style-color" id="g_thematic_amount">50%</span>'+'<div class="clear"></div>'+'<div id="g_thematic_transparent" style="margin-right:10px; margin-left:10px;"></div>'+'</li>'+'</div>';$(this).append(htmlResult);var btnThematic='<div class="clear"></div>'+'<ul id="action-bt" class="right">'+'<li><a class="style-background" href="#" onclick="fnCreateChoropleth('+"'"+settings.namedivmap+"'"+","+"'"+settings.nameThematicLayer+"'"+');">Tạo bản đồ</a></li>'+'<li><a class="style-background" href="#" onclick="fnPrintChoropleth('+"'"+settings.namedivmap+"'"+');">In bản đồ</a></li>'+'<li><a class="style-background" href="#" onclick="fnSaveChoropleth('+"'"+settings.namedivmap+"'"+","+"'"+settings.nameThematicLayer+"'"+');">Lưu lại</a></li>'+'</ul>';var buttonCreate='<a class="ui-gthematic-button" href="#" onclick="fnCreateChoropleth('+"'"+settings.namedivmap+"'"+","+"'"+settings.nameThematicLayer+"'"+');">Tạo bản đồ</a>'+'<a class="ui-gthematic-button" href="#" onclick="fnCreateChoropleth('+"'"+settings.namedivmap+"'"+","+"'"+settings.nameThematicLayer+"'"+');">Lưu lại</a>';$(this).append(btnThematic);var segmentDefault='<input class="textbox style-border" type="text" readonly="readonly" maxlength="3" size="6"/>';$("#g_divSelectSegment").append(segmentDefault);var map=gClient.Maps[gClient.gThematic_configDivMap];function requestSuccessAU(data,callback){var format=new OpenLayers.Format.GeoJSON();var html='<select class="combobox style-border" onchange="fnAdministrativeUnitsSelectChangeAu(this,'+"'"+"listTinhThanhVietNam_XaHuyen"+"'"+','+"'"+settings.callbackAdministrative+"'"+');">'+"<option  value='"+'0'+"'>"+'- lựa chọn tất cả -'+"</option>";for(var i=0;i<format.read(data).length;i++){var maTinh=format.read(data)[i].attributes["code"];var tenTinh=format.read(data)[i].attributes["name"];html+="<option value='"+maTinh+"'>"+tenTinh+"</option>";}
html+='</select>';html+='<div class="clear"></div> <p class="left label"></p><div id="listTinhThanhVietNam_XaHuyen"><div/>';$("#listTinhThanhVietNam").append(html);var chonPhamVi='<p class="left label">Đối tượng</p> '+'<input type="text" class="combobox style-border" readOnly="readOnly" value="Chọn đối tượng" disabled="disabled">';$("#gThematic_divChonDoiTuong").html(chonPhamVi);}
jQuery.ajax({dataType:'jsonp',url:settings.urlListAU+'?f=json',success:function(data){requestSuccessAU(data,'onchangeSelectAU');},error:function(){alert("error");}});var htmlDefaultIndicator='<input type="text" class="combobox style-border" readOnly="readOnly" value="Chọn chỉ số" disabled="disabled">';$("#gThematic_divComboIndicator").html(htmlDefaultIndicator);function requestSuccessGroup(data){var htmlGroup='<select onchange="fnGThematicOnchangeSelectGroup(this);" class="combobox style-border">'+'<option value="unselect">Chọn nhóm</option>';for(var i=0;i<data.length;i++){htmlGroup+='<option value="'+data[i].id+'">'+data[i].description+'</option>';}
htmlGroup+='</select>';$("#gThematic_divComboGroup").html(htmlGroup);}
jQuery.ajax({dataType:'jsonp',url:gClient.gThematic_urlGroupIndicators,success:function(data){requestSuccessGroup(data);},error:function(){alert("error");}});$("#g_thematic_transparent").slider({range:"min",value:50,min:1,max:100,slide:function(event,ui){$("#g_thematic_amount").text(ui.value+'%');var newOpacity=(ui.value/100);var layerThematic=gClient.gThematic_configNameLayer;layerThematic.setOpacity(newOpacity);layerThematic.redraw();}});$(".color-picker").miniColors({letterCase:'uppercase',change:function(hex,rgb){colorOriginal=$(this).val();var layerThematic=gClient.gThematic_configNameLayer;for(var i=0;i<layerThematic.cats.length;i++){var colorTemplateValue="#"+fnShowrainbow(i+1,colorOriginal);$("#idKhoang"+i).miniColors('value',colorTemplateValue);}}});},show:function(){},hide:function(){},update:function(content){}};$.fn.gThematic=function(method){if(methods[method]){return methods[method].apply(this,Array.prototype.slice.call(arguments,1));}else if(typeof method==='object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method '+method+' không tồn tại trong jQuery.gThematic');}};})(jQuery);function onchangeSelectMethod(select,divmap,nameThematicLayer){var map=gClient.Maps[divmap];var layerThematic=gClient.gThematic_configNameLayer;layerThematic.cats=[];var selected=select.options[select.selectedIndex].value;if(selected=='uniqueValue'){var minOfArray;var maxOfArray;var newArray=new Array();var arrayResult=new Array();var colorAppend='<div style="width:100%; overflow:scroll; height:200px;" class="choiceColor"><ul>'+'<li class="style-background-sub cc-r1"><p class="left" style="width:30px;">Màu </p> <p class="left" style="width:60px;">Tên  </p><p style="width:50px;" class="left">Từ </p> <p style="width:30px;" class="left">Đến  </p></li>';for(var i=0;i<layerThematic.features.length;i++){newArray[i]=layerThematic.features[i].attributes["value"];}
var j=0;var colorOriginal=$("#g_inputColorOriginal").val();arrayResult=fnUniqueArray(newArray);arrayResult.sort(function(a,b){return a-b});for(var i=0;i<arrayResult.length;i++){var colorTemplateValue="";colorTemplateValue="#"+fnShowrainbow(i+1,colorOriginal);var cat=new gClient.Category(i,colorTemplateValue,arrayResult[i],arrayResult[i],divmap,nameThematicLayer);colorAppend+=cat.toHTML(i);layerThematic.cats.push(cat);}
colorAppend+='</ul></div>';var htmlSegment='<input class="textbox style-border" type="text" readonly="readonly" value="'+arrayResult.length+'" maxlength="3" size="6"/>';$("#g_divSelectSegment").html('');$("#g_divSelectSegment").append(htmlSegment);minOfArray=fnMinOfArray(arrayResult);maxOfArray=fnMaxOfArray(arrayResult);$("#g_choiceColor").html('');$("#g_choiceColor").append(colorAppend);$(".color-picker").miniColors({letterCase:'uppercase',change:function(hex,rgb){var idcat=$(this).data("catid");layerThematic.cats[idcat].color=$(this).val();}});}
else if(selected=='equalIntervals'){var minOfArray;var maxOfArray;var arrayResult=new Array();var colorAppend='<div style="width:100%; overflow:scroll; height:200px;" class="choiceColor"><ul>'+'<li class="style-background-sub cc-r1"><p class="left" style="width:30px;">Màu </p> <p class="left" style="width:60px;">Tên  </p><p style="width:50px;" class="left">Từ </p> <p style="width:30px;" class="left">Đến  </p></li>';for(var i=0;i<layerThematic.features.length;i++){arrayResult[i]=layerThematic.features[i].attributes["value"];}
arrayResult.sort(function(a,b){return a-b});minOfArray=arrayResult[0];maxOfArray=arrayResult[arrayResult.length-1];var htmlSelectSegement='<input class="textbox style-border" data-divmap='+"'"+divmap+"'"+' data-namethematiclayer='+"'"+nameThematicLayer+"'"+' onchange="fnOnChangeSelectSegment(this);" type="text" value="5" maxlength="3" size="6"/>';$("#g_divSelectSegment").html('');$("#g_divSelectSegment").append(htmlSelectSegement);var numberSegment=5;var valueJump;valueJump=(maxOfArray-minOfArray)/numberSegment;colorOriginal=$("#g_inputColorOriginal").val();for(var i=0;i<numberSegment;i++){var minCat=minOfArray*1+valueJump*i;var maxCat=(minCat+valueJump);var colorTemplateValue="";colorTemplateValue="#"+fnShowrainbow(i+1,colorOriginal);var cat=new gClient.Category(i,colorTemplateValue,minCat,maxCat,divmap,nameThematicLayer);colorAppend+=cat.toHTML(i);layerThematic.cats.push(cat);}
colorAppend+='</ul></div>';$("#g_choiceColor").html('');$("#g_choiceColor").append(colorAppend);$(".color-picker").miniColors({letterCase:'uppercase',change:function(hex,rgb){var idcat=$(this).data("catid");layerThematic.cats[idcat].color=$(this).val();}});}}
function fnUniqueArray(arrayName){var newArray=new Array();label:for(var i=0;i<arrayName.length;i++){for(var j=0;j<newArray.length;j++)
{if(newArray[j]==arrayName[i])
continue label;}
newArray[newArray.length]=arrayName[i];}
return newArray;}
function fnCheckElementUnique(arrayName,x){var count=0;for(var i=0;i<arrayName.length;i++)
if(x==arrayName[i]){count++;}
if(count==1){return true;}else{return false;}}
function fnMinOfArray(arrayName){var result=arrayName[0];for(var i=0;i<=arrayName.length;i++){if(result>arrayName[i]){result=arrayName[i];}}
return result;}
function fnMaxOfArray(arrayName){var result=arrayName[0];for(var i=0;i<arrayName.length;i++){if(result<arrayName[i]){result=arrayName[i];}}
return result;}
function fnColorscale(hexstr,scalefactor){var r=scalefactor;var a,i;if(r<0||typeof(hexstr)!='string')
return hexstr;hexstr=hexstr.replace(/[^0-9a-f]+/ig,'');if(hexstr.length==3){a=hexstr.split('');}else if(hexstr.length==6){a=hexstr.match(/(\w{2})/g);}else
return hexstr;for(i=0;i<a.length;i++){if(a[i].length==2)
a[i]=parseInt(a[i],16);else{a[i]=parseInt(a[i],16);a[i]=a[i]*16+a[i];}}
var maxColor=parseInt('ff',16);function relsize(a){if(a==maxColor)
return Infinity;return a/(maxColor-a);}
function relsizeinv(y){if(y==Infinity)
return maxColor;return maxColor*y/(1+y);}
for(i=0;i<a.length;i++){a[i]=relsizeinv(relsize(a[i])*r);a[i]=Math.floor(a[i]).toString(16);if(a[i].length==1)
a[i]='0'+a[i];}
return a.join('');}
function fnShowrainbow(f,colorOriginal){var colorcell,hex,i,nhex;hex=colorOriginal;hex=hex.replace(/\W/g,'');nhex=fnColorscale(hex,f);return nhex;}
function fnSelectedEqualIntervals(select,divmap,nameThematicLayer){var minOfArray;var maxOfArray;var arrayResult=new Array();var colorAppend='<div style="width:100%; overflow:scroll; height:200px;" class="choiceColor"><ul>'+'<li class="style-background-sub cc-r1"><p class="left" style="width:30px;">Màu </p> <p class="left" style="width:60px;">Tên  </p><p style="width:50px;" class="left">Từ </p> <p style="width:30px;" class="left">Đến  </p></li>';var layerThematic=gClient.gThematic_configNameLayer;layerThematic.cats=[];for(var i=0;i<layerThematic.features.length;i++){arrayResult[i]=layerThematic.features[i].attributes["value"];}
arrayResult.sort(function(a,b){return a-b});minOfArray=arrayResult[0];maxOfArray=arrayResult[arrayResult.length-1];var numberSegment=$(select).val();var valueJump;valueJump=(maxOfArray-minOfArray)/numberSegment;colorOriginal=$("#g_inputColorOriginal").val();for(var i=0;i<numberSegment;i++){var minCat=minOfArray*1+valueJump*i;var maxCat=(minCat+valueJump);var colorTemplateValue="";colorTemplateValue="#"+fnShowrainbow(i+1,colorOriginal);var cat=new gClient.Category(i,colorTemplateValue,minCat,maxCat,divmap,nameThematicLayer);colorAppend+=cat.toHTML(i);layerThematic.cats.push(cat);}
colorAppend+='</ul></div>';$("#g_choiceColor").html('');$("#g_choiceColor").append(colorAppend);$(".color-picker").miniColors({letterCase:'uppercase',change:function(hex,rgb){var idcat=$(this).data("catid");layerThematic.cats[idcat].color=$(this).val();}});}
function fnOnChangeInputFrom(inputFrom){var idcat=$(inputFrom).data("catid");var divmap=$(inputFrom).data("divmap");var namelayer=$(inputFrom).data("namelayer");var map=gClient.Maps[divmap];var layerThematic=map.getLayersBy('name',namelayer)[0];layerThematic.cats[idcat].min=$(inputFrom).val();}
function fnOnChangeInputTo(inputTo){var idcat=$(inputTo).data("catid");var divmap=$(inputTo).data("divmap");var namelayer=$(inputTo).data("namelayer");var map=gClient.Maps[divmap];var layerThematic=map.getLayersBy('name',namelayer)[0];layerThematic.cats[idcat].max=$(inputTo).val();}
function fnOnChangeSelectSegment(select){var divmap=$(select).data("divmap");var namelayer=$(select).data("namethematiclayer");fnSelectedEqualIntervals(select,divmap,namelayer);}
function fnCreateChoropleth(divmap,namelayer){var map=gClient.Maps[divmap];var thematiclayer=gClient.gThematic_configNameLayer;var listfeature=thematiclayer.features;for(var i=0;i<listfeature.length;i++){var valuetem=listfeature[i].attributes["value"];for(var j=0;j<thematiclayer.cats.length;j++){if(thematiclayer.cats[j].check(valuetem)==true){listfeature[i].attributes["colour"]=thematiclayer.cats[j].color;break;}}}
thematiclayer.visibility=true;thematiclayer.setOpacity(1);thematiclayer.redraw();var bboxFeatures=gClient.gThematic_configNameLayer.getDataExtent();map.zoomToExtent(bboxFeatures);}
function fnPrintChoropleth(divmap){$("#"+divmap).printElement();}
function fnOnchangeSelectAU(select){var type=select.options[select.selectedIndex].value;gClient.gThematic_TypeDoiTuong=type;}
function fnAdministrativeUnitsSelectChangeAu(select,idselect,callback){var tinhthanh=select.options[select.selectedIndex].value;if(tinhthanh!='0'){gClient.gThematic_TinhThanhDuocChon=tinhthanh;gClient.gThematic_QuanHuyenDuocChon=null;gClient.gThematic_TypeDoiTuong=null;var urlAU=gClient.gThematic_configUrlListAU+'/'+gClient.gThematic_TinhThanhDuocChon+'/districts?f=json';function requestSuccessAU(data){var format=new OpenLayers.Format.GeoJSON();var html='<select class="combobox style-border" onchange="fnOnchangeSelectDistrictsOfProvinces(this);">'+"<option  value='"+'0'+"'>"+'- lựa chọn tất cả -'+"</option>";for(var i=0;i<format.read(data).length;i++){var maTinh=format.read(data)[i].attributes["code"];var tenTinh=format.read(data)[i].attributes["name"];html+="<option value='"+maTinh+"'>"+tenTinh+"</option>";}
html+='</select>';html+='</div> <p class="left label"></p><div id="listTinhThanhVietNam_XaHuyen"><div/>';$("#listDistrictsOfProvinces").html(html);}
jQuery.ajax({dataType:'jsonp',url:urlAU,success:function(data){requestSuccessAU(data,'onchangeSelectAU');},error:function(){alert("error");}});var _valueID=select.options[select.selectedIndex].value;var htmlCombox='<p class="left label">Đối tượng</p> '+'<select class="combobox style-border" onchange="fnOnchangeSelectAU(this);'+'">'+"<option  value='"+'unselect'+"'>"+'- Chọn đối tượng -'+"</option>"+"<option  value='"+'xaphuong'+"'>"+'Các xã phường'+"</option>"+"<option  value='"+'quanhuyen'+"'>"+'Các quận huyện'+"</option>"+'</select>';$("#gThematic_divChonDoiTuong").html(htmlCombox);}else{gClient.gThematic_TinhThanhDuocChon=null;gClient.gThematic_QuanHuyenDuocChon=null;gClient.gThematic_TypeDoiTuong=null;$("#listDistrictsOfProvinces").html('');var hiddenPhamVi='<p class="left label">Đối tượng</p> '+'<input type="text" class="combobox style-border" readOnly="readOnly" value="Chọn đối tượng" disabled="disabled">';$("#gThematic_divChonDoiTuong").html(hiddenPhamVi);}}
function fnOnchangeSelectDistrictsOfProvinces(select){var quanhuyen=select.options[select.selectedIndex].value;if(quanhuyen!='0'){gClient.gThematic_QuanHuyenDuocChon=quanhuyen;gClient.gThematic_TypeDoiTuong=null;var htmlCombox='<p class="left label">Đối tượng</p> '+'<select class="combobox style-border" onchange="fnOnchangeSelectAU(this);'+'">'+"<option  value='"+'0'+"'>"+'- Chọn đối tượng -'+"</option>"+"<option  value='"+'xaphuong'+"'>"+'Các xã phường'+"</option>"+'</select>';$("#gThematic_divChonDoiTuong").html(htmlCombox);}
else{gClient.gThematic_QuanHuyenDuocChon=null;gClient.gThematic_TypeDoiTuong=null;var htmlCombox='<p class="left label">Đối tượng</p> '+'<select class="combobox style-border" onchange="fnOnchangeSelectAU(this);'+'">'+"<option  value='"+'0'+"'>"+'- Chọn đối tượng -'+"</option>"+"<option  value='"+'xaphuong'+"'>"+'Các xã phường'+"</option>"+"<option  value='"+'quanhuyen'+"'>"+'Các quận huyện'+"</option>"+'</select>';$("#gThematic_divChonDoiTuong").html(htmlCombox);}}
function onThematicPopupClose(evt){gClient.gThematic_selectControl.unselectAll();};function onThematicFeatureSelect(feature){var selectedFeature=feature;while(feature.layer.map.popups.length){feature.layer.map.removePopup(feature.layer.map.popups[0]);}
var contentPopup=feature.attributes["name"];var popup=new OpenLayers.Popup.FramedCloud("chicken",feature.geometry.getBounds().getCenterLonLat(),null,contentPopup,null,true,onThematicPopupClose);feature.popup=popup;popup.autoSize=true;popup.minSize=new OpenLayers.Size(150,80);popup.maxSize=new OpenLayers.Size(450,700);feature.layer.map.addPopup(popup);}
function onThematicFeatureUnselect(feature){if(feature.popup){feature.layer.map.removePopup(feature.popup);feature.popup.destroy();delete feature.popup;}}
function fnGThematicOnchangeSelectGroup(select){var nhom=select.options[select.selectedIndex].value;if(nhom!='unselect'){gClient.gThematic_selectGroup=nhom;function requestSuccessIndicator(data){var htmlComboIndicator='<select onchange="fnGThematicOnchangeSelectIndicator(this);" class="combobox style-border">'+'<option value="unselect">Chọn chỉ số</option>';for(var i=0;i<data.length;i++){htmlComboIndicator+='<option value="'+data[i].id+'">'+data[i].description+'</option>';}
htmlComboIndicator+='</select>';$("#gThematic_divComboIndicator").html(htmlComboIndicator);}
var urlGroupIndicators=gClient.gThematic_urlGroupIndicators+'/'+gClient.gThematic_selectGroup+"/Indicators";jQuery.ajax({dataType:'jsonp',url:urlGroupIndicators,success:function(data){requestSuccessIndicator(data);},error:function(){alert("error get file group indicator");}});}
else{gClient.gThematic_selectGroup=null;gClient.gThematic_selectIndicator=null;var htmlDefaultIndicator='<input type="text" class="combobox style-border" readOnly="readOnly" value="Chọn chỉ số" disabled="disabled">';$("#gThematic_divComboIndicator").html(htmlDefaultIndicator);}}
function fnGThematicOnchangeSelectIndicator(select){var chiso=select.options[select.selectedIndex].value;if(chiso!='unselect'){gClient.gThematic_selectIndicator=chiso;function requestSuccessOnchangeSelectIndicator(data){}
var nhom=gClient.gThematic_selectGroup;var chiso=gClient.gThematic_selectIndicator;}
else{gClient.gThematic_selectIndicator=null;}}
function fnSaveChoropleth(divmap,namelayer){var config={};config.divmap=divmap;config.tinh=((gClient.gThematic_TinhThanhDuocChon==null)?'':gClient.gThematic_TinhThanhDuocChon);config.huyen=((gClient.gThematic_QuanHuyenDuocChon==null)?'':gClient.gThematic_QuanHuyenDuocChon);config.chiso=gClient.gThematic_selectIndicator;config.nhom=gClient.gThematic_selectGroup;config.trinhbay={};config.trinhbay.cats=[];var map=gClient.Maps[divmap];var thematiclayer=gClient.gThematic_configNameLayer;var listfeature=thematiclayer.features;for(var i=0;i<listfeature.length;i++){var valuetem=listfeature[i].attributes["value"];for(var j=0;j<thematiclayer.cats.length;j++){if(thematiclayer.cats[j].check(valuetem)==true){listfeature[i].attributes["colour"]=thematiclayer.cats[j].color;var cat_item={};cat_item.color=thematiclayer.cats[j].color;cat_item.value=listfeature[i].attributes["value"];config.trinhbay.cats.push(cat_item);break;}}}
alert('Cấu hình được lưu lại :'+fnConvertObjectToString(config));}
function fnGThematic_OnSelectedYear(select){var selected=select.options[select.selectedIndex].value;if(selected!='0'){gClient.gThematic_selectYear=selected;}
else{gClient.gThematic_selectYear=null;}}
function fnConvertObjectToString(o){var parse=function(_o){var a=[],t;for(var p in _o){if(_o.hasOwnProperty(p)){t=_o[p];if(t&&typeof t=="object"){a[a.length]=p+":{ "+arguments.callee(t).join(", ")+"}";}
else{if(t==null){t='null';}
if(typeof t=="string"){a[a.length]=[p+": \""+t.toString()+"\""];}
else{a[a.length]=[p+": "+t.toString()];}}}}
return a;}
return"{"+parse(o).join(", ")+"}";}
function fnGThematic_LoadData(){var tinh=gClient.gThematic_TinhThanhDuocChon;var huyen=gClient.gThematic_QuanHuyenDuocChon;var type=gClient.gThematic_TypeDoiTuong;var nhom=gClient.gThematic_selectGroup;var chiso=gClient.gThematic_selectIndicator;var nam=gClient.gThematic_selectYear;if(type!=null){gClient.gThematic_TypeDoiTuong=type;var urlnew=gClient.gThematic_configUrlChoropleth+"/provinces";if(gClient.gThematic_QuanHuyenDuocChon!=null){urlnew=gClient.gThematic_configUrlChoropleth+'/districts/'+gClient.gThematic_QuanHuyenDuocChon+"/wards";}
else
{var proviceChoice=gClient.gThematic_TinhThanhDuocChon;if(proviceChoice=='0'){proviceChoice='';}
else{if(type=='xaphuong'){proviceChoice="/"+proviceChoice+"/wards";}
else if(type=='quanhuyen'){proviceChoice="/"+proviceChoice+"/districts";}
else{proviceChoice="/"+proviceChoice+"/districts";}}
urlnew+=proviceChoice;}
var map=gClient.Maps[gClient.gThematic_configDivMap];gClient.gThematic_configNameLayer=new gClient.Layer.Choropleth(gClient.gThematic_tenLayer,urlnew,{onload:fnGetValueformGroupIndicator});gClient.gThematic_configNameLayer.setOpacity(0);map.addLayer(gClient.gThematic_configNameLayer);gClient.gThematic_selectControl=new OpenLayers.Control.SelectFeature(gClient.gThematic_configNameLayer,{onSelect:onThematicFeatureSelect,onUnselect:onThematicFeatureUnselect,stopSingle:true});map.addControl(gClient.gThematic_selectControl);gClient.gThematic_selectControl.activate();gClient.gThematic_configNameLayer.setVisibility(true,true);}
else{gClient.gThematic_TypeDoiTuong=null;}}
function fnGetValueformGroupIndicator(){function requestSuccessOnchangeSelectIndicator(data){var attributesVaule_Goc='';var attributesValue_Sau='';var thematiclayer=gClient.gThematic_configNameLayer;var listfeature=thematiclayer.features;for(var i=0;i<listfeature.length;i++){var value_item=listfeature[i].attributes["value"];attributesVaule_Goc+='['+value_item+'] ,';}
for(var i=0;i<listfeature.length;i++){var code_item=listfeature[i].attributes["code"];for(var j=0;j<data.length;j++){if(code_item==data[j].au_code){listfeature[i].attributes["value"]=data[j].value;break;}}}
for(var i=0;i<listfeature.length;i++){var value_item=listfeature[i].attributes["value"];attributesValue_Sau+='['+value_item+'] ,';}}
var url_range=gClient.gThematic_urlRange;var tinh_thanh=gClient.gThematic_TinhThanhDuocChon;var doi_tuong=gClient.gThematic_TypeDoiTuong;var nam=gClient.gThematic_selectYear;var chiso_id=gClient.gThematic_selectIndicator;if(doi_tuong=='xaphuong'){url_range+='/range/'+tinh_thanh+'/level/'+'2/statdatas';}
if(doi_tuong=='quanhuyen'){url_range+='/range/'+tinh_thanh+'/level/'+'1/statdatas';}
if(nam!="0"){url_range+="?time="+nam+"&indicatorId="+chiso_id;}
jQuery.ajax({dataType:'jsonp',url:url_range,success:function(data){requestSuccessOnchangeSelectIndicator(data);},error:function(){alert("error get file : "+urlGroupIndicators);}});}